<?php
/**
 * @version		1.0.0 cam assistant $
 * @package		cam_assistant
 * @copyright	Copyright Â© 2010 - All rights reserved.
 * @license		GNU/GPL
 * @author		
 * @author mail	nobody@nobody.com
 *
 *
 * @MVC architecture generated by MVC generator tool at http://www.alphaplug.com

 
 
 */

// no direct access`
defined('_JEXEC') or die('Restricted access');

jimport( 'joomla.application.component.model' );
require_once ( JPATH_BASE .DS.'libraries'.DS.'tcpdf'.DS.'config'.DS.'lang'.DS.'eng.php' );
require_once ( JPATH_BASE .DS.'libraries'.DS.'tcpdf'.DS.'tcpdf.php' );
/*class MYPDF extends TCPDF {

		public function Footer() {
			$this->SetY(-15);
			//$this->SetFontSize(8);
			if($this->pageno){
			}$this->pageno=$this->pageno+1;
			//$this->SetFontSize(7);
			$this->Cell(0, 5, 'Copyright 2014-2015 HOA Assistant, LLC', 0, 0, 'C');
		}

		public function Header() {
			$this->SetY(-15);
		}
}*/


class rfpModelRfp extends Jmodel
{
	function __construct(){
		parent::__construct();
	}
	
	function store($data)
	{
	/* 	echo "<pre>";
		print_r($data);
		print_r($row);exit;*/
		// give me JTable object		
		$row =& $this->getTable();
		
		jimport('joomla.user.helper');
		
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
		
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		// Store the  detail record into the database
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		return true;
	}
	//
	function store_update($data)
	{
		// give me JTable object	
		$row =& $this->getTable();
	/*	echo "<pre>";
		print_r($data);
		print_r($row);exit;*/
		jimport('joomla.user.helper');
		
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
		
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		// Store the  detail record into the database
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		return true;
	}
	//
	function tasks_store($data)
	{
	 	// give me JTable object	
		$row =& $this->getTable('sowlinetasks');
		//echo "789<pre>";
		//print_r($data);
		//print_r($row);exit;
		jimport('joomla.user.helper');
		
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		/*echo "<pre>";
		print_r($data);
		print_r($row);*/
		// Store the  detail record into the database
		if (!$id=$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
      $id = $this->_db->insertid(); 
		return $id;
	
		//return true;
	}
	//Storing line Items to maintain temparary records for the last modification details
	/*function temptasks_store($data)
	{
	 	// give me JTable object	
		$row =& $this->getTable('tempsowlinetasks');
		jimport('joomla.user.helper');
		
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		// Store the  detail record into the database
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		return true;
	}*/
	//
	function reqdocs_store($data)
	{
	 	// give me JTable object	
		$row =& $this->getTable('sowdocs');
		/*echo "789<pre>";
		print_r($data);
		print_r($row);exit;*/
        jimport('joomla.user.helper');
		
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		// Store the  detail record into the database
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		return true;
	}
	//
	function rfpsplreqs_store($data)
	{
	 	// give me JTable object	
		$row =& $this->getTable('rfpreqinfo');
		jimport('joomla.user.helper');
	/*	echo "789<pre>";
		print_r($data);
		print_r($row);exit;*/
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		// Store the  detail record into the database
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		return true;
	}
         function store3($data){
JTable::addIncludePath(JPATH_COMPONENT.DS.'tables');
$row =& $this->getTable('propertydocs');
$row = JTable::getInstance('propertydocs','Table');
        if (!$row->bind($data)) {
                $this->setError($this->_db->getErrorMsg());
                return false;
        }
        if (!$row->check()) {
                $this->setError($this->_db->getErrorMsg());
                return false;
        }
        if (!$row->store()) {
                $this->setError($row->getErrorMsg());
                return false;
        }
        return true;
}
	//function to get temparary line items data
	function get_tempLineTasks($rfpid) 
	{
		global $mainframe;
		$db=&JFactory::getDBO();
		$query = "SELECT * FROM #__cam_rfpsow_linetask WHERE rfp_id=".$rfpid." ORDER BY task_id ASC";
		$db->setQuery($query);
		$TempLineItems = $db->loadObjectList();
		return $TempLineItems;
	}
	function get_tempdocs($rfpid) 
	{
		global $mainframe;
		$db=&JFactory::getDBO();
		$query = "SELECT * FROM #__cam_rfpsow_docs WHERE rfp_id=".$rfpid." ORDER BY doc_id ASC";
		$db->setQuery($query);
		$Temptempdocs = $db->loadObjectList();
		return $Temptempdocs;
	}
	//function to display Properties list in the Dropdown
	function getProperties() 
	{
		global $mainframe;
	$user =& JFactory::getUser();
	$user_id = $user->get('id');
	$db=&JFactory::getDBO();
	$cid = $_REQUEST['cid'];
//	echo $cid; exit;
	if($cid){
//	echo $cid; echo "In if"; exit;
	$user_id = $cid;
	}
	else {
	$user_id = $user_id;
	}
	$query = "SELECT id FROM #__cam_camfirminfo WHERE cust_id=".$user_id;
	$db->setQuery($query);
	$comp_id = $db->loadResult();
	if(!$comp_id)
	{
		$query = "SELECT comp_id FROM #__cam_customer_companyinfo WHERE cust_id=".$user_id;
		$db->setQuery($query);
		$comp_id = $db->loadResult();
	}
	$usertype = $user->get('user_type');
	$query = "SELECT U.id as value,U.property_name as text,U.property_name_origin as origin FROM #__cam_property as U, #__users as V where U.publish='0' and U.`property_manager_id` = V.`id` and U.property_manager_id=".$user_id." order by U.property_name ASC ";
	//if($usertype != '13' || $cid)
	//$query .= " AND U.`property_manager_id` =".$user_id;
	//$query .= " ORDER BY U.property_name ASC";
	$db->Setquery($query);
		$propertyList = $db->loadObjectList();
		//print_r($propertyList);
		
if($user->dmanager == 'yes'){
	$query_managers = "SELECT managerid FROM #__cam_invitemanagers WHERE dmanager=".$user_id;
	$db->setQuery($query_managers);
	$standard_managers = $db->loadObjectList();
		$where  = 'property_manager_id='.$user_id;
		for($s=0; $s<count($standard_managers);$s++){
		$where = $where." OR U.property_manager_id='".$standard_managers[$s]->managerid."' ";
		$where = str_replace('OR OR','OR',$where);
		}
 	$query = "SELECT U.id as value,U.property_name as text,U.property_name_origin as origin FROM #__cam_property as U, #__users as V where U.publish='0' and U.`property_manager_id` = V.`id` AND  (".$where.") order by U.property_name ASC";
	$db->Setquery($query);
		$propertyList = $db->loadObjectList();
	}
	
	if($user->user_type == '13' && $user->accounttype != 'master'){
		$sql = "SELECT id from #__cam_camfirminfo where cust_id=".$user->id." ";
		$db->Setquery($sql);
		$companyid = $db->loadResult();
					$sql_cid = "SELECT cust_id from #__cam_customer_companyinfo where comp_id=".$companyid." ";
					$db->Setquery($sql_cid);
					$manageridsc = $db->loadObjectList();
						if($manageridsc) {
							foreach( $manageridsc as $last_mans){
								$total_mangrsc[] = $last_mans->cust_id ;
							}
						}
						$useridc = array($user->id);
						if($total_mangrsc){
						$total_mangrsc = array_merge($useridc,$total_mangrsc); 
						}
						else{
						$total_mangrsc[] = $user->id; 
						}
						$totalcust_id1_arrc = implode($total_mangrsc,',');
						if(!$cid){
						$conditionc = " property_manager_id IN (".$totalcust_id1_arrc.")";
						}else{
						$conditionc = " property_manager_id IN (".$cid.")";
						}
		$query = "SELECT U.id as value,U.property_name as text,U.property_name_origin as origin FROM #__cam_property as U, #__users as V where U.publish='0' and U.`property_manager_id` = V.`id` AND  (".$conditionc.") order by U.property_name ASC";
		$db->Setquery($query);
		$propertyList = $db->loadObjectList();
		
	}
	
	
	if($user->user_type == '13' && $user->accounttype == 'master'){
		$sql1 = "SELECT firmid from #__cam_masteraccounts where masterid=".$user->id." ";
			$db->Setquery($sql1);
			$subfirms = $db->loadObjectlist();
			//echo "<pre>"; print_r($subfirms); echo "</pre>";
	if($subfirms)
		{
			for( $a=0; $a<count($subfirms); $a++ )
				{
					$firmid1[] = $subfirms[$a]->firmid;
					$sql = "SELECT id from #__cam_camfirminfo where cust_id=".$subfirms[$a]->firmid." ";
					$db->Setquery($sql);
					$companyid[] = $db->loadResult();
											
				}
				//echo "<pre>"; print_r($firmid1); echo "</pre>";	
        }
			
	if($companyid)
		{
         	for( $c=0; $c<count($companyid); $c++ )
				{
					$sql_cid = "SELECT cust_id from #__cam_customer_companyinfo where comp_id=".$companyid[$c]." ";
					$db->Setquery($sql_cid);
					$managerids = $db->loadObjectList();
						if($managerids) {
							foreach( $managerids as $last_mans){
								$total_mangrs[] = $last_mans->cust_id ;
							}
						}
               }
        }
		
	if($firmid1 && $total_mangrs )
		{
            $total_mangrs = array_merge($total_mangrs,$firmid1); 
        }
        if($firmid1){
            for( $d=0; $d<count($firmid1); $d++ ){
        $query = "SELECT id FROM #__cam_camfirminfo WHERE cust_id=".$firmid1[$d];
	$db->setQuery($query);
	$comp_id = $db->loadResult();
	$userid=array($user->id);
	$query_mans = "SELECT cust_id from #__cam_customer_companyinfo where comp_id = ".$comp_id." ";
	$db->setQuery($query_mans);
        $Managers_list1 = $db->loadObjectList();
                if($Managers_list1) {
                        foreach( $Managers_list1 as $Managers_list2){
                                $Managers_list[] = $Managers_list2->cust_id ;
                        }
                }
            }
        if($Managers_list){
        $total_mangrs = array_merge($Managers_list,$firmid1);
            } else {
         $total_mangrs = $firmid1;        
            }
        }		
        $userid=array($user->id);
        if($total_mangrs){
        $total_mangrs = array_merge($userid,$total_mangrs); 
		}
		else{
		$total_mangrs[] = $user->id; 
		}
		$totalcust_id1_arr = implode($total_mangrs,',');
		
		if(!$cid){
		$condition = " property_manager_id IN (".$totalcust_id1_arr.")";
		}else{
		$condition = " property_manager_id IN (".$cid.")";
		}
		
		
		
		$query = "SELECT U.id as value,U.property_name as text,U.property_name_origin as origin FROM #__cam_property as U, #__users as V where U.publish='0' and U.`property_manager_id` = V.`id` AND  (".$condition.") order by U.property_name ASC";
		$db->Setquery($query);
		$propertyList = $db->loadObjectList();
		 
	}
	
	
		return $propertyList;
	}
	//function to get Property name for displaying in mail the content,....etc
	function getPropertyName($property_id) 
	{
		global $mainframe;
		$db=&JFactory::getDBO();
		$query = "SELECT property_name  FROM #__cam_property WHERE id=".$property_id;
		$db->setQuery($query);
		$propertyName = $db->loadResult();
		return $propertyName;
	}
	//function to get company id for adding a property
	function getCompanyID($userid) 
	{
		global $mainframe;
		$db=&JFactory::getDBO();
		$query = "SELECT id FROM #__cam_camfirminfo WHERE cust_id=".$userid;
		$db->setQuery($query);
		$comp_id = $db->loadResult();
		if(!$comp_id)
		{
			$query = "SELECT comp_id FROM #__cam_customer_companyinfo WHERE cust_id=".$userid;
			$db->setQuery($query);
			$comp_id = $db->loadResult();
		}
		return $comp_id;
	}
	//function to get Tax ids list
	/*function getProperty_TaxIDs() 
	{
		global $mainframe;
		$db=&JFactory::getDBO();
		$query = "SELECT tax_id FROM #__cam_property ORDER BY id ASC";
		$db->setQuery($query);
		$ptaxid = $db->loadObjectList();
		return $ptaxid;
	}*/

	function userinfo() 
	{
		global $mainframe;
		$db=&JFactory::getDBO();
		$user=&JFactory::getuser();
		$query = "SELECT U.*, R.* FROM #__cam_customer_companyinfo  as R
		LEFT JOIN  #__users as U ON R.cust_id = U.id
		LEFT JOIN #__cam_camfirminfo as C ON C.id=R.comp_id where R.cust_id='".$user->id."'";
		$db->setQuery($query);
		$userinfo = $db->loadObject();
			
			return $userinfo;
	} 
	//function to get Splrequirements in Review RFP
	function get_Review_SplRequiremntCats() 
	{
		global $mainframe;
		$db=&JFactory::getDBO();
	    $rfp_id = JRequest::getVar('rfpid','');
	    $user = JFactory::getUser();
		$sql = " SELECT b.req_parentid as main_id, a.req_title as main_title FROM jos_cam_rfpreq_categories as a , jos_cam_rfpreq_info as b  WHERE a.req_id = b.req_parentid 	 and b.rfp_id = ".$rfp_id."   group by b.req_parentid order by b.req_parentid ";
		$db->Setquery($sql);
		$main_cat = $db->loadObjectList();
		$SPLRequirements_details['main'] = $main_cat;
		$sql = " SELECT DISTINCT b.req_parentid as main_id,b.price, b.req_subparentid as sub_id, a.req_title as sub_title FROM jos_cam_rfpreq_categories as a , jos_cam_rfpreq_info as b  WHERE a.req_id = b.req_subparentid and b.rfp_id = ".$rfp_id." AND  b.req_subparentid != 0  order by b.req_parentid ";
		$db->Setquery($sql);
		$sub_cat = $db->loadObjectList();
		$SPLRequirements_details['sub'] = $sub_cat;
		$sql = " SELECT b.req_parentid as main_id,b.price, b.req_subparentid as sub_id, b.req_id as child_id, a.req_title as child_title FROM jos_cam_rfpreq_categories as a , jos_cam_rfpreq_info as b  WHERE a.req_id = b.req_id and b.rfp_id = ".$rfp_id." AND b.req_parentid != 0 AND req_subparentid != 0  order by b.req_parentid ";
		$db->Setquery($sql);
		$SPLRequirements_details['child'] = $db->loadObjectList();
		// echo "<pre>"; print_r($SPLRequirements_details);  exit;
		return $SPLRequirements_details;
	}	
	
	//function to get Splrequirements in edit RFP
	function get_Edit_SplRequiremntCats() 
	{
		global $mainframe;
		$db=&JFactory::getDBO();
	    $rfp_id = JRequest::getVar('rfpid','');
	    $user = JFactory::getUser();
	    $sql = " SELECT b.req_parentid as main_id FROM jos_cam_rfpreq_categories as a , jos_cam_rfpreq_info as b  WHERE a.req_id = b.req_parentid 	 and b.rfp_id = ".$rfp_id."   group by b.req_parentid order by b.req_parentid ";
	    $db->Setquery($sql);
	    $main_cat = $db->loadResultArray();
	    $Edit_reqCatList['main'] = $main_cat;
	    $sql = " SELECT b.req_subparentid as sub_id, a.req_title as sub_title FROM jos_cam_rfpreq_categories as a , jos_cam_rfpreq_info as b  WHERE a.req_id = b.req_subparentid and b.rfp_id = ".$rfp_id." AND  req_subparentid != 0  order by b.req_parentid ";
	    $db->Setquery($sql);
	    $sub_cat = $db->loadResultArray();
	    $Edit_reqCatList['sub'] = $sub_cat;
	    $sql = " SELECT  b.req_id as child_id FROM jos_cam_rfpreq_categories as a , jos_cam_rfpreq_info as b  WHERE a.req_id = b.req_id and b.rfp_id = ".$rfp_id." AND b.req_parentid != 0 AND req_subparentid != 0  order by b.req_parentid ";
	    $db->Setquery($sql);
	    $child = $db->loadResultArray();
	    $Edit_reqCatList['child'] = $child;
		// echo "<pre>"; print_r($main_cat);  exit;
		return $Edit_reqCatList;
	}	
	
	//function to display Special Requirement Categoies
	// BY sateesh
	function getSplRequiremntCats($pid) 
	{
		global $mainframe;
		$db=&JFactory::getDBO();
		$query = "SELECT req_id as id,req_title FROM #__cam_rfpreq_categories WHERE req_parentid=".$pid." ORDER BY req_id ASC";
		$db->setQuery($query);
		$reqCatList = $db->loadAssocList();
		return $reqCatList;
	}
	
	//Completed
function get_Edit_SPLReq_Category()
	 {
	  $db = JFactory::getDBO();
	  $rfp_id = JRequest::getVar('rfp_id','');
	  $sql = " SELECT * FROM jos_cam_rfpreq_categories where req_parentid=0";
	  $db->Setquery($sql);
	  $categories = $db->loadObjectList();
	  return $categories;
	 }
	 
	 //function to get DOCS info in review_rfp_form
	function get_DOCSinfo()
	{
	    $db = JFactory::getDBO();
		$rfp_id = JRequest::getVar('rfpid','');
		$user = JFactory::getUser();
		$sql = 'SELECT * FROM #__cam_rfpsow_docs WHERE rfp_id = '.$rfp_id ;
		$db->Setquery($sql);
		$DOCS_details = $db->loadObjectList();
		//echo "<pre>"; print_r($DOCS_details);
		return $DOCS_details;
	}
	
	 //Sateewh completed
		//function to display Special Requirement Category
	/*function getSplRequiremntCat($sid) 
	{
		global $mainframe;
		$db=&JFactory::getDBO();
		 $query = "SELECT req_title FROM #__cam_rfpreq_categories WHERE req_id=".$sid." ";
		$db->setQuery($query);
		$reqCatList = $db->loadresult();		
		return $reqCatList;
	}*/
	//Function to get Property Manager details using property id
	function getPManagers($property_id)
	{
		global $mainframe;
		$db=&JFactory::getDBO();
		$query = "SELECT property_manager_id FROM #__cam_property WHERE id=".$property_id;
		$db->setQuery($query);
		$property_manager_id = $db->loadResult();
		$query2 = "SELECT id,name,email,phone FROM #__users WHERE id=".$property_manager_id;
		$db->setQuery($query2);
		$pmdetails = $db->loadObjectList();
		return $pmdetails;
	}
	//Function to get Vendors details for particular Industry
	function getVendors($industry_id,$userid,$property_id,$rfp_id)
	{
		global $mainframe;
		$db=&JFactory::getDBO();
		$user =& JFactory::getUser();
        $comp_zip = $user->get('comp_zip');
		$countyid = "SELECT divcounty FROM #__cam_property  WHERE  id=".$property_id;
		$db->setQuery($countyid);
		$comid = $db->loadResult();

		$county_sql = "SELECT distinct(user_id) FROM  #__vendor_state_counties  WHERE county_id = ".$comid;
		$db->setQuery($county_sql);
		$vendor_ids = $db->loadObjectList();
		//echo "<pre>"; print_r($vendor_ids);
        $industry_id = "SELECT industry_id,industry_id2 FROM  #__cam_rfpinfo  WHERE id = ".$rfp_id;
		$db->setQuery($industry_id);
		$industrys = $db->loadObject();
		$industryid = $industrys->industry_id;
		$industryid2 = $industrys->industry_id2;

	    $industry_detail = "SELECT industry_id FROM  #__cam_rfpindustries  WHERE rfpid = ".$rfp_id;
		$db->setQuery($industry_detail);
		$industry_ids = $db->loadObjectList();
		//echo "<pre>"; print_r($industry_ids);

		for($l=0; $l<count($industry_ids); $l++) {
		if($l>0){
		$industry_ids[$l]->industry_id = " OR industry_id=".$industry_ids[$l]->industry_id." OR industry_id=".$industryid." OR industry_id=".$industryid2 ;
		}
		else{
		$industry_ids[$l]->industry_id = "industry_id=".$industry_ids[$l]->industry_id." OR industry_id=".$industryid." OR industry_id=".$industryid2;
		}
		$or_industry = $or_industry.$industry_ids[$l]->industry_id ;
		}
        //echo '<pre>'; print_r($or_industry);
   if($industryid && !$or_industry){
        $or_industry= " industry_id=".$industryid;
   } else if($or_industry && !$industryid){
       $or_industry= $or_industry;
   } else {
      $or_industry = $or_industry." OR industry_id=".$industryid;
   }
   if($industryid2 != '0'){
	$or_industry = $or_industry." OR industry_id=".$industryid2;
	}
	for($i=0; $i<count($vendor_ids); $i++)
		{
	   $ind_sql = "SELECT user_id FROM  #__cam_vendor_industries  WHERE user_id = ".$vendor_ids[$i]->user_id." AND (".$or_industry.") ";
	//echo "<br><br>";
		$db->setQuery($ind_sql);
		$vendorids[$i] = $db->loadResult();

		}
 //exit;
		$query1 = "SELECT  v_id FROM  #__vendor_inviteinfo WHERE vendortype = 'exclude' AND userid=".$userid;
		$db->setQuery($query1);
		$v_id = $db->loadObjectList();


		if($v_id){
//echo 'anand in vid';
		foreach($v_id as $vid){
		$exvid[] = $vid->v_id;
		}
		if($vendorids)
//echo 'anand in vendorids';
		$result_appvendors = array_diff($vendorids, $exvid);
		}
		else{
		$result_appvendors = $vendorids;
		}
		//echo "<pre>"; print_r($result_appvendors);
		//To reject the rejected proposals
	$get_rej = 'SELECT * FROM #__cam_vendor_proposals WHERE rfpno = "'.$rfp_id.'" and proposaltype ="Reject"';
	$db->Setquery($get_rej);
	$rejprs = $db->loadObjectList();

	foreach($rejprs as $vid1){
		$rejs[] = $vid1->proposedvendorid;
		}
		if($rejs){
		$result_appvendors1 = array_diff($result_appvendors, $rejs);
		} else {
		$result_appvendors1 = $result_appvendors;
		}
		//echo "<pre>"; print_r($result_appvendors1);
		//exit;
		$vendorsinfo=array();
		$j=0;
		for($k=0;$k<=count($result_appvendors1);$k++){
	//	echo end($result_appvendors);

			$query2 = "SELECT u.id as id, c.id as vid, u.name,u.lastname,u.flag,u.suspend,u.email,u.ccemail,c.company_phone,c.company_name,u.cellphone,c.alt_phone,u.username,u.password FROM #__users as u LEFT JOIN #__cam_vendor_company as c ON c.user_id=u.id WHERE u.block=0 and u.id=".$result_appvendors1[$k] ;
			$db->setQuery($query2);
			$result = $db->loadObjectList();

			if($result)
			{
			$vendorsinfo[$j]=$result;
			$j++;
			}


	}	//echo "<pre>"; print_r($vendorsinfo);
		//exit;
		return $vendorsinfo;
                ////print_r($_REQUEST); exit;
		/* global $mainframe;
		$db=&JFactory::getDBO();
		$user =& JFactory::getUser();
        $comp_zip = $user->get('comp_zip'); 
		 $countyid = "SELECT divcounty FROM #__cam_property  WHERE  id=".$property_id;
		$db->setQuery($countyid);
		$comid = $db->loadResult();

		$county_sql = "SELECT user_id FROM  #__vendor_state_counties  WHERE county_id = ".$comid;  
		$db->setQuery($county_sql);
		$vendor_ids = $db->loadObjectList();
		
		for($i=0; $i<count($vendor_ids); $i++)
		{
		 $ind_sql = "SELECT user_id FROM  #__cam_vendor_industries  WHERE user_id = ".$vendor_ids[$i]->user_id." AND  industry_id = ".$industry_id; 
		$db->setQuery($ind_sql);
		$vendorids[$i] = $db->loadResult();
		}
	//echo "<pre>"; print_r($vendorids);
	
		$query1 = "SELECT  v_id FROM  #__vendor_inviteinfo WHERE vendortype = 'exclude' AND userid=".$userid; 
		$db->setQuery($query1);
		$v_id = $db->loadObjectList();
			//echo "<pre>"; print_r($v_id);
		
		if($v_id){
		foreach($v_id as $vid){
		$exvid[] = $vid->v_id;
		}
		
		$result_appvendors = array_diff($vendorids, $exvid);
		}
		else{
		$result_appvendors = $vendorids;
		}
		//echo "<pre>"; print_r($result_appvendors);
		$vendorsinfo=array();
		$j=0;
		for($k=0;$k<=count($result_appvendors);$k++){
	//	echo end($result_appvendors);
			$query2 = "SELECT u.id,u.name,u.email,u.phone FROM #__users as u  WHERE u.block=0 and u.id=".$result_appvendors[$k] ;
			$db->setQuery($query2);
			$result = $db->loadObjectList();
			
			if($result)
			{
			$vendorsinfo[$j]=$result;
			$j++;
			}
		
	
	}			// echo "<pre>"; print_r($vendorsinfo); exit;
		return $vendorsinfo;*/
	} 
	
	function updateproposalstodraft($rfp_id,$property_id){
	
		$db = JFactory::getDBO();
		$allproposals_rfp = "SELECT proposedvendorid from #__cam_vendor_proposals WHERE rfpno=".$rfp_id." and Alt_bid='' and proposaltype != 'uninvited'";
		$db->setQuery($allproposals_rfp);
		$allproposals = $db->loadObjectList(); 
		for( $a=0; $a<count($allproposals); $a++ ){
		
			$vendorid= "SELECT U.email,U.name,U.lastname,U.id, P.contact_name FROM #__users as U LEFT JOIN #__cam_vendor_proposals as P ON P.proposedvendorid=U.id WHERE rfpno=".$rfp_id." AND P.proposedvendorid=". $allproposals[$a]->proposedvendorid." and P.bidfrom='' and P.Alt_bid='' "; 
			$db->setQuery($vendorid);
			$vendor_email = $db->loadObjectList(); 
			if($vendor_email[0]->contact_name){
				$contactname = $vendor_email[0]->contact_name ;
			}
			else{
				$contactname = $vendor_email[1]->contact_name ;
			}
			if($vendor_email){
							$updaterfp = "SELECT introtext  FROM #__content where id='163'";
							$db->setQuery($updaterfp);
							$update_rfp = $db->loadResult();
							//echo "<pre>update:"; print_r($vendoremail);
							$from_name='MyVendorCenter';
							$from_email='Support@myvendorcenter.com';
							$sub='Addendum to RFP '.sprintf('%06d', $rfp_id);
							$siteURL		= JURI::root();
						//print_r($result);
                            $v_company = "SELECT u.company_name, v.email, v.ccemail, v.subscribe  FROM #__cam_vendor_company as u, #__users as v where u.user_id=".$allproposals[$a]->proposedvendorid." and u.user_id=v.id ";
							$db->Setquery($v_company);
							$vendor_companyname = $db->loadObject();
							$v_companyname = $vendor_companyname->company_name ;
							$vemail = $vendor_companyname->email ;
							$ccemail = $vendor_companyname->ccemail ;

								$sql = "SELECT id,Alt_bid,proposedvendorid,rfpno FROM #__cam_vendor_proposals  where rfpno = ".$rfp_id." AND proposedvendorid= ".$allproposals[$a]->proposedvendorid;	
								$db->Setquery($sql);
								$prp_cnt = $db->loadObjectList(); 
								//echo "<pre>"; print_r($prp_cnt);
								for($k=0;$k<count($prp_cnt);$k++)
								{
									$link = $siteURL.'index.php?option=com_camassistant&controller=proposals&Alt_Prp='.$prp_cnt[$k]->Alt_bid.'&task=Proposal_edit&Proposal_id='.$prp_cnt[$k]->id.'&vendor_id='.$allproposals[$a]->proposedvendorid.'&jobtype=yes&rfp_id='.$prp_cnt[$k]->rfpno.'&act=Draft&Itemid=107';
									}
        $query = "SELECT property_name, timezone  FROM #__cam_property WHERE id=".$property_id;
		$db->setQuery($query);
		$propertyinfo = $db->loadObject();
		$propertyName = $propertyinfo->property_name;
		$propertyName = str_replace('_',' ',$propertyName);
		
		$query_pname = "SELECT projectName, cust_id, update_date  FROM #__cam_rfpinfo WHERE id=".$rfp_id;
		$db->setQuery($query_pname);
		$projectdeta = $db->loadObject();
		
		$projectname = $projectdeta->projectName;
		$camfirmid_pro = $projectdeta->cust_id;
		// To get the camfirm name
		$query_manmdeta = "SELECT name, lastname  FROM #__users WHERE id=".$camfirmid_pro." ";
		$db->setQuery($query_manmdeta);
		$m_name_mans = $db->loadObject();
		$m_name_man = $m_name_mans->name.' '.$m_name_mans->lastname;
		
		$manager_data = "SELECT comp_name FROM #__cam_customer_companyinfo WHERE cust_id='".$camfirmid_pro."'";
		$db->setQuery($manager_data);
		$managerinfo = $db->loadResult();	
		
		$timezone_prop = $propertyinfo->timezone;
			if( $timezone_prop == '' || $timezone_prop == 'est' ) $timezone = 'EST';
			else if( $timezone_prop == 'cen' ) $timezone = 'CEN';
			else if( $timezone_prop == 'mou' ) $timezone = 'MOU';
			else if( $timezone_prop == 'pac' ) $timezone = 'PAC';
			else if( $timezone_prop == 'ala' ) $timezone = 'ALA';
			else if( $timezone_prop == 'haw' ) $timezone = 'HAW';
			
		$updated_date = $projectdeta->update_date;
		$explode_date = explode(' ',$updated_date);
		if( $explode_date[1] )
		$final_time = date("h:i A", strtotime($explode_date[1])).' '.$timezone;  
		else
		$final_time = date("h:i A").' '.$timezone;  
		//Completed
		// To get the vendor company name
	$vendor_company_name = "SELECT company_name FROM #__cam_vendor_company where user_id=".$allproposals[$a]->proposedvendorid." ";
	$db->Setquery($vendor_company_name);
	$vendor_companynamenew = $db->loadResult();
		//Completed
		
									$body = $update_rfp;
									$body = str_replace('{RFP NUMBER}', sprintf('%06d', $rfp_id), $body);
									$body = str_replace('{vendor Name}', $contactname, $body);
									$body = str_replace('{Vendor Company Name}', $vendor_companynamenew, $body);
									
									$body = str_replace('{link}', '<a href="'.$link.'">CLICK HERE</a>', $body);
									$body = str_replace('{Property Name}', $propertyName, $body);
                                    $body = str_replace('{camName}', 'MyVendorCenter', $body);
									$body = str_replace('{Managername}', $m_name_man, $body);
									$body = str_replace('{Camfirmname}', $managerinfo, $body);
									$body = str_replace('[Project Reference Name]', $projectname, $body);
									$body = str_replace('{TIME}', $final_time, $body);
									//$sub='Invitation to RFP '.sprintf('%06d', $rfpid).' from CAMassistant';
									//echo "<pre>update"; print_r($vendoremail);
									
									$sub='Addendum to RFP '.sprintf('%06d', $rfp_id);
									$from_name='MyVendorCenter';
									$from_email='Support@myvendorcenter.com';
									
									$successMail =JUtility::sendMail($from_email, $from_name, $vemail, $sub, $body,$mode = 1);
									$supportemail = 'vendoremails@myvendorcenter.com';
									$successMail =JUtility::sendMail($from_email, $from_name, $supportemail, $sub, $body,$mode = 1);
                                    $cclist = explode(';',$ccemail);
		for($c=0; $c<=count($cclist); $c++){
		$listcc = $cclist[$c];
		if($listcc){
		$res = JUtility::sendMail($from_email, $from_name, $listcc, $sub, $body,$mode = 1);
		}
		} 
					$sql = "UPDATE #__cam_vendor_proposals SET proposaltype='Draft' where rfpno = ".$rfp_id." AND proposedvendorid= ".$allproposals[$a]->proposedvendorid." and proposaltype != 'uninvited' "; 
					$db->SetQuery($sql);
					$db->query();
				
						
			}
		}
		
			
	}
	
	function rfp_requirements_validations($industry_id,$userid,$property_id,$rfp_id){
		$db = JFactory::getDBO();
		$vendorsinfo	=	$this->getVendors($industry_id,$userid,$property_id,$rfp_id); 
		//echo '<pre>'; print_r($vendorsinfo); exit; //echo "<>";
		if(count($vendorsinfo)>0)
			{
			  for($i=0;$i<count($vendorsinfo);$i++)
			  {
			  $flag = 0;	
			  //echo $flag;
			//echo $vendorsinfo[$i][0]->id; echo '----------';
			   //code to validate specialrequirements
				$sql = "SELECT distinct(req_parentid ) FROM #__cam_rfpreq_info WHERE rfp_id ='".$rfp_id."'";   
				$db->Setquery($sql);
				$main = $db->loadResultArray();
				$sql = "SELECT req_subparentid  FROM #__cam_rfpreq_info WHERE req_subparentid !=0 AND rfp_id ='".$rfp_id."'";   
				$db->Setquery($sql);
				$sub = $db->loadResultArray();
				// echo "<pre>"; print_r($main); print_r($sub); exit;
				//$flag = 0;
				
				for($m = 0; $m<count($main); $m++)
				{
				// echo "<pre>"; print_r($main);  exit;
				  switch($main[$m])
				  {
			
				  case 1:
						for($h=0;$h<count($sub); $h++){
						
							 switch($sub[$h])
							  {
						case 17: 
								if($flag==0){	
									$sql = "SELECT id  FROM #__cam_vendor_professional_license  WHERE PLN_status = 1 AND vendor_id=".$vendorsinfo[$i][0]->id;
									  $db->Setquery($sql);
									  $PLN = $db->loadResultArray();
									  $PLN_cnt = count($PLN) ;
									  if($PLN_cnt== 0){
									 	$flag = 1;	
											}
									
								}
						case 18:
								  if($flag==0){
							  //print_r($sub[$h]);  exit;
									 $sql = "SELECT id  FROM #__cam_vendor_occupational_license WHERE OLN_status = 1 AND vendor_id=".$vendorsinfo[$i][0]->id;
									  $db->Setquery($sql);
									  $OLN = $db->loadResultArray();
									   // echo "<pre>"; print_r($OLN); exit;
									  $OLN_cnt = count($OLN) ;
									   //echo "<pre>"; print_r($OLN_cnt); exit;
									  if($OLN_cnt== 0){
											$flag = 1;	
				                     	}
									}
										
							
								}
							}
				   case 3:
				
						
							for($s=0;$s<count($sub); $s++){
							//echo "<pre>"; print_r($sub[$s]); 
							switch($sub[$s])
							
							  { 
						 
						 case 11:  
							//exit;
							if($flag==0)
												{
								  $sql56 = "SELECT req_id  FROM #__cam_rfpreq_info WHERE rfp_id=".$rfpid;
								  $db->Setquery($sql56);
								  $req_id = $db->loadResult();	
							 $sql2 = "SELECT id  FROM #__cam_vendor_workers_companies_insurance WHERE WCI_end_date>= '".$today."' and WCI_status = 1 AND vendor_id=".$vendor_id;
								  $db->Setquery($sql2);
								  $WCI = $db->loadResultArray();	
								  $WCI_cnt = count($WCI) ;
								  if($WCI_cnt == 0){
								  $flag = 1;
								  		}
								if ($req_id=='19' &&  $flag=='0'){
							 	    $sql26 = "SELECT excemption  FROM #__cam_vendor_workers_companies_insurance WHERE WCI_end_date>= '".$today."' and WCI_status = 1 AND vendor_id=".$vendor_id;
									$db->Setquery($sql26);
								   $excemption = $db->loadObjectlist();
								  //$excemption=$excemption1[0]->excemption;
								  //echo "<pre>"; print_r($excemption);
								  // $WCI_cnt1 = count($excemption) ;
								   for($d=0;$d<count($excemption); $d++){
								//echo "<pre>"; print_r($excemption[$d]->excemption);  
								          if(($excemption[$d]->excemption!= 0)&&($excemption[$d]->excemption!='')){
									         $flag=1;
									             } else {
									        $flag=0;
									        	}
								     	 	} 
										 }//echo $flag; echo $vendor_id; echo '</br>';
								 
							    } 
					       case 12:  
							if($flag==0){
								$sql = "SELECT GLI_policy_aggregate FROM #__cam_vendor_liability_insurence  WHERE GLI_status = 1 AND vendor_id=".$vendorsinfo[$i][0]->id;
								 // $sql = "SELECT sum(GLI_policy_aggregate)  FROM #__cam_vendor_liability_insurence  WHERE GLI_status = 1 AND vendor_id=".$vendorsinfo[$i][0]->id;
								  $db->Setquery($sql);
								  $amount = $db->loadObjectlist(); 
							//echo "<pre>"; print_r($amount); 
								  // $amount2 = doubleval(str_replace(",","",$amount1));
								 
								 $spl_amount="SELECT price FROM #__cam_rfpreq_info WHERE rfp_id='".$rfp_id."' and req_subparentid='12'";
								   $db->Setquery($spl_amount);
								  $amount1 = $db->loadResult();
								 // $amount2= str_replace(",", "", $amount1);
								 $amount2 = doubleval(str_replace(",","",$amount1));
								 for($L=0;$L<count($amount); $L++){
								// echo "<pre>"; print_r($amount[$L]->GLI_policy_aggregate);  
								          if($amount2 > $amount[$L]->GLI_policy_aggregate){
									         $flag=1;
									             } else {
									        $flag=0;
									        }
								      }
									/*if($amount2 > $amount){
									// echo "<pre>"; print_r($flag);  exit;
									$flag=1;
									} else {
									 $flag=0;
									}*/
									
								}
						
							}
							} 
				  } //switch($main[$m])
				 //print_r($flag); echo "<br>";
				 } //exit;//for($m = 0; $m<count($main); $m++)
			//echo "<pre>"; print_r($vendorsinfo[$i][0]);  
			  if($flag == 0)
			  {
			  
			  $vendorsinfo[$i][0]->email;  
			  $vendorid = $vendorsinfo[$i][0]->id;
			 // echo "<pre>"; print_r($vendorsinfo[$i][0]); 
				$vendoremail=$vendorsinfo[$i][0]->email;
				$vendoreccmail=$vendorsinfo[$i][0]->ccemail;
				//echo "<pre>"; print_r($vendoremail); 
				$vendor_name=$vendorsinfo[$i][0]->name.' '.$vendorsinfo[$i][0]->lastname;
				//code to get Mangaername, Camfirmname
				$user=JFactory::getUser();
				 $Manager = JFactory::getUser($userid);
				$Managername = $Manager->name.'&nbsp;'.$Manager->lastname;
				 $camfirmid_sql = "SELECT comp_id FROM #__cam_customer_companyinfo WHERE cust_id=".$userid;
				$db->SetQuery($camfirmid_sql);
				$camfirmid_res = $db->loadResult();
				if($camfirmid_res == '0')
				$Camfirmname = '';
				else
				{
				  $camfirmid_sql = "SELECT cust_id FROM #__cam_camfirminfo  WHERE id=".$camfirmid_res;
				  $db->SetQuery($camfirmid_sql);
				  $camfirmid_res = $db->loadResult();
				  $camfirmuser = JFactory::getUser($camfirmid_res);
				  $Camfirmname = $camfirmuser->name.'&nbsp;'.$camfirmuser->lastname;
				}
				$sub='RFP Invitation from CAMAssistant';

				if($vendoremail) 
				{
					
							 $vendorid = $vendorsinfo[$i][0]->id;
							//$vendoremail = $vendor_email[0]->email;
							
						//echo "<pre>anand"; print_r( $vendoremail);	//$to = $vendoremail;
							//$vendor_name= $vendor_email[$i][0]->name;
						$vendorid= "SELECT U.email,U.name,U.lastname,U.id FROM #__users as U LEFT JOIN #__cam_vendor_proposals as P ON P.proposedvendorid=U.id WHERE rfpno=".$rfp_id." AND P.proposedvendorid=". $vendorid." and P.bidfrom='' and P.Alt_bid='' and proposaltype!='uninvited' "; 
				$db->setQuery($vendorid);
				$vendor_email = $db->loadObjectList(); 
					//echo "<pre>"; print_r($vendor_email ); 
				//$vendor_name= $vendor_email[0]->name.' '.$vendor_email[0]->lastname;
					if(count($vendor_email)>0) // code to send updated rfp mails
					{
							$updaterfp = "SELECT introtext  FROM #__content where id='163'";
							$db->setQuery($updaterfp);
							$update_rfp = $db->loadResult();
							//echo "<pre>update:"; print_r($vendoremail);
							$from_name='MyVendorCenter';
							$from_email='Support@myvendorcenter.com';
							$sub='Addendum to RFP '.sprintf('%06d', $rfp_id);
							$siteURL		= JURI::root();
							$sql = "SELECT id FROM #__cam_vendor_availablejobs  where rfp_id = ".$rfp_id." AND user_id = ".$vendorsinfo[$i][0]->id;	 
							$db->Setquery($sql);
							$result = $db->loadResult(); 
						//print_r($result);
                            $v_company = "SELECT u.company_name, v.email, v.ccemail, v.subscribe  FROM #__cam_vendor_company as u, #__users as v where u.user_id=".$vendorid." and u.user_id=v.id ";
	$db->Setquery($v_company);
	$vendor_companyname = $db->loadObject();
	$v_companyname = $vendor_companyname->company_name ;
    $vemail = $vendor_companyname->email ;
	$ccemail = $vendor_companyname->ccemail ;
        
							if(count($result)>0)
							{
								$sql = "SELECT id,Alt_bid,proposedvendorid,rfpno FROM #__cam_vendor_proposals  where rfpno = ".$rfp_id." AND proposedvendorid= ".$vendorsinfo[$i][0]->id." and proposaltype!= 'uninvited' ";	
								$db->Setquery($sql);
								$prp_cnt = $db->loadObjectList(); 
								//echo "<pre>"; print_r($prp_cnt);
								for($k=0;$k<count($prp_cnt);$k++)
								{
									$link = $siteURL.'index.php?option=com_camassistant&controller=proposals&Alt_Prp='.$prp_cnt[$k]->Alt_bid.'&task=Proposal_edit&Proposal_id='.$prp_cnt[$k]->id.'&vendor_id='.$prp_cnt[$k]->proposedvendorid.'&rfp_id='.$prp_cnt[$k]->rfpno.'&act=Draft&Itemid=107';
									}
        $query = "SELECT property_name, timezone  FROM #__cam_property WHERE id=".$property_id;
		$db->setQuery($query);
		$propertyinfo = $db->loadObject();
		$propertyName = $propertyinfo->property_name ;
		$propertyName = str_replace('_',' ',$propertyName);
		
		$query_pname = "SELECT projectName,update_date  FROM #__cam_rfpinfo WHERE id=".$rfp_id;
		$db->setQuery($query_pname);
		$projectinfo = $db->loadObject();
		$projectname = $projectinfo->projectName ;
		
			$timezone_prop = $propertyinfo->timezone;
			if( $timezone_prop == '' || $timezone_prop == 'est' ) $timezone = 'EST';
			else if( $timezone_prop == 'cen' ) $timezone = 'CEN';
			else if( $timezone_prop == 'mou' ) $timezone = 'MOU';
			else if( $timezone_prop == 'pac' ) $timezone = 'PAC';
			else if( $timezone_prop == 'ala' ) $timezone = 'ALA';
			else if( $timezone_prop == 'haw' ) $timezone = 'HAW';
			
		$updated_date = $projectinfo->update_date;
		$explode_date = explode(' ',$updated_date);
		if( $explode_date[1] )
		$final_time = date("h:i A", strtotime($explode_date[1])).' '.$timezone;  
		else
		$final_time = date("h:i A").' '.$timezone;  
		
		// To get the vendor company name
	$vendor_company_name = "SELECT company_name FROM #__cam_vendor_company where user_id=".$vendorsinfo[$i][0]->id." ";
	$db->Setquery($vendor_company_name);
	$vendor_companynamenew = $db->loadResult();
	
	$manager_data = "SELECT comp_name FROM #__cam_customer_companyinfo WHERE cust_id='".$userid."'";
	$db->setQuery($manager_data);
	$managerinfo_new = $db->loadResult();
		
		//Completed
		
									$body = $update_rfp;
									$body = str_replace('{RFP NUMBER}', sprintf('%06d', $rfp_id), $body);
									$body = str_replace('{vendor Name}', $vendor_name, $body);
									$body = str_replace('{Vendor Company Name}', $vendor_companynamenew, $body);
									$body = str_replace('{link}', '<a href="'.$link.'">CLICK HERE</a>', $body);
									$body = str_replace('{Property Name}', $propertyName, $body);
                                    $body = str_replace('{camName}', 'MyVendorCenter', $body);
									$body = str_replace('{Managername}', $Managername, $body);
									$body = str_replace('{Camfirmname}', $managerinfo_new, $body);
									$body = str_replace('[Project Reference Name]', $projectname, $body);
									$body = str_replace('{TIME}', $final_time, $body);
									//$sub='Invitation to RFP '.sprintf('%06d', $rfpid).' from CAMassistant';
									//echo "<pre>update"; print_r($vendoremail);
									$sub='Addendum to RFP '.sprintf('%06d', $rfp_id);
									$from_name='MyVendorCenter';
									$from_email='Support@myvendorcenter.com';
									
									$successMail =JUtility::sendMail($from_email, $from_name, $vendoremail, $sub, $body,$mode = 1);
									$supportemail = 'vendoremails@myvendorcenter.com';
									$successMail =JUtility::sendMail($from_email, $from_name, $supportemail, $sub, $body,$mode = 1);
                                    $cclist = explode(';',$vendoreccmail);
		for($c=0; $c<=count($cclist); $c++){
		$listcc = $cclist[$c];
		if($listcc){
		$res = JUtility::sendMail($from_email, $from_name, $listcc, $sub, $body,$mode = 1);
		}
		} 
								
					$sql = "UPDATE #__cam_vendor_proposals SET proposaltype='Draft' where rfpno = ".$rfp_id." AND proposedvendorid= ".$vendorsinfo[$i][0]->id." and proposaltype != 'uninvited' "; 
					$db->SetQuery($sql);
					$db->query();
							}
						}						
					  else // code to send New invitations

						{}	
					

				}//End if
			   } //exit;// if($flag == 0)
			 } //End for
			} //exit;
	
	}	
	function getIndustry() 
	{
		global $mainframe;
	 	$db=&JFactory::getDBO();
		$query = "SELECT id as value,industry_name as text FROM #__cam_industries where published ='1' ORDER BY industry_name ASC";
		$db->setQuery($query);
		$industryList = $db->loadObjectList();
		return $industryList;
	}
	
	function getIndustryname($id) 
	{
		global $mainframe;
	 	$db=&JFactory::getDBO();
		$query = "SELECT `industry_name` FROM #__cam_industries WHERE id=".$id;
		$db->setQuery($query);
		$industryname = $db->loadResult();
		return $industryname;
	}
	function getIndustryname2($id) 
	{
		global $mainframe;
	 	$db=&JFactory::getDBO();
		$query = "SELECT `industry_name` FROM #__cam_industries WHERE id=".$id;
		$db->setQuery($query);
		$industryname = $db->loadResult();
		return $industryname;
	}
	 function getpfiles(){
        $pfiles = array(); 
		$db =& JFactory::getDBO();
		$user =& JFactory::getUser();
        $user_id = $user->get('id');
		$query = "SELECT * FROM #__cam_propertydocs where parent=0 and `property_manager_id` =".$user_id." and `property_id` =".$_REQUEST['pid'];
		$db->setQuery($query);
        $pfiles=$db->loadObjectList();
		return $pfiles;
}
	
	function getrfpinfo($id) 
	{
		global $mainframe;
	 	$db=&JFactory::getDBO();
		$query = "SELECT * FROM `#__cam_rfpinfo` WHERE id='".$id."'";
		$db->setQuery($query);
		$rfpinfo = $db->loadObject();
		return $rfpinfo;
	}
	function rfplinetasks($id)
	{
		global $mainframe;
		$db=&JFactory::getDBO();
		$query = "SELECT * FROM `#__cam_rfpsow_linetask` WHERE rfp_id='".$id."'";
		$db->setQuery($query);
		$rfplinetasks = $db->loadObjectlist();
		return $rfplinetasks;
	}

	function rfpuploadfiles($id) 
	{
		global $mainframe;
	 	$db=&JFactory::getDBO();
		$query = "SELECT * FROM `#__cam_rfpsow_docs` WHERE rfp_id='".$id."'";
		//$query = "SELECT * FROM `#__cam_rfpsow_uploadfiles` WHERE rfp_id='".$id."'";
		$db->setQuery($query);
		$rfpuploadfiles = $db->loadObjectlist();
		//print_r($rfpuploadfiles);
		return $rfpuploadfiles;
	}

    function rfpreqinfo($id) 
	{
		global $mainframe;
	 	$db=&JFactory::getDBO();
		$query = "SELECT * FROM `#__cam_rfpreq_info` WHERE (req_id ='14' or req_id ='15' or req_subparentid='12') and rfp_id='".$id."'";
		$db->setQuery($query);
		$rfpreqinfo = $db->loadObjectList();
		//echo "<pre>"; print_r($rfpreqinfo);
		return $rfpreqinfo;
	}
	
	//function to display industries list in popup
	function getindustires() 
	{
		global $mainframe;
		if(isset($_SESSION['industries']))
		$chk_arry = $_SESSION['industries'];
		$db = JFactory::getDBO();
		$checked    = JHTML::_( 'grid.id', $i, $row->id );
		$sql = "SELECT * FROM #__cam_industries order by industry_name";
		$db->Setquery($sql);
		$objects = $db->loadObjectList();
		foreach( $objects as $key => $obj ) 
		{
			//$checked    = JHTML::_( 'grid.id', $key, $obj->industry_name);
			if(isset($chk_arry) && in_array($obj->industry_name,$chk_arry))
			$checked = "<input checked='checked' type='checkbox' onclick='isChecked(this.checked);' value='".$obj->industry_name."' name='cid[]' id='cb'".$key.">";
			else
			$checked = "<input type='checkbox' onclick='isChecked(this.checked);' value='".$obj->industry_name."' name='cid[]' id='cb'".$key.">";
			$industries[] = $checked.'&nbsp;'. $obj->industry_name;
		}
		//echo "<pre>"; print_r($industries);
	   return $industries;
	}

//Getting states list
function getStates(){
		$db =& JFactory::getDBO();
		//$query = "SELECT code,state FROM #__cam_vendor_states ";
		$query = "SELECT * FROM #__state";
		$db->setQuery($query);
        $states=$db->loadObjectList();
		return $states;

}
//Completed

//Function to get the individual wide preferred vendors
function getinhouse()
	{
		$db = & JFactory::getDBO();
		$user =& JFactory::getUser();
		$industrytype = JRequest::getVar( 'industrytype','');
		$state = JRequest::getVar( 'state','');	
 		$county = JRequest::getVar( 'divcounty','');
		if(!$state){
		$county = '';
		}		
		else{
		$county = $county;
		}	
	 	$query = "SELECT V.company_name,V.city,V.company_phone,V.phone_ext,V.fax_id,V.tax_id,U.vendortype,U.vid,U.v_id,U.status,U.inhousevendors,W.name,W.lastname,W.suspend,W.subscribe,W.subscribe_type,V.state from #__vendor_inviteinfo as U, #__cam_vendor_company as V, #__users as W where LOWER(U.inhousevendors) = (W.email) and W.search='' and V.user_id=W.id and U.exclude!='yes' and U.userid=".$user->id." ";
		$db->setQuery($query); 
		$totalprefers = $db->loadObjectList();
		
		//To get the vendors based on industry
			if($industrytype){
			$checkvendors = "SELECT distinct(user_id) FROM #__cam_vendor_industries where industry_id=".$industrytype." ";
			$db->setQuery($checkvendors);
			$accpetvendor = $db->loadObjectList();
			
			if($totalprefers){
				foreach($totalprefers as $vid){
				$existing[] = $vid->v_id;
				}
			}	
			if($accpetvendor){
				foreach($accpetvendor as $inids){
				$indusids[] = $inids->user_id;
				}
			}
			if($indusids != '' && $existing!= ''){
			$common = array_intersect($indusids, $existing) ;
			}
			if($common){
			$indus_condition = implode(',',$common) ;
			}
			if($indus_condition)
			$query = $query . "AND V.user_id IN ("  . $indus_condition . ")" ;
			else
			$query = $query . "AND V.user_id IN ('')" ;
			}	
			
			
		if($county){
			$checkvendors1 = "SELECT distinct(user_id) FROM #__vendor_state_counties where county_id=".$county." ";
			$db->setQuery($checkvendors1);
			$accpetvendor1 = $db->loadObjectList();
			
			if($totalprefers){
				foreach($totalprefers as $vid){
				$existing[] = $vid->v_id;
				}
			}	
			if($accpetvendor1){
				foreach($accpetvendor1 as $county){
				$countys[] = $county->user_id;
				}
			}
			//echo "<pre>"; print_r($countys);
			//echo "<pre>"; print_r($existing);
			if($countys != '' && $existing!= ''){
			$common = array_intersect($countys, $existing) ;
			}
			if($common){
			$county_condition = implode(',',$common) ;
			}
			if($county_condition)
			$query = $query . "AND V.user_id IN ("  . $county_condition . ")" ;
			else
			$query = $query . "AND V.user_id IN ('')" ;
			}
			
			//If selecting state and not selecting ny county
			if($state && !$county){
			 $checkvendorsstate = "SELECT distinct(user_id) FROM #__vendor_state_counties where state_id='".$state."' ";
			$db->setQuery($checkvendorsstate);
			$statevendors = $db->loadObjectList();
			if($totalprefers){
				foreach($totalprefers as $vid){
				$existing[] = $vid->v_id;
				}
			}	
			if($statevendors){
				foreach($statevendors as $county){
				$countys[] = $county->user_id;
				}
			}
			if($countys != '' && $existing!= ''){
			$common = array_intersect($countys, $existing) ;
			}
			if($common){
			$county_condition = implode(',',$common) ;
			}
			if($county_condition)
			$query = $query . "AND V.user_id IN ("  . $county_condition . ")" ;
			else
			$query = $query  . "AND V.user_id IN (' ')" ;
			}
			//Completed
			
		$sort = JRequest::getVar('sort','');
		$type = JRequest::getVar('type','');
		
		if( $sort == 'asc' && $type == 'preferred' ){
			$sorting = ' GROUP BY U.v_id order by V.company_name ASC ';
		}
		else if( $sort == 'desc' && $type == 'preferred' ){
			$sorting = ' GROUP BY U.v_id order by V.company_name DESC ';
		}
		else{
			$sorting = " GROUP BY U.v_id order by W.subscribe_type='', W.subscribe_type='public', W.subscribe_type='all'  ";
		}
		
		$query = $query . ' '.$sorting.'  ' ;

		
			
			$db->setQuery($query);
			$totalprefers = $db->loadObjectList();
		//Funtion to get the eligible vendors
		$rfp_id = JRequest::getVar('rfpid','');
		$rfpinfo = $this->getrfpinfopre($rfp_id);
		$eligible_vendors =	$this->getVendorspre($rfpinfo->cust_id,$rfpinfo->property_id,$rfpinfo->id);
		
		$vendors_bids	=	$this->getVendor_bidsinfopre($eligible_vendors,$rfp_id);
		
		for($c=0; $c<count($vendors_bids); $c++){
		$elist[] = $vendors_bids[$c][0]->id ;
		}
		if($elist){
		$elist = $elist ;
		}
		else{
		$elist = '';
		}
		// to check the previously invited vendors
		$query_in = "SELECT vendorid from #__rfp_invitations where rfpid=".$rfp_id." ";
		$db->setQuery($query_in);
		$preinviters = $db->loadObjectList();
		
			for($cm=0; $cm<count($preinviters); $cm++){
			$prelist[] = $preinviters[$cm]->vendorid ;
			}
			
			if($prelist){
			$prelist = $prelist ;
			}
			else{
			$prelist = '';
			}
		
		for($im=0; $im<count($totalprefers); $im++){
		if(in_array($totalprefers[$im]->v_id,$prelist)) {
		$totalprefers[$im]->pre = 'yes';
		}
		else{
		$totalprefers[$im]->pre = 'no';		
		}
		}
		//Completed
		
		for($i=0; $i<count($totalprefers); $i++){
		if(in_array($totalprefers[$i]->v_id,$elist)) {
		$totalprefers[$i]->vendorstatus = 'eligible';
		}
		else{
		$totalprefers[$i]->vendorstatus = 'ineligible';		
		}
		}
		
		for( $sp=0; $sp<count($totalprefers); $sp++ ){
		//if($totalprefers[$sp]->v_id == '1796'){
	//echo $totalprefers[$sp]->v_id.'<br />' ;
	$totalprefers_new_w9	=	$this->checknewspecialrequirements_w9($totalprefers[$sp]->v_id,$rfp_id);
	$totalprefers_new_gli	=	$this->checknewspecialrequirements_gli($totalprefers[$sp]->v_id,$rfp_id);
	//echo "GLI: ".$totalprefers_new_gli.'<br />';
	$totalprefers_new_aip	=	$this->checknewspecialrequirements_aip($totalprefers[$sp]->v_id,$rfp_id);
	//echo "AIP: ".$totalprefers_new_aip.'<br />';
	$totalprefers_new_wci	=	$this->checknewspecialrequirements_wci($totalprefers[$sp]->v_id,$rfp_id);
	//echo "WCI: ".$totalprefers_new_wci.'<br />';
	$totalprefers_new_umb	=	$this->checknewspecialrequirements_umb($totalprefers[$sp]->v_id,$rfp_id);
	//echo "UMB: ".$totalprefers_new_umb.'<br />';
	$totalprefers_new_pln	=	$this->checknewspecialrequirements_pln($totalprefers[$sp]->v_id,$rfp_id);
	$totalprefers_new_occ	=	$this->checknewspecialrequirements_occ($totalprefers[$sp]->v_id,$rfp_id);
	$totalprefers_new_omi	=	$this->checknewspecialrequirements_omi($totalprefers[$sp]->v_id,$rfp_id);
	//echo "UMB: ".$totalprefers_new_pln.'<br />';
	
	//}
		if($totalprefers_new_w9 == 'success' && $totalprefers_new_gli == 'success' && $totalprefers_new_aip == 'success' && $totalprefers_new_wci == 'success' && $totalprefers_new_umb == 'success' && $totalprefers_new_pln == 'success' && $totalprefers_new_occ == 'success' && $totalprefers_new_omi == 'success' ){
			$totalprefers[$sp]->special_requirements = 'success' ;
			
			$masteraccount = $this->getmasterfirmaccount();
			$sql_terms = "SELECT termsconditions FROM #__cam_vendor_aboutus WHERE vendorid=".$masteraccount." "; 
			$db->setQuery($sql_terms);
			$terms_exist = $db->loadResult();
			
			if($terms_exist == '1'){
			$sql = "SELECT accepted FROM #__cam_vendor_terms WHERE vendorid=".$totalprefers[$sp]->v_id." and masterid=".$masteraccount." "; 
			$db->setQuery($sql);
			$terms = $db->loadResult();
				if($terms == '1'){
				$totalprefers[$sp]->special_requirements = 'success' ;
				}
				else{
				$totalprefers[$sp]->special_requirements = 'fail' ;
				}
			}
			else{
			
			}
			
		}
		else{
			$totalprefers[$sp]->special_requirements = 'fail' ;
		}
	}
	
	for( $se=0; $se<count($totalprefers); $se++ ){
	$exclude	=	$this->checkexclude($totalprefers[$se]->v_id);
		if($exclude == 'yes'){
			$totalprefers[$se]->excluded = 'yes' ;
		}
		else{
			$totalprefers[$se]->excluded = '' ;
		}
		
	// Adding block unverified vendor rule
	$user =& JFactory::getUser();
	$masterid = $this->getmasterfirmaccount();
	$block_per = "SELECT block, block_complinace FROM #__cam_master_block_users where masterid ='".$masterid."' ";
	$db->setQuery($block_per);
	$blockid = $db->loadObject();
	if( $blockid->block == '1' )
		$totalprefers[$se]->unverified = 'hide' ;
	else	
		$totalprefers[$se]->unverified = 'show' ;
	
	if( $blockid->block_complinace == '1' )
		$totalprefers[$se]->block_nonc = 'hide' ;
	else	
		$totalprefers[$se]->block_nonc = 'show' ;	
//Completed
	
	}
	
		//Completed
//echo "<pre>"; print_r($totalprefers); echo "</pre>";
		return $totalprefers;
	}
//Completed
function checkexclude($vendorid){
	$user =& JFactory::getUser();
	$db = & JFactory::getDBO();
	$master =	$this->getmasterfirmaccount();
	$vendor_id = "SELECT exclude, search FROM #__vendor_inviteinfo where v_id ='".$vendorid."' and userid=".$master." ";
	$db->setQuery($vendor_id);
	$v_id_exist = $db->loadObject();
	if($v_id_exist->exclude == 'yes' || $v_id_exist->search == 'yes'){
	$msg = 'yes';
	}
	else{
	$msg = '';	
	}	
	return $msg ;	
	}
	
	//Function to get the company wide preferred vendors
function getallitems()
	{
 		
 			$user =& JFactory::getUser();
			$db = & JFactory::getDBO();
			$state = JRequest::getVar( 'state','');	
	 		$county = JRequest::getVar( 'divcounty','');
			$industrytype = JRequest::getVar( 'industrytype','');
			if(!$state){
			$county = '';
			}		
			else{
			$county = $county;
			}	
		if($user->user_type == 12){
		$getc = "SELECT comp_id FROM #__cam_customer_companyinfo where cust_id =".$user->id."  ";
		$db->setQuery($getc);
		$companyid = $db->loadResult();
		}
		else{
		$getc = "SELECT id FROM #__cam_camfirminfo where cust_id =".$user->id."  ";
		$db->setQuery($getc);
		$companyid = $db->loadResult();
		}	
		
		$query = "SELECT V.company_name,V.city,V.state,V.company_phone,V.phone_ext,V.fax_id,V.tax_id,U.vendortype,U.vid,U.v_id,U.status,U.inhousevendors,W.name,W.lastname,W.subscribe,W.subscribe_type from #__vendor_inviteinfo as U, #__cam_vendor_company as V, #__users as W where LOWER(U.inhousevendors) = (W.email) and V.user_id=W.id and W.search='' and U.taxid=".$companyid." and U.userid != ".$user->id."  ";
		
		if($user->user_type == 13 && $user->accounttype == 'master') {
			$sql1 = "SELECT firmid from #__cam_masteraccounts where masterid=".$user->id." ";
			$db->Setquery($sql1);
			$subfirms = $db->loadObjectlist();
		if($subfirms)
		{
			$companyid = '';
			foreach($subfirms as $firmid)
				{
					$sql = "SELECT id from #__cam_camfirminfo where cust_id=".$firmid->firmid." ";
					$db->Setquery($sql);
					$companyid[] = $db->loadResult();
				}
			$cidarr = implode(',',$companyid);	
        }
	$query = "SELECT V.company_name,V.city,V.state,V.company_phone,V.phone_ext,V.fax_id,V.tax_id,U.vendortype,U.vid,U.v_id,U.status,U.inhousevendors,W.name,W.lastname,W.subscribe,W.subscribe_type from #__vendor_inviteinfo as U, #__cam_vendor_company as V, #__users as W where LOWER(U.inhousevendors) = (W.email) and V.user_id=W.id and W.search='' and U.taxid IN(".$cidarr.") and U.userid != ".$user->id."  ";
		}	
		
		
	 	
	
		$db->setQuery($query);
		$totalprefers = $db->loadObjectList();
		//To get the vendors based on industry
			if($industrytype){
			$checkvendors = "SELECT distinct(user_id) FROM #__cam_vendor_industries where industry_id=".$industrytype." ";
			$db->setQuery($checkvendors);
			$accpetvendor = $db->loadObjectList();
			
			if($totalprefers){
				foreach($totalprefers as $vid){
				$existing[] = $vid->v_id;
				}
			}	
			if($accpetvendor){
				foreach($accpetvendor as $inids){
				$indusids[] = $inids->user_id;
				}
			}
			if($indusids != '' && $existing!= ''){
			$common = array_intersect($indusids, $existing) ;
			}
			if($common){
			$indus_condition = implode(',',$common) ;
			}
			if($indus_condition)
			$query = $query . "AND V.user_id IN ("  . $indus_condition . ")" ;
			else
			$query = $query . "AND V.user_id IN ('')" ;
			}
			//echo $query ;
		if($county){
			$checkvendors1 = "SELECT distinct(user_id) FROM #__vendor_state_counties where county_id=".$county." ";
			$db->setQuery($checkvendors1);
			$accpetvendor1 = $db->loadObjectList();
			
			if($totalprefers){
				foreach($totalprefers as $vid){
				$existing[] = $vid->v_id;
				}
			}	
			if($accpetvendor1){
				foreach($accpetvendor1 as $county){
				$countys[] = $county->user_id;
				}
			}
			//echo "<pre>"; print_r($countys);
			//echo "<pre>"; print_r($existing);
			if($countys != '' && $existing!= ''){
			$common = array_intersect($countys, $existing) ;
			}
			if($common){
			$county_condition = implode(',',$common) ;
			}
			if($county_condition)
			$query = $query . "AND V.user_id IN ("  . $county_condition . ")" ;
			else
			$query = $query . "AND V.user_id IN ('')" ;
			}
			
			//If selecting state and not selecting ny county
			if($state && !$county){
			$checkvendorsstate = "SELECT distinct(user_id) FROM #__vendor_state_counties where state_id='".$state."' ";
			$db->setQuery($checkvendorsstate);
			$statevendors = $db->loadObjectList();
			if($totalprefers){
				foreach($totalprefers as $vid){
				$existing[] = $vid->v_id;
				}
			}	
			if($statevendors){
				foreach($statevendors as $county){
				$countys[] = $county->user_id;
				}
			}
			if($countys != '' && $existing!= ''){
			$common = array_intersect($countys, $existing) ;
			}
			if($common){
			$county_condition = implode(',',$common) ;
			}
			if($county_condition)
			$query = $query . "AND V.user_id IN ("  . $county_condition . ")" ;
			else
			$query = $query . "AND V.user_id IN ('')" ;
			}
			//Completed
			$sort = JRequest::getVar('sort','');
		$type = JRequest::getVar('type','');
		
		if( $sort == 'asc' && $type == 'coworker' ){
			$sorting = ' GROUP BY U.v_id order by V.company_name ASC ';
		}
		else if( $sort == 'desc' && $type == 'coworker' ){
			$sorting = ' GROUP BY U.v_id order by V.company_name DESC ';
		}
		else{
			$sorting = " GROUP BY U.v_id order by W.subscribe_type='', W.subscribe_type='public', W.subscribe_type='all'  ";
		}
		
		$query = $query . ' '.$sorting.'  ' ;
			//echo $query ;
			$db->setQuery($query);
			$totalprefers = $db->loadObjectList();
		//Funtion to get the eligible vendors
		$rfp_id = JRequest::getVar('rfpid','');
		$rfpinfo = $this->getrfpinfopre($rfp_id);
		$eligible_vendors =	$this->getVendorspre($rfpinfo->cust_id,$rfpinfo->property_id,$rfpinfo->id);
		$vendors_bids	=	$this->getVendor_bidsinfopre($eligible_vendors,$rfp_id);
		for($c=0; $c<count($vendors_bids); $c++){
		$elist[] = $vendors_bids[$c][0]->id ;
		}
		if($elist){
		$elist = $elist ;
		}
		else{
		$elist = '';
		}
		// to check the previously invited vendors
		$query_in = "SELECT vendorid from #__rfp_invitations where rfpid=".$rfp_id." ";
		$db->setQuery($query_in);
		$preinviters = $db->loadObjectList();
		
			for($cm=0; $cm<count($preinviters); $cm++){
			$prelist[] = $preinviters[$cm]->vendorid ;
			}
			
			if($prelist){
			$prelist = $prelist ;
			}
			else{
			$prelist = '';
			}
		
		for($im=0; $im<count($totalprefers); $im++){
		if(in_array($totalprefers[$im]->v_id,$prelist)) {
		$totalprefers[$im]->pre = 'yes';
		}
		else{
		$totalprefers[$im]->pre = 'no';		
		}
		}
		//Completed
		
		for($i=0; $i<count($totalprefers); $i++){
		if(in_array($totalprefers[$i]->v_id,$elist)) {
		$totalprefers[$i]->vendorstatus = 'eligible';
		}
		else{
		$totalprefers[$i]->vendorstatus = 'ineligible';		
		}
		}
		
		for( $sp=0; $sp<count($totalprefers); $sp++ ){
		//if($totalprefers[$sp]->v_id == '1796'){
	//echo $totalprefers[$sp]->v_id.'<br />' ;
	$totalprefers_new_w9	=	$this->checknewspecialrequirements_w9($totalprefers[$sp]->v_id,$rfp_id);
	$totalprefers_new_gli	=	$this->checknewspecialrequirements_gli($totalprefers[$sp]->v_id,$rfp_id);
	//echo "GLI: ".$totalprefers_new_gli.'<br />';
	$totalprefers_new_aip	=	$this->checknewspecialrequirements_aip($totalprefers[$sp]->v_id,$rfp_id);
	//echo "AIP: ".$totalprefers_new_aip.'<br />';
	$totalprefers_new_wci	=	$this->checknewspecialrequirements_wci($totalprefers[$sp]->v_id,$rfp_id);
	//echo "WCI: ".$totalprefers_new_wci.'<br />';
	$totalprefers_new_umb	=	$this->checknewspecialrequirements_umb($totalprefers[$sp]->v_id,$rfp_id);
	//echo "UMB: ".$totalprefers_new_umb.'<br />';
	$totalprefers_new_pln	=	$this->checknewspecialrequirements_pln($totalprefers[$sp]->v_id,$rfp_id);
	$totalprefers_new_occ	=	$this->checknewspecialrequirements_occ($totalprefers[$sp]->v_id,$rfp_id);
	$totalprefers_new_omi	=	$this->checknewspecialrequirements_omi($totalprefers[$sp]->v_id,$rfp_id);
	//echo "UMB: ".$totalprefers_new_pln.'<br />';
	
	//}
		if($totalprefers_new_w9 == 'success' && $totalprefers_new_gli == 'success' && $totalprefers_new_aip == 'success' && $totalprefers_new_wci == 'success' && $totalprefers_new_umb == 'success' && $totalprefers_new_pln == 'success' && $totalprefers_new_occ == 'success'  && $totalprefers_new_omi == 'success'){
			$totalprefers[$sp]->special_requirements = 'success' ;
			
			$masteraccount = $this->getmasterfirmaccount();
			$sql_terms = "SELECT termsconditions FROM #__cam_vendor_aboutus WHERE vendorid=".$masteraccount." "; 
			$db->setQuery($sql_terms);
			$terms_exist = $db->loadResult();
			
			if($terms_exist == '1'){
			$sql = "SELECT accepted FROM #__cam_vendor_terms WHERE vendorid=".$totalprefers[$sp]->v_id." and masterid=".$masteraccount." "; 
			$db->setQuery($sql);
			$terms = $db->loadResult();
				if($terms == '1'){
				$totalprefers[$sp]->special_requirements = 'success' ;
				}
				else{
				$totalprefers[$sp]->special_requirements = 'fail' ;
				}
			}
			else{
			
			}
			
			
		}
		else{
			$totalprefers[$sp]->special_requirements = 'fail' ;
		}
	}
	
		for( $sa=0; $sa<count($totalprefers); $sa++ ){
		$exclude = $this->checkexclude($totalprefers[$sa]->v_id);
		if($exclude == 'yes'){
			$totalprefers[$sa]->excluded = 'yes' ;
		}
		else{
			$totalprefers[$sa]->excluded = '' ;
		}
		
		// Adding block unverified vendor rule
	$user =& JFactory::getUser();
	$masterid = $this->getmasterfirmaccount();
	$block_per = "SELECT block, block_complinace FROM #__cam_master_block_users where masterid ='".$masterid."' ";
	$db->setQuery($block_per);
	$blockid = $db->loadObject();
	if( $blockid->block == '1' )
		$totalprefers[$sa]->unverified = 'hide' ;
	else	
		$totalprefers[$sa]->unverified = 'show' ;
	
	if( $blockid->block_complinace == '1' )
		$totalprefers[$sa]->block_nonc = 'hide' ;
	else	
		$totalprefers[$sa]->block_nonc = 'show' ;
	//Completed
	
	}
	
		return $totalprefers ;
	}
//Completed
	//To get the RFP details
 function getrfpinfopre($id){
 	global $mainframe;
	 	$db=&JFactory::getDBO();
		$query = "SELECT * FROM `#__cam_rfpinfo` WHERE id='".$id."'";
		$db->setQuery($query);
		$rfpinfo = $db->loadObject();
		return $rfpinfo;
 
 }
//Completed
	//Funtion to get eligible vendors
	
	//Function to get Vendors details for particular Industry
	function getVendorspre($userid,$property_id,$rfp_id)
	{
		//print_r($userid);  echo '<br>';
		//print_r($property_id);  echo '<br>';
		//print_r($rfp_id);
		global $mainframe;
		$db=&JFactory::getDBO();
		$user =& JFactory::getUser();
        $comp_zip = $user->get('comp_zip');
		$countyid = "SELECT divcounty FROM #__cam_property  WHERE  id=".$property_id;
		$db->setQuery($countyid);
		$comid = $db->loadResult();

		$county_sql = "SELECT distinct(user_id) FROM  #__vendor_state_counties  WHERE county_id = ".$comid;
		$db->setQuery($county_sql);
		$vendor_ids = $db->loadObjectList();
		//echo "<pre>"; print_r($vendor_ids);
        $industry_id = "SELECT industry_id,industry_id2 FROM  #__cam_rfpinfo  WHERE id = ".$rfp_id;
		$db->setQuery($industry_id);
		$industrys = $db->loadObject();
		$industryid = $industrys->industry_id;
		$industryid2 = $industrys->industry_id2;

	    $industry_detail = "SELECT industry_id FROM  #__cam_rfpindustries  WHERE rfpid = ".$rfp_id;
		$db->setQuery($industry_detail);
		$industry_ids = $db->loadObjectList();
		//echo "<pre>"; print_r($industry_ids);

		for($l=0; $l<count($industry_ids); $l++) {
		if($l>0){
		$industry_ids[$l]->industry_id = " OR industry_id=".$industry_ids[$l]->industry_id." OR industry_id=".$industryid." OR industry_id=".$industryid2 ;
		}
		else{
		$industry_ids[$l]->industry_id = "industry_id=".$industry_ids[$l]->industry_id." OR industry_id=".$industryid." OR industry_id=".$industryid2;
		}
		$or_industry = $or_industry.$industry_ids[$l]->industry_id ;
		}
        //echo '<pre>'; print_r($or_industry);
   if($industryid && !$or_industry){
        $or_industry= " industry_id=".$industryid;
   } else if($or_industry && !$industryid){
       $or_industry= $or_industry;
   } else {
      $or_industry = $or_industry." OR industry_id=".$industryid;
   }
   if($industryid2 != '0'){
	$or_industry = $or_industry." OR industry_id=".$industryid2;
	}
	for($i=0; $i<count($vendor_ids); $i++)
		{
	   $ind_sql = "SELECT user_id FROM  #__cam_vendor_industries  WHERE user_id = ".$vendor_ids[$i]->user_id." AND (".$or_industry.") ";
	//echo "<br><br>";
		$db->setQuery($ind_sql);
		$vendorids[$i] = $db->loadResult();

		}
 //exit;
		$query1 = "SELECT  * FROM  #__vendor_inviteinfo WHERE vendortype = 'exclude' AND userid=".$userid;
		$db->setQuery($query1);
		$v_id = $db->loadObjectList();
      
		if($v_id){
//echo 'anand in vid';
		foreach($v_id as $vid){
		$exvid[] = $vid->v_id;
		}
		if($vendorids)
//echo 'anand in vendorids';
		$result_appvendors = array_diff($vendorids, $exvid);
		}
		else{
		$result_appvendors = $vendorids;
		}
		//echo "<pre>"; print_r($result_appvendors);
		//To reject the rejected proposals
	$get_rej = 'SELECT * FROM #__cam_vendor_proposals WHERE rfpno = "'.$rfp_id.'" and proposaltype ="Reject"';
	$db->Setquery($get_rej);
	$rejprs = $db->loadObjectList();
  
	foreach($rejprs as $vid1){
		$rejs[] = $vid1->proposedvendorid;
		}
		if($rejs){
		$result_appvendors1 = array_diff($result_appvendors, $rejs);
		} else {
		$result_appvendors1 = $result_appvendors;
		}
		//echo "<pre>"; print_r($result_appvendors1);
		//exit;
		$vendorsinfo=array();
		$j=0;
		for($k=0;$k<=count($result_appvendors1);$k++){
	//	echo end($result_appvendors);

			$query2 = "SELECT u.id as id, c.id as vid, u.name,u.lastname,u.flag,u.suspend,u.email,c.company_phone,c.company_name,u.cellphone,c.alt_phone,u.username,u.password FROM #__users as u LEFT JOIN #__cam_vendor_company as c ON c.user_id=u.id WHERE u.block=0 and u.id=".$result_appvendors1[$k] ;
			$db->setQuery($query2);
			$result = $db->loadObjectList();

			if($result)
			{
			$vendorsinfo[$j]=$result;
			$j++;
			}


	}	//echo "<pre>"; print_r($vendorsinfo);
		//exit;
		return $vendorsinfo;

	}
	//Completed
	
	//Function to get eligible vendor
	
	function getVendor_bidsinfopre($arr,$rfp_id)
	{
	//echo "<pre>"; print_r($arr);
		$db=&JFactory::getDBO();
		for($i=0,$j=0; $i<count($arr); $i++)
		{
			$flag = $this->RFP_specialrequirments_validation($rfp_id,$arr[$i][0]->id);
			//echo $arr[$i][0]->id;
			//echo $flag; echo '</br>';

			if($flag == 0 || $flag == 1)
			{
				$new_arr[$j]	=	$arr[$i];
			 	$sql = "SELECT id, proposaltype, publish FROM #__cam_vendor_proposals WHERE Alt_bid != 'yes' AND  proposedvendorid	=	".$arr[$i][0]->id." AND rfpno = ".$rfp_id;
				$db->setQuery($sql);
				$res = $db->loadObjectList();
				if(count($arr) != 0)
				{
					$new_arr[$j][0]->proposal_id	=	$res[0]->id;
					$new_arr[$j][0]->proposaltype	=	$res[0]->proposaltype;
					$new_arr[$j][0]->publish		=	$res[0]->publish;
				}
				$j++;
			}

		} //exit;
		return $new_arr;
	}
	//Completed
	
			//code to validate RFP special requirements against vendor docs
	function RFP_specialrequirments_validation($rfpid,$vendor_id)
	{
			$flag = 0;
			$db=&JFactory::getDBO();
			//echo $vendor_id;
			//code to validate specialrequirements
			$sql = "SELECT distinct(req_parentid ) FROM #__cam_rfpreq_info WHERE rfp_id ='".$rfpid."'";
			$db->Setquery($sql);
			$main = $db->loadResultArray();
			$sql = "SELECT req_subparentid  FROM #__cam_rfpreq_info WHERE req_subparentid !=0 AND rfp_id ='".$rfpid."'";
			$db->Setquery($sql);
			$sub = $db->loadResultArray();
			$today = date('Y-m-d');
             $query ="select industry_id from #__cam_vendor_industries Where user_id =".$vendor_id;
		$db->setQuery($query);
		$getindustryids = $db->loadResultArray();
		if($getindustryids)
		{
		if(in_array('56',$getindustryids))
		$PLN_needed = 'yes';
		else $PLN_needed = 'no';
		}
		else
		$PLN_needed = 'no';
			// echo "<pre>"; print_r($main); print_r($sub);
			for($m = 0; $m<count($main); $m++)
			{
				if($flag == 0)
				{
				  switch($main[$m])
				  {

				  case 1:
				  			if($flag == 0)
							{
							 for($h=0;$h<count($sub); $h++)
							 {
								/* switch($sub[$h])
								  {
								  case 17:*/
									         if($flag == 0 && $sub[$h] == 17)
							                 {
											  $sql = "SELECT id  FROM #__cam_vendor_professional_license  WHERE PLN_expdate>= '".$today."' and PLN_status = 1 AND vendor_id=".$vendor_id;
											  $db->Setquery($sql);
											  $PLN = $db->loadResultArray();
											  $PLN_cnt = count($PLN) ;
											  if($PLN_cnt== 0){
												$flag = 1;
													}
											  }
									  //case 18:
									          if($flag == 0 && $sub[$h] == 18)
							                 {
												  $sql = "SELECT id  FROM #__cam_vendor_occupational_license WHERE OLN_expdate>= '".$today."' and OLN_status = 1 AND vendor_id=".$vendor_id;
												  $db->Setquery($sql);
												  $OLN = $db->loadResultArray();
												  $OLN_cnt = count($OLN) ;
												  if($OLN_cnt== 0){
														$flag = 1;
													}
											 }



									//} //switch($sub[$h])
								} //for($h=0;$h<count($sub); $h++)
							}
				   case 3:
						    if($flag == 0)
							{
								for($s=0;$s<count($sub); $s++)
								{
									  switch($sub[$s])
									  {

										 case 11:
												if($flag==0)
												{
								  $sql56 = "SELECT req_id  FROM #__cam_rfpreq_info WHERE rfp_id=".$rfpid;
								  $db->Setquery($sql56);
								  $req_id = $db->loadResult();
							 $sql2 = "SELECT id  FROM #__cam_vendor_workers_companies_insurance WHERE WCI_end_date>= '".$today."' and WCI_status = 1 AND vendor_id=".$vendor_id;
								  $db->Setquery($sql2);
								  $WCI = $db->loadResultArray();
								  $WCI_cnt = count($WCI) ;
								  if($WCI_cnt == 0){
								  $flag = 1;
								  		}
								if ($req_id=='19' &&  $flag=='0'){
							 	    $sql26 = "SELECT excemption  FROM #__cam_vendor_workers_companies_insurance WHERE WCI_end_date>= '".$today."' and WCI_status = 1 AND vendor_id=".$vendor_id;
									$db->Setquery($sql26);
								   $excemption = $db->loadObjectlist();
								  //$excemption=$excemption1[0]->excemption;
								  //echo "<pre>"; print_r($excemption);
								  // $WCI_cnt1 = count($excemption) ;
								   for($d=0;$d<count($excemption); $d++){
								//echo "<pre>"; print_r($excemption[$d]->excemption);
								          if(($excemption[$d]->excemption!= 0)&&($excemption[$d]->excemption!='')){
									         $flag=1;
									             } else {
									        $flag=0;
									        	}
								     	 	}
										 }
								
							    }
										// To check the commercial vehicle insurance policy documents
										case 21:
												if($flag==0 && $sub[$s] == 21)
												{
											  $sql_aip = "SELECT id  FROM #__cam_vendor_auto_insurance  WHERE aip_end_date>= '".$today."' and aip_status = 1 AND vendor_id=".$vendor_id;
											  $db->Setquery($sql_aip);
											  $AIP = $db->loadResultArray();
											  $AIP_count = count($AIP) ;
											 // exit;
											  if($AIP_count== 0){
												$flag = 1;
													}
												}
										//Completed		
										  case 12:
												if($flag==0)
												{
													  $sql = "SELECT sum(GLI_policy_aggregate)  FROM #__cam_vendor_liability_insurence  WHERE GLI_end_date>='".$today."'and GLI_status = 1 AND vendor_id=".$vendor_id;
													  $db->Setquery($sql);
													  $amount = $db->loadResult();
													  $spl_amount="SELECT price FROM #__cam_rfpreq_info WHERE rfp_id='".$rfpid."' and req_subparentid='12'";
													  $db->Setquery($spl_amount);
													  $amount1 = $db->loadResult();
													  $amount2 = doubleval(str_replace(",","",$amount1));
														 if($amount){
														if($amount2 > $amount){
														$flag=1;
														} else {
														 $flag=0;
														}
                                                      } else {
                                                        $flag=1;
                                                      }
												}
									  } //switch($main[$m])
								} //for($s=0;$s<count($sub); $s++)
							}
				 }
                  if($PLN_needed=='yes'){
                        $sql = "SELECT id  FROM #__cam_vendor_professional_license  WHERE PLN_expdate>= '".$today."'AND PLN_status = 1 AND vendor_id=".$vendor_id;
											  $db->Setquery($sql);
											  $PLN = $db->loadResultArray();
											  $PLN_cnt = count($PLN) ;
											 // echo "Vendor ID: ".$vendor_id." ".$PLN_cnt."<br>";
											  if($PLN_cnt== 0){
												$flag = 1;
													}

                     }
				}
			} //echo $flag; 	//for($m = 0; $m < count($main); $m++)
			 return $flag;
	}
	
	function getinvitevendor($rfpid){
	$db = JFactory::getDBO();
	 $query_in = "SELECT DISTINCT(u.vendorid), v.company_name,v.city,v.company_phone,v.phone_ext,v.fax_id,v.tax_id,v.state from #__rfp_invitations as u, #__cam_vendor_company as v where u.rfpid=".$rfpid." and u.vendorid=v.user_id ";
	$db->setQuery($query_in);
	$totalprefers = $db->loadObjectList();
	
	for( $sp=0; $sp<count($totalprefers); $sp++ ){
	$totalprefers_new_w9	=	$this->checknewspecialrequirements_w9($totalprefers[$sp]->vendorid,$rfpid);
	$totalprefers_new_gli	=	$this->checknewspecialrequirements_gli($totalprefers[$sp]->vendorid,$rfpid);
	$totalprefers_new_aip	=	$this->checknewspecialrequirements_aip($totalprefers[$sp]->vendorid,$rfpid);
	$totalprefers_new_wci	=	$this->checknewspecialrequirements_wci($totalprefers[$sp]->vendorid,$rfpid);
	$totalprefers_new_umb	=	$this->checknewspecialrequirements_umb($totalprefers[$sp]->vendorid,$rfpid);
	$totalprefers_new_pln	=	$this->checknewspecialrequirements_pln($totalprefers[$sp]->vendorid,$rfpid);
	$totalprefers_new_occ	=	$this->checknewspecialrequirements_occ($totalprefers[$sp]->vendorid,$rfpid);
	$totalprefers_new_omi	=	$this->checknewspecialrequirements_omi($totalprefers[$sp]->vendorid,$rfpid);
	
		if($totalprefers_new_w9 == 'success' && $totalprefers_new_gli == 'success' && $totalprefers_new_aip == 'success' && $totalprefers_new_wci == 'success' && $totalprefers_new_umb == 'success' && $totalprefers_new_pln == 'success' && $totalprefers_new_occ == 'success'  && $totalprefers_new_omi == 'success'){
			$totalprefers[$sp]->special_requirements = 'success' ;
			$masteraccount = $this->getmasterfirmaccount();
			$sql_terms = "SELECT termsconditions FROM #__cam_vendor_aboutus WHERE vendorid=".$masteraccount." "; 
			$db->setQuery($sql_terms);
			$terms_exist = $db->loadResult();
			if($terms_exist == '1'){
			$sql = "SELECT accepted FROM #__cam_vendor_terms WHERE vendorid=".$totalprefers[$sp]->vendorid." and masterid=".$masteraccount." "; 
			$db->setQuery($sql);
			$terms = $db->loadResult();
				if($terms == '1'){
				$totalprefers[$sp]->special_requirements = 'success' ;
				}
				else{
				$totalprefers[$sp]->special_requirements = 'fail' ;
				}
			}
			else{
			
			}
		}
		else{
			$totalprefers[$sp]->special_requirements = 'fail' ;
		}
			$sql_udata = "SELECT name, lastname, email, subscribe_type FROM #__users WHERE id=".$totalprefers[$sp]->vendorid." "; 
			$db->setQuery($sql_udata);
			$usedata = $db->loadObject();
			$totalprefers[$sp]->name = $usedata->name ;
			$totalprefers[$sp]->lastname = $usedata->lastname ;
			$totalprefers[$sp]->email = $usedata->email ;
			$totalprefers[$sp]->subscribe_type = $usedata->subscribe_type ;
			
			$sql_uninvite = "SELECT proposaltype FROM #__cam_vendor_proposals WHERE rfpno=".$rfpid." and proposedvendorid=".$totalprefers[$sp]->vendorid." "; 
			$db->setQuery($sql_uninvite);
			$undate_invite = $db->loadResult();
			$totalprefers[$sp]->uninvited = $undate_invite ;
			
	}
	//echo "<pre>";	print_r($totalprefers); echo "</pre>";exit;
	return $totalprefers;
	}
	
	function getinvitevendor_basic($rfpid){
	$db = JFactory::getDBO();
	$query_in = "SELECT DISTINCT(u.vendorid), v.company_name,v.city,v.company_phone,v.phone_ext,v.fax_id,v.tax_id,v.state from #__rfp_invitations as u, #__cam_vendor_company as v where u.rfpid=".$rfpid." and u.vendorid=v.user_id ";
	$db->setQuery($query_in);
	$totalprefers = $db->loadObjectList();
	
		for( $p=0; $p<count($totalprefers); $p++ ){
			$c_status =	$this->checkcompliancestatus($totalprefers[$p]->vendorid);
			$totalprefers[$p]->cstatus = $c_status ;
		}
		//echo "<pre>"; print_r($totalprefers); echo "</pre>";
	for( $sp=0; $sp<count($totalprefers); $sp++ ){
		$only_state = $totalprefers[$sp]->cstatus ;
		
		if($only_state){
			foreach($only_state as $statues){
				$final_state[] = $statues->status;
				$med_fina_state = '';
				$med_fina_state = array_unique($final_state);
				
					if( count($med_fina_state) == 2 ) {
						$totalprefers[$sp]->final_status = 'medium' ;
					}
					if( count($med_fina_state) == 1 &&  $med_fina_state[0] == 'fail') {
						$totalprefers[$sp]->final_status = 'fail' ;
					}
					if( count($med_fina_state) == 1 &&  $med_fina_state[0] == 'success' ){
					
									$totalprefers[$sp]->final_status = 'success' ;
									$masteraccount = $this->getmasterfirmaccount($user->id);
										$sql_terms = "SELECT termsconditions FROM #__cam_vendor_aboutus WHERE vendorid=".$masteraccount." "; 
										$db->setQuery($sql_terms);
										$terms_exist = $db->loadResult();
										
										if($terms_exist == '1'){
										$sql = "SELECT accepted FROM #__cam_vendor_terms WHERE vendorid=".$totalprefers[$sp]->vendorid." and masterid=".$masteraccount." "; 
										$db->setQuery($sql);
										$terms = $db->loadResult();
											if($terms == '1'){
											$totalprefers[$sp]->final_status = 'success' ;
											}
											else{
											$totalprefers[$sp]->final_status = 'fail' ;
											}
										}
										else{
										
										}
					
					}
								
			}
						$final_state = '';
						$med_fina_state = '';
		}
			$sql_udata = "SELECT name, lastname, email, subscribe_type FROM #__users WHERE id=".$totalprefers[$sp]->vendorid." "; 
			$db->setQuery($sql_udata);
			$usedata = $db->loadObject();
			$totalprefers[$sp]->name = $usedata->name ;
			$totalprefers[$sp]->lastname = $usedata->lastname ;
			$totalprefers[$sp]->email = $usedata->email ;
			$totalprefers[$sp]->subscribe_type = $usedata->subscribe_type ;
			$sql_uninvite = "SELECT proposaltype FROM #__cam_vendor_proposals WHERE rfpno=".$rfpid." and proposedvendorid=".$totalprefers[$sp]->vendorid." "; 
			$db->setQuery($sql_uninvite);
			$undate_invite = $db->loadResult();
			$totalprefers[$sp]->uninvited = $undate_invite ;
				
	}
	//echo "<pre>";	print_r($totalprefers); echo "</pre>";
	return $totalprefers;
	}
	
	
	function checkcompliancestatus($vendorid){
		$db=&JFactory::getDBO();
		$user =& JFactory::getUser();
		$master =	$this->getmasterfirmaccount();
		$vendorindustrieslist = $this->vendorallindustries($vendorid);
		
			for( $vi=0; $vi<count($vendorindustrieslist); $vi++ )
				{
					$totalprefers_new_w9	=	$this->checknewspecialrequirements_w9_indus($vendorid,$vendorindustrieslist[$vi]->value,$master);
					$totalprefers_new_gli	=	$this->checknewspecialrequirements_gli_indus($vendorid,$vendorindustrieslist[$vi]->value,$master);
					$totalprefers_new_aip	=	$this->checknewspecialrequirements_aip_indus($vendorid,$vendorindustrieslist[$vi]->value,$master);
					$totalprefers_new_wci	=	$this->checknewspecialrequirements_wci_indus($vendorid,$vendorindustrieslist[$vi]->value,$master);
					$totalprefers_new_umb	=	$this->checknewspecialrequirements_umb_indus($vendorid,$vendorindustrieslist[$vi]->value,$master);
					$totalprefers_new_pln	=	$this->checknewspecialrequirements_pln_indus($vendorid,$vendorindustrieslist[$vi]->value,$master);
					$totalprefers_new_occ	=	$this->checknewspecialrequirements_occ_indus($vendorid,$vendorindustrieslist[$vi]->value,$master);
					$totalprefers_new_omi	=	$this->checknewspecialrequirements_omi_indus($vendorid,$vendorindustrieslist[$vi]->value,$master);
					
					$vendorindustrieslist[$vi]->status = '' ;
					
					/*if($vendorid == '1802' ){
					echo $vendorindustrieslist[$vi]->value;
					echo "GLI".$totalprefers_new_gli ;
					echo "AIP".$totalprefers_new_aip ;
					echo "WCI".$totalprefers_new_wci ;
					echo "UMB".$totalprefers_new_umb ;
					echo "PLN".$totalprefers_new_pln ;
					echo "OCC:".$totalprefers_new_occ;
					echo "<br><br>";
				}*/
				
					if($totalprefers_new_w9 == 'success' && $totalprefers_new_gli == 'success' && $totalprefers_new_aip == 'success' && $totalprefers_new_wci == 'success' && $totalprefers_new_umb == 'success' && $totalprefers_new_pln == 'success' && $totalprefers_new_occ == 'success'  && $totalprefers_new_omi == 'success' ){
							$vendorindustrieslist[$vi]->status = 'success' ;
						}
						else{
							$vendorindustrieslist[$vi]->status = 'fail' ;
						}
		
				}	
				
		return  $vendorindustrieslist;
	}
	
	function vendorallindustries($vendorid){
	 	$db=&JFactory::getDBO();
		$user =& JFactory::getUser();
		$query = "SELECT U.industry_id as value, V.industry_name FROM #__cam_vendor_industries as U, #__cam_industries as V where U.industry_id=V.id and U.user_id = ".$vendorid." and V.published='1' ";
		$db->setQuery($query);
		$industryList = $db->loadObjectList();
		return $industryList;
	 }
	 
	
	function getstatelist()
	{
		$db =& JFactory::getDBO();
		$query_states = "SELECT * FROM #__state";
		$db->setQuery($query_states);
		$result_states = $db->loadObjectList();
		return $result_states;
	}
	//Function to get all industries
	function getallindustries(){
	$db = JFactory::getDBO();
	$sql = "SELECT * FROM #__cam_industries WHERE published=1 order by industry_name ";
	$db->Setquery($sql);
	$industries = $db->loadObjectList();
	return $industries ;
	}
	//funtion to get the individual invitations
	function ownpreferredvendors(){
	$db =& JFactory::getDBO();
	$user =& JFactory::getUser();
	$query = "SELECT V.company_name,V.city,V.state,V.company_phone,V.phone_ext,V.fax_id,V.tax_id,U.vendortype,U.vid,U.v_id,U.userid as managerid, U.status,U.inhousevendors, W.name, W.lastname from #__vendor_inviteinfo as U, #__cam_vendor_company as V, #__users as W where LOWER(U.inhousevendors) = (W.email) and V.user_id=W.id and U.exclude!='yes' and W.search=''and U.userid=".$user->id."  ";
	$db->setQuery($query);
	$own = $db->loadObjectList();
	
	if($own){
				foreach($own as $vid){
				$owns[] = $vid->managerid;
				}
			}	
	return $owns; 
	}
	//Function to get the company wide preferred vendors
function getsponsorvendors()
	{
 		
 			$user =& JFactory::getUser();
			$db = & JFactory::getDBO();
			$state = JRequest::getVar( 'state','');	
	 		$county = JRequest::getVar( 'divcounty','');
			$industrytype = JRequest::getVar( 'industrytype','');
			if(!$state){
			$county = '';
			}		
			else{
			$county = $county;
			}	
		if($user->user_type == 12){
		$getc = "SELECT comp_id FROM #__cam_customer_companyinfo where cust_id =".$user->id."  ";
		$db->setQuery($getc);
		$companyid = $db->loadResult();
		}
		else{
		$getc = "SELECT id FROM #__cam_camfirminfo where cust_id =".$user->id."  ";
		$db->setQuery($getc);
		$companyid = $db->loadResult();
		}	
		
	 	$query = "SELECT V.company_name,V.city,V.state,V.company_phone,V.phone_ext,V.fax_id,V.tax_id,W.name,W.lastname,W.id,W.email from #__cam_vendor_company as V, #__users as W where ( W.subscribe_type='sponsor' || W.subscribe_type='all') and V.user_id=W.id and W.search='' ";
	
		$db->setQuery($query);
		$totalprefers = $db->loadObjectList();
		//To get the vendors based on industry
			if($industrytype){
			$checkvendors = "SELECT distinct(user_id) FROM #__cam_vendor_industries where industry_id=".$industrytype." ";
			$db->setQuery($checkvendors);
			$accpetvendor = $db->loadObjectList();
			
			if($totalprefers){
				foreach($totalprefers as $vid){
				$existing[] = $vid->v_id;
				}
			}	
			if($accpetvendor){
				foreach($accpetvendor as $inids){
				$indusids[] = $inids->user_id;
				}
			}
			if($indusids != '' && $existing!= ''){
			$common = array_intersect($indusids, $existing) ;
			}
			if($common){
			$indus_condition = implode(',',$common) ;
			}
			if($indus_condition)
			$query = $query . "AND V.user_id IN ("  . $indus_condition . ")" ;
			else
			$query = $query . "AND V.user_id IN ('')" ;
			}
			//echo $query ;
		if($county){
			$checkvendors1 = "SELECT distinct(user_id) FROM #__vendor_state_counties where county_id=".$county." ";
			$db->setQuery($checkvendors1);
			$accpetvendor1 = $db->loadObjectList();
			
			if($totalprefers){
				foreach($totalprefers as $vid){
				$existing[] = $vid->id;
				}
			}	
			if($accpetvendor1){
				foreach($accpetvendor1 as $county){
				$countys[] = $county->user_id;
				}
			}
			//echo "<pre>"; print_r($countys);
			//echo "<pre>"; print_r($existing);
			if($countys != '' && $existing!= ''){
			$common = array_intersect($countys, $existing) ;
			}
			if($common){
			$county_condition = implode(',',$common) ;
			}
			if($county_condition)
			$query = $query . "AND V.user_id IN ("  . $county_condition . ")" ;
			else
			$query = $query . "AND V.user_id IN ('')" ;
			}
			
			//If selecting state and not selecting ny county
			if($state && !$county){
			$checkvendorsstate = "SELECT distinct(user_id) FROM #__vendor_state_counties where state_id='".$state."' ";
			$db->setQuery($checkvendorsstate);
			$statevendors = $db->loadObjectList();
			if($totalprefers){
				foreach($totalprefers as $vid){
				$existing[] = $vid->id;
				}
			}	
			if($statevendors){
				foreach($statevendors as $county){
				$countys[] = $county->user_id;
				}
			}
			if($countys != '' && $existing!= ''){
			$common = array_intersect($countys, $existing) ;
			}
			if($common){
			$county_condition = implode(',',$common) ;
			}
			if($county_condition)
			$query = $query . "AND V.user_id IN ("  . $county_condition . ")" ;
			else
			$query = $query . "AND V.user_id IN ('')" ;
			}
			//Completed
			$query = $query . '   ' ;
			
		$sort = JRequest::getVar('sort','');	
		if( $sort == 'asc' ){
		$sorting = ' GROUP BY W.id order by V.company_name ASC ';
		}
		else if( $sort == 'desc' ){
			$sorting = ' GROUP BY W.id order by V.company_name DESC ';
		}
		else{
			$sorting = " GROUP BY W.id ";
		}
		
		
		
		/*$sort = JRequest::getVar('sort','');
		if($sort == 'asc' || $sort == ''){
			$sorting = ' GROUP BY U.v_id order by V.company_name ASC ';
		}
		else{
			$sorting = 'GROUP BY U.v_id order by V.company_name DESC ';
		}*/
		
		$query = $query . ' '.$sorting.'  ' ;
			//echo $query ;
			$db->setQuery($query);
			$totalprefers = $db->loadObjectList();
		//Funtion to get the eligible vendors
		$rfp_id = JRequest::getVar('rfpid','');
		$rfpinfo = $this->getrfpinfopre($rfp_id);
		$eligible_vendors =	$this->getVendorspre($rfpinfo->cust_id,$rfpinfo->property_id,$rfpinfo->id);
		$vendors_bids	=	$this->getVendor_bidsinfopre($eligible_vendors,$rfp_id);
		//echo "<pre>"; print_r($vendors_bids); 
		for($c=0; $c<count($vendors_bids); $c++){
		$elist[] = $vendors_bids[$c][0]->id ;
		}
		if($elist){
		$elist = $elist ;
		}
		else{
		$elist = '';
		}
//echo "<pre>"; print_r($elist); 
		// to check the previously invited vendors
		
		$query_in = "SELECT vendorid from #__rfp_invitations where rfpid=".$rfp_id." ";
		$db->setQuery($query_in);
		$preinviters = $db->loadObjectList();
		
			for($cm=0; $cm<count($preinviters); $cm++){
			$prelist[] = $preinviters[$cm]->vendorid ;
			}
			
			if($prelist){
			$prelist = $prelist ;
			}
			else{
			$prelist = '';
			}
		//echo "<pre>"; print_r($totalprefers); exit;
		for($im=0; $im<count($totalprefers); $im++){
		if(in_array($totalprefers[$im]->id,$prelist)) {
		$totalprefers[$im]->pre = 'yes';
		}
		else{
		$totalprefers[$im]->pre = 'no';		
		}
		}
		//Completed
		
		for($i=0; $i<count($totalprefers); $i++){
		if(in_array($totalprefers[$i]->id,$elist)) {
		$totalprefers[$i]->vendorstatus = 'eligible';
		}
		else{
		$totalprefers[$i]->vendorstatus = 'ineligible';		
		}
		}
		
		// Check new special requirements
	for( $sp=0; $sp<count($totalprefers); $sp++ ){
		//if($totalprefers[$sp]->id == '1767'){
	//echo $totalprefers[$sp]->id.'<br />' ;
	$totalprefers_new_gli	=	$this->checknewspecialrequirements_gli($totalprefers[$sp]->id,$rfp_id);
	//echo "GLI: ".$totalprefers_new_gli.'<br />';
	$totalprefers_new_aip	=	$this->checknewspecialrequirements_aip($totalprefers[$sp]->id,$rfp_id);
	//echo "AIP: ".$totalprefers_new_aip.'<br />';
	$totalprefers_new_wci	=	$this->checknewspecialrequirements_wci($totalprefers[$sp]->id,$rfp_id);
	//echo "WCI: ".$totalprefers_new_wci.'<br />';
	$totalprefers_new_umb	=	$this->checknewspecialrequirements_umb($totalprefers[$sp]->id,$rfp_id);
	//echo "UMB: ".$totalprefers_new_umb.'<br />';
	$totalprefers_new_pln	=	$this->checknewspecialrequirements_pln($totalprefers[$sp]->id,$rfp_id);
	$totalprefers_new_occ	=	$this->checknewspecialrequirements_occ($totalprefers[$sp]->id,$rfp_id);
	$totalprefers_new_omi	=	$this->checknewspecialrequirements_omi($totalprefers[$sp]->id,$rfp_id);
	//echo "UMB: ".$totalprefers_new_umb.'<br />';
	
	//}
		if($totalprefers_new_gli == 'success' && $totalprefers_new_aip == 'success' && $totalprefers_new_wci == 'success' && $totalprefers_new_umb == 'success' && $totalprefers_new_pln == 'success' && $totalprefers_new_occ == 'success' && $totalprefers_new_omi == 'success' ){
			$totalprefers[$sp]->special_requirements = 'success' ;
			
			$masteraccount = $this->getmasterfirmaccount();
			$sql_terms = "SELECT termsconditions FROM #__cam_vendor_aboutus WHERE vendorid=".$masteraccount." "; 
			$db->setQuery($sql_terms);
			$terms_exist = $db->loadResult();
			
			if($terms_exist == '1'){
			$sql = "SELECT accepted FROM #__cam_vendor_terms WHERE vendorid=".$totalprefers[$sp]->v_id." and masterid=".$masteraccount." "; 
			$db->setQuery($sql);
			$terms = $db->loadResult();
				if($terms == '1'){
				$totalprefers[$sp]->special_requirements = 'success' ;
				}
				else{
				$totalprefers[$sp]->special_requirements = 'fail' ;
				}
			}
			else{
			
			}
						
			
		}
		else{
			$totalprefers[$sp]->special_requirements = 'fail' ;
		}
	}
	//Completed
	
		//echo "<pre>"; print_r($totalprefers); exit;
		return $totalprefers ;
	}
//Completed

function checknewspecialrequirements_w9($vendorid,$rfpid){
		$db = & JFactory::getDBO();
		$w9_data ="SELECT * from #__cam_vendor_compliance_w9docs  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($w9_data);
		$vendor_w9_data = $db->loadObjectList();
		$rfp_w9_data ="SELECT * from #__cam_master_w9_standards_rfps  WHERE rfpid=".$rfpid; //validation to status of docs
		$db->Setquery($rfp_w9_data);
		$rfp_w9_data = $db->loadObject();
		$occur_w9 = '';
		
		if($rfp_w9_data){
			if( !$vendor_w9_data[0]->w9_upld_cert || $vendor_w9_data[0]->w9_status == '-1') {
				$occur_w9[] = 'no' ;
			}
			else{
				$occur_w9[] = 'yes' ;
			}
		}
		if( in_array("no", $occur_w9) ){
			$cabins_w9[] = "no";
		}
		else{
			$cabins_w9[] = "yes";
		}
		$occur_w9 = '';
		
		if($cabins_w9){
			if( in_array("yes", $cabins_w9) ){
			$special_w9 = "success";
			}
			else{
			$special_w9 = "fail";
			}
		}
		else{
				if($rfp_w9_data)
				$special_w9 = "fail";
				else
				$special_w9 = "success";
		}
			
		$cabins_w9[] = '';
		return $special_w9 ;
		
	}
	
//Function to check new special requirements
	function checknewspecialrequirements_gli($vendorid,$rfpid){
		$db = & JFactory::getDBO();
		//echo $vendorid;
		$gli_data ="SELECT * from #__cam_vendor_liability_insurence  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($gli_data);
		$vendor_gli_data = $db->loadObjectList();
		//Get RFP data
		$rfp_gli_data ="SELECT * from #__cam_master_generalinsurance_standards_rfps  WHERE rfpid=".$rfpid; //validation to status of docs
		$db->Setquery($rfp_gli_data);
		$rfp_gli_data = $db->loadObject();
		$occur = '';
		for( $gl=0; $gl<count($vendor_gli_data); $gl++ ){
			if($rfp_gli_data->occur ==  'yes'){
				if( $vendor_gli_data[$gl]->GLI_occur == 'occur' ){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->each_occurrence >  '0'){
				if($rfp_gli_data->each_occurrence <= $vendor_gli_data[$gl]->GLI_policy_occurence){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->damage_retend > '0'){
				if($rfp_gli_data->damage_retend <= $vendor_gli_data[$gl]->GLI_damage){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->med_expenses > '0'){
				if($rfp_gli_data->med_expenses <= $vendor_gli_data[$gl]->GLI_med){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}	
			if($rfp_gli_data->personal_inj > '0'){
				if($rfp_gli_data->personal_inj <= $vendor_gli_data[$gl]->GLI_injury){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->general_aggr > '0'){	
				if($rfp_gli_data->general_aggr <= $vendor_gli_data[$gl]->GLI_policy_aggregate){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}

			if($rfp_gli_data->applies_to == 'pol'){
				if($vendor_gli_data[$gl]->GLI_applies == 'pol'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->applies_to == 'proj'){
				if($vendor_gli_data[$gl]->GLI_applies == 'proj'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->applies_to == 'loc'){
				if($vendor_gli_data[$gl]->GLI_applies == 'loc'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->products_aggr >  '0'){
				if($rfp_gli_data->products_aggr <= $vendor_gli_data[$gl]->GLI_products){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}	
			if($rfp_gli_data->waiver_sub == 'yes') {
				if($vendor_gli_data[$gl]->GLI_waiver == 'waiver'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->primary_noncontr == 'yes') {
				if($vendor_gli_data[$gl]->GLI_primary == 'primary'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->additional_insured == 'yes') {

				if($vendor_gli_data[$gl]->GLI_additional){

					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->cert_holder == 'yes') {
				if($vendor_gli_data[$gl]->GLI_certholder == 'yes'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
				if($rfp_gli_data){
					if($vendor_gli_data[$gl]->GLI_end_date < date('Y-m-d') || !$vendor_gli_data[$gl]->GLI_upld_cert || !$vendor_gli_data[$gl]->GLI_policy_occurence || !$vendor_gli_data[$gl]->GLI_policy_aggregate || $vendor_gli_data[$gl]->GLI_status == '-1') {
						$occur[] = 'no' ;
					}
					else{
						$occur[] = 'yes' ;
					}
				}
		
			//echo "<pre>"; print_r($occur); echo "</pre>"; 
			if( in_array("no", $occur) ){
			$cabins_gli[] = "no";
			}
			else{
			$cabins_gli[] = "yes";
			}
			$occur = '';
		}
		
		if($cabins_gli){
			if( in_array("yes", $cabins_gli) ){
			$special = "success";
			}
			else{
			$special = "fail";
			}
		}
		else{
				if($rfp_gli_data)
				$special = "fail";
				else
				$special = "success";
		}
			
		$cabins_gli[] = '';
		return $special ;
		
	}
//Completed
	function checknewspecialrequirements_aip($vendorid,$rfpid){
		$db = & JFactory::getDBO();
		$aip_data ="SELECT * from #__cam_vendor_auto_insurance  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($aip_data);
		$vendor_aip_data = $db->loadObjectList();
		//Get RFP data
		$rfp_aip_data ="SELECT * from #__cam_master_autoinsurance_standards_rfps  WHERE rfpid=".$rfpid; //validation to status of docs
		$db->Setquery($rfp_aip_data);
		$rfp_aip_data = $db->loadObject();
		
			for( $ai=0; $ai<count($vendor_aip_data); $ai++ ){
				if($rfp_aip_data->applies_to_any == 'any'){
					if($rfp_aip_data->applies_to_any == $vendor_aip_data[$ai]->aip_applies_any){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}

				if($rfp_aip_data->applies_to_owned == 'owned'){
					if($rfp_aip_data->applies_to_owned == $vendor_aip_data[$ai]->aip_applies_owned){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}

				if($rfp_aip_data->applies_to_nonowned == 'nonowned'){
					if($rfp_aip_data->applies_to_nonowned == $vendor_aip_data[$ai]->aip_applies_nonowned){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}

				if($rfp_aip_data->applies_to_hired == 'hired'){
					if($rfp_aip_data->applies_to_hired == $vendor_aip_data[$ai]->aip_applies_hired){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}

				if($rfp_aip_data->applies_to_scheduled == 'scheduled'){
					if($vendor_aip_data[$ai]->aip_applies_scheduled == 'sch'){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->combined_single > '0'){	
					if($rfp_aip_data->combined_single <= $vendor_aip_data[$ai]->aip_combined){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->bodily_injusy_person > '0'){	
					if($rfp_aip_data->bodily_injusy_person <= $vendor_aip_data[$ai]->aip_bodily){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->bodily_injusy_accident > '0'){	
					if($rfp_aip_data->bodily_injusy_accident <= $vendor_aip_data[$ai]->aip_body_injury){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->property_damage > '0'){	
					if($rfp_aip_data->property_damage <= $vendor_aip_data[$ai]->aip_property){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->waiver == 'yes'){
					if($vendor_aip_data[$ai]->aip_waiver == 'waiver'){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->primary == 'yes'){
					if($vendor_aip_data[$ai]->aip_primary == 'primary'){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->additional_ins == 'yes'){
					if($vendor_aip_data[$ai]->aip_addition != ''){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->cert_holder == 'yes'){
					if($vendor_aip_data[$ai]->aip_cert == 'yes'){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data){
					if($vendor_aip_data[$ai]->aip_end_date < date('Y-m-d') || $vendor_aip_data[$ai]->aip_upld_cert=='' || $vendor_aip_data[$ai]->aip_status == '-1' || !$vendor_aip_data[$ai]->aip_combined ) 		{
						$occur_aip[] = 'no' ;
						}
					else
						{
						$occur_aip[] = 'yes' ;
						}
				}
				
				if( in_array("no", $occur_aip) ){
					$cabins_aip[] = "no";
				}
				else{
					$cabins_aip[] = "yes";
				}
				$occur_aip = '';	
			}	
			if($cabins_aip){
				if( in_array("yes", $cabins_aip) ){
					$special_aip = "success";
				}
				else{
					$special_aip = "fail";
				}
			}
			else{
				if($rfp_aip_data)
				$special_aip = "fail";
				else
				$special_aip = "success";
			}
			
				$cabins_aip[] = '';
		
		return $special_aip ;
		
		
	}
	//Function to check WCI documents
	function checknewspecialrequirements_wci($vendorid,$rfpid){
		
		$db = & JFactory::getDBO();
		$wci_data ="SELECT * from #__cam_vendor_workers_companies_insurance  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($wci_data);
		$vendor_wci_data = $db->loadObjectList();
		//Get RFP data
		$rfp_wci_data ="SELECT * from #__cam_master_workers_standards_rfps WHERE rfpid=".$rfpid; //validation to status of docs
		$db->Setquery($rfp_wci_data);
		$rfp_wci_data = $db->loadObject();

			for( $wci=0; $wci<count($vendor_wci_data); $wci++ ){
				
				if($rfp_wci_data->disease_policy > '0'){	
					if($rfp_wci_data->disease_policy <= $vendor_wci_data[$wci]->WCI_disease_policy){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}	
					
				if($rfp_wci_data->disease_eachemp > '0'){
					if($rfp_wci_data->disease_eachemp <= $vendor_wci_data[$wci]->WCI_disease){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}
				
				if($rfp_wci_data->waiver_work == 'yes'){
					if($vendor_wci_data[$wci]->WCI_waiver == 'waiver'){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}
				
				if($rfp_wci_data->each_accident > '0'){
					if($rfp_wci_data->each_accident <= $vendor_wci_data[$wci]->WCI_each_accident){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}
				
				if($rfp_wci_data->certholder_work == 'yes'){
					if($vendor_wci_data[$wci]->WCI_cert == 'yes'){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}
				if($rfp_wci_data){
					if($vendor_wci_data[$wci]->WCI_end_date < date('Y-m-d') || $vendor_wci_data[$wci]->WCI_upld_cert=='' || $vendor_wci_data[$wci]->WCI_status == '-1') {
							$occur_wci[] = 'no' ;
					}
					else{
							$occur_wci[] = 'yes' ;
					}
				}	
				if( in_array("no", $occur_wci) ){
					$cabins_wci[] = "no";
				}
				else{
					$cabins_wci[] = "yes";
				}
				$occur_wci = '';
			}
			
			if($cabins_wci){
				if( in_array("yes", $cabins_wci) ){
					$special_wci = "success";
				}
				else{
					$special_wci = "fail";
				}
			}
			else{
				if($rfp_wci_data)
				$special_wci = "fail";
				else
				$special_wci = "success";
			}
			
				$cabins_wci[] = '';
		
		return $special_wci ;
	}
	
	//COmpleted
	//function to check umbrella liability documents
	 function checknewspecialrequirements_umb($vendorid,$rfpid){
		$db = & JFactory::getDBO();
		//echo $vendorid.'<br />';
		$umb_data ="SELECT * from #__cam_vendor_umbrella_license  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($umb_data);
		$vendor_umb_data = $db->loadObjectList();
		//Get RFP data
		$rfp_umb_data ="SELECT * from #__cam_master_umbrellainsurance_standards_rfps WHERE rfpid=".$rfpid; //validation to status of docs
		$db->Setquery($rfp_umb_data);
		$rfp_umb_data = $db->loadObject();
		
			for( $umb=0; $umb<count($vendor_umb_data); $umb++ ){
				
				if($rfp_umb_data->each_occur > '0'){	
					if($rfp_umb_data->each_occur <= $vendor_umb_data[$umb]->UMB_occur){
						$occur_umb[] = 'yes' ;
					}
					else{
						$occur_umb[] = 'no' ;
					}
				}	
				if($rfp_umb_data->aggregate > '0'){	
					if($rfp_umb_data->aggregate <= $vendor_umb_data[$umb]->UMB_aggregate){
						$occur_umb[] = 'yes' ;
					}
					else{
						$occur_umb[] = 'no' ;
					}
				}	
				if($rfp_umb_data->certholder_umbrella == 'yes'){
					if($vendor_umb_data[$umb]->UMB_certholder == 'yes'){
						$occur_umb[] = 'yes' ;
					}
					else{
						$occur_umb[] = 'no' ;
					}
				}
				if($rfp_umb_data){
				if($vendor_umb_data[$umb]->UMB_expdate < date('Y-m-d') || !$vendor_umb_data[$umb]->UMB_upld_cert || $vendor_umb_data[$umb]->UMB_status == '-1' || !$vendor_umb_data[$umb]->UMB_aggregate || !$vendor_umb_data[$umb]->UMB_occur) {
						$occur_umb[] = 'no' ;
				}
				else{
						$occur_umb[] = 'yes' ;
				}
				}
				//echo "<pre>"; print_r($occur_umb); echo "</pre>";
				if( in_array("no", $occur_umb) ){
					$cabins_umb[] = "no";
				}
				else{
					$cabins_umb[] = "yes";
				}
				$occur_umb = '';
			}	 
				
				if($cabins_umb){
					if( in_array("yes", $cabins_umb) ){
						$special_umb = "success";
					}
					else{
						$special_umb = "fail";
					}
				}
				else{
					if($rfp_umb_data)
					$special_umb = "fail";
					else
					$special_umb = "success";
				}
		
				$cabins_umb[] = '';
				return $special_umb ;
	 }
	//Completed
	//Funcion to check professional licensw
	function checknewspecialrequirements_pln($vendorid,$rfpid){

		$db = & JFactory::getDBO();
		$pln_data ="SELECT * from #__cam_vendor_professional_license  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($pln_data);
		$vendor_pln_data = $db->loadObjectList();
		//Get RFP data
		$rfp_pln_data ="SELECT * from #__cam_master_licinsurance_standards_rfps WHERE rfpid=".$rfpid; //validation to status of docs
		$db->Setquery($rfp_pln_data);
		$rfp_pln_data = $db->loadObject();
		
			for( $pln=0; $pln<count($vendor_pln_data); $pln++ ){
			
				if($rfp_pln_data->professional == 'yes'){
					if($vendor_pln_data[$pln]->PLN_expdate < date('Y-m-d') || !$vendor_pln_data[$pln]->PLN_upld_cert || $vendor_pln_data[$pln]->PLN_status == '-1') {
						$occur_pln[] = 'no' ;
					}
					else{
						$occur_pln[] = 'yes' ;
					}
				}
				
				if( in_array("no", $occur_pln) ){
					$cabins_pln[] = "no";
				}
				else{
					$cabins_pln[] = "yes";
				}
				$occur_pln = '';
			}	
			
			if($cabins_pln){
				if( in_array("yes", $cabins_pln) ){
					$special_pln = "success";
				}
				else{
					$special_pln = "fail";
				}
			}
			else{
					if($rfp_pln_data->professional)
					$special_pln = "fail";
					else
					$special_pln = "success";
			}
			
				$cabins_pln[] = '';
				return $special_pln ;
	}
	//Completed
	
	function checknewspecialrequirements_occ($vendorid,$rfpid){

		$db = & JFactory::getDBO();
		$occ_data ="SELECT * from #__cam_vendor_occupational_license  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($occ_data);
		$vendor_occ_data = $db->loadObjectList();
		//Get RFP data
		$rfp_occ_data ="SELECT * from #__cam_master_licinsurance_standards_rfps WHERE rfpid=".$rfpid; //validation to status of docs
		$db->Setquery($rfp_occ_data);
		$rfp_occ_data = $db->loadObject();
		
			for( $occ=0; $occ<count($vendor_occ_data); $occ++ ){
			
				if($rfp_occ_data->occupational == 'yes'){
					if($vendor_occ_data[$occ]->OLN_expdate < date('Y-m-d') || !$vendor_occ_data[$occ]->OLN_upld_cert || $vendor_occ_data[$pln]->OLN_status == '-1') {
						$occur_occ[] = 'no' ;
					}
					else{
						$occur_occ[] = 'yes' ;
					}
				}
				if( $occur_occ ){
					if( in_array("no", $occur_occ) ){
						$cabins_occ[] = "no";
					}
					else{
						$cabins_occ[] = "yes";
					}
				}	
			}	
			
			if($cabins_occ){
				if( in_array("yes", $cabins_occ) ){
					$special_occ = "success";
				}
				else{
					$special_occ = "fail";
				}
				$cabins_occ = '';
			}
			
			else{
					if($rfp_occ_data->occupational)
					$special_occ = "fail";
					else
					$special_occ = "success";
			}
			
				$cabins_occ = '';
				return $special_occ ;
	}
	//Completed
	
	function checknewspecialrequirements_omi($vendorid,$rfpid){
	
		$db = & JFactory::getDBO();
		$omi_data ="SELECT * from #__cam_vendor_errors_omissions_insurance WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($omi_data);
		$vendor_omi_data = $db->loadObjectList();
		//Get RFP data
		$rfp_omi_data ="SELECT * from #__cam_master_errors_omissions_rfps WHERE rfpid=".$rfpid." ";
		$db->Setquery($rfp_omi_data);
		$rfp_omi_data = $db->loadObject();
		
		
		
			for( $omi=0; $omi<count($vendor_omi_data); $omi++ ){
				
				if($rfp_omi_data->each_claim > '0'){	
					if($rfp_omi_data->each_claim <= $vendor_omi_data[$omi]->OMI_each_claim){
						$occur_omi[] = 'yes' ;
					}
					else{
						$occur_omi[] = 'no' ;
					}
				}	
				if($rfp_omi_data->aggregate_omi > '0'){	
					if($rfp_omi_data->aggregate_omi <= $vendor_omi_data[$omi]->OMI_aggregate){
						$occur_omi[] = 'yes' ;
					}
					else{
						$occur_omi[] = 'no' ;
					}
				}	
				if($rfp_omi_data->certholder_omi == 'yes'){
					if($vendor_omi_data[$omi]->OMI_cert == 'yes'){
						$occur_omi[] = 'yes' ;
					}
					else{
						$occur_omi[] = 'no' ;
					}
				}
				if($rfp_omi_data){
				if($vendor_omi_data[$omi]->OMI_end_date < date('Y-m-d') || !$vendor_omi_data[$omi]->OMI_upld_cert || $vendor_omi_data[$omi]->OMI_status == '-1' ) {
						$occur_omi[] = 'no' ;
				}
				else{
						$occur_omi[] = 'yes' ;
				}
				}
				
				/*if( $vendorid == '1767' ){
				echo "<pre>";	print_r($occur_omi); echo "</pre>";
				//echo "<pre>";	print_r($rfp_omi_data); echo "</pre>";
				}*/
		
				if($occur_omi){
					if( in_array("no", $occur_omi) ){
						$cabins_omi[] = "no";
					}
					else{
						$cabins_omi[] = "yes";
					}
				}
				$occur_omi = '';
			}	
			
				if($cabins_omi){
					if( in_array("yes", $cabins_omi) ){
						$special_omi = "success";
					}
					else{
						$special_omi = "fail";
					}
				}
				else{
					if($rfp_omi_data)
					$special_omi = "fail";
					else
					$special_omi = "success";
				}
		
				$cabins_omi = '';
				return $special_omi ;
	}
//Function to get the company wide preferred vendors
function getothervendors()
	{

 			$user =& JFactory::getUser();
			$db = & JFactory::getDBO();
			$state = JRequest::getVar( 'state','');	
	 		$county = JRequest::getVar( 'divcounty','');
			$industrytype = JRequest::getVar( 'industrytype','');
			if(!$state){
			$county = '';
			}		
			else{
			$county = $county;
			}	
		if($user->user_type == 12){
		$getc = "SELECT comp_id FROM #__cam_customer_companyinfo where cust_id =".$user->id."  ";
		$db->setQuery($getc);
		$companyid = $db->loadResult();
		}
		else{
		$getc = "SELECT id FROM #__cam_camfirminfo where cust_id =".$user->id."  ";
		$db->setQuery($getc);
		$companyid = $db->loadResult();
		}	
		
$query = "SELECT V.company_name,V.city,V.state,V.company_phone,V.phone_ext,V.fax_id,V.tax_id,W.name,W.lastname,W.id,W.email,W.subscribe,W.subscribe_type from #__cam_vendor_company as V, #__users as W where  V.user_id=W.id and W.search='' ";
		$db->setQuery($query);
		$totalprefers = $db->loadObjectList();
		//To get the vendors based on industry
			if($industrytype){
			$checkvendors = "SELECT distinct(user_id) FROM #__cam_vendor_industries where industry_id=".$industrytype." ";
			$db->setQuery($checkvendors);
			$accpetvendor = $db->loadObjectList();
			
			if($totalprefers){
				foreach($totalprefers as $vid){
				$existing[] = $vid->v_id;
				}
			}	
			if($accpetvendor){
				foreach($accpetvendor as $inids){
				$indusids[] = $inids->user_id;
				}
			}
			if($indusids != '' && $existing!= ''){
			$common = array_intersect($indusids, $existing) ;
			}
			if($common){
			$indus_condition = implode(',',$common) ;
			}
			if($indus_condition)
			$query = $query . "AND V.user_id IN ("  . $indus_condition . ")" ;
			else
			$query = $query . "AND V.user_id IN ('')" ;
			}
			//echo $query ;
		if($county){
			$checkvendors1 = "SELECT distinct(user_id) FROM #__vendor_state_counties where county_id=".$county." ";
			$db->setQuery($checkvendors1);
			$accpetvendor1 = $db->loadObjectList();
			
			if($totalprefers){
				foreach($totalprefers as $vid){
				$existing[] = $vid->id;
				}
			}	
			if($accpetvendor1){
				foreach($accpetvendor1 as $county){
				$countys[] = $county->user_id;
				}
			}
			//echo "<pre>"; print_r($countys);
			//echo "<pre>"; print_r($existing);
			if($countys != '' && $existing!= ''){
			$common = array_intersect($countys, $existing) ;
			}
			if($common){
			$county_condition = implode(',',$common) ;
			}
			if($county_condition)
			$query = $query . "AND V.user_id IN ("  . $county_condition . ")" ;
			else
			$query = $query . "AND V.user_id IN ('')" ;
			}
			
			//If selecting state and not selecting ny county
			if($state && !$county){
			$checkvendorsstate = "SELECT distinct(user_id) FROM #__vendor_state_counties where state_id='".$state."' ";
			$db->setQuery($checkvendorsstate);
			$statevendors = $db->loadObjectList();
			if($totalprefers){
				foreach($totalprefers as $vid){
				$existing[] = $vid->id;
				}
			}	
			if($statevendors){
				foreach($statevendors as $county){
				$countys[] = $county->user_id;
				}
			}
			if($countys != '' && $existing!= ''){
			$common = array_intersect($countys, $existing) ;
			}
			if($common){
			$county_condition = implode(',',$common) ;
			}
			if($county_condition)
			$query = $query . "AND V.user_id IN ("  . $county_condition . ")" ;
			else
			$query = $query . "AND V.user_id IN ('')" ;
			}
			//Completed
		$sort = JRequest::getVar('sort','');
		$type = JRequest::getVar('type','');
		
		if( $sort == 'asc' && $type == 'othere' ){
			$sorting = ' GROUP BY W.id order by V.company_name ASC ';
		}
		else if( $sort == 'desc' && $type == 'othere' ){
			$sorting = ' GROUP BY W.id order by V.company_name DESC ';
		}
		else{
			$sorting = " GROUP BY W.id order by W.subscribe_type='', W.subscribe_type='free', W.subscribe_type='public', W.subscribe_type='all'  ";
			
		}
		
		$query = $query . ' '.$sorting.'  ' ;
		
			$query = $query . '   ' ;
			
			$query = $query . '   ' ;
		
			//echo $query ;
			$db->setQuery($query);
			$totalprefers = $db->loadObjectList();
		//Funtion to get the eligible vendors
		$rfp_id = JRequest::getVar('rfpid','');
		$rfpinfo = $this->getrfpinfopre($rfp_id);
		$eligible_vendors =	$this->getVendorspre($rfpinfo->cust_id,$rfpinfo->property_id,$rfpinfo->id);
		$vendors_bids	=	$this->getVendor_bidsinfopre($eligible_vendors,$rfp_id);
		//echo "<pre>"; print_r($vendors_bids); 
		for($c=0; $c<count($vendors_bids); $c++){
		$elist[] = $vendors_bids[$c][0]->id ;
		}
		if($elist){
		$elist = $elist ;
		}
		else{
		$elist = '';
		}
//echo "<pre>"; print_r($elist); 
		// to check the previously invited vendors
		
		$query_in = "SELECT vendorid from #__rfp_invitations where rfpid=".$rfp_id." ";
		$db->setQuery($query_in);
		$preinviters = $db->loadObjectList();
		
			for($cm=0; $cm<count($preinviters); $cm++){
			$prelist[] = $preinviters[$cm]->vendorid ;
			}
			
			if($prelist){
			$prelist = $prelist ;
			}
			else{
			$prelist = '';
			}
		//echo "<pre>"; print_r($totalprefers); exit;
		for($im=0; $im<count($totalprefers); $im++){
		if(in_array($totalprefers[$im]->id,$prelist)) {
		$totalprefers[$im]->pre = 'yes';
		}
		else{
		$totalprefers[$im]->pre = 'no';		
		}
		}
		//Completed
		
		for($i=0; $i<count($totalprefers); $i++){
		if(in_array($totalprefers[$i]->id,$elist)) {
		$totalprefers[$i]->vendorstatus = 'eligible';
		}
		else{
		$totalprefers[$i]->vendorstatus = 'ineligible';		
		}
		}
		
		for( $sp=0; $sp<count($totalprefers); $sp++ ){
		//if($totalprefers[$sp]->id == '1796'){
	//echo $totalprefers[$sp]->v_id.'<br />' ;
	$totalprefers_new_w9	=	$this->checknewspecialrequirements_w9($totalprefers[$sp]->id,$rfp_id);
	$totalprefers_new_gli	=	$this->checknewspecialrequirements_gli($totalprefers[$sp]->id,$rfp_id);
	//echo "GLI: ".$totalprefers_new_gli.'<br />';
	$totalprefers_new_aip	=	$this->checknewspecialrequirements_aip($totalprefers[$sp]->id,$rfp_id);
	//echo "AIP: ".$totalprefers_new_aip.'<br />';
	$totalprefers_new_wci	=	$this->checknewspecialrequirements_wci($totalprefers[$sp]->id,$rfp_id);
	//echo "WCI: ".$totalprefers_new_wci.'<br />';
	$totalprefers_new_umb	=	$this->checknewspecialrequirements_umb($totalprefers[$sp]->id,$rfp_id);
	//echo "UMB: ".$totalprefers_new_umb.'<br />';
	$totalprefers_new_pln	=	$this->checknewspecialrequirements_pln($totalprefers[$sp]->id,$rfp_id);
	$totalprefers_new_occ	=	$this->checknewspecialrequirements_occ($totalprefers[$sp]->id,$rfp_id);
	$totalprefers_new_omi	=	$this->checknewspecialrequirements_omi($totalprefers[$sp]->id,$rfp_id);
	//echo "UMB: ".$totalprefers_new_pln.'<br />';
	
	//}
		if($totalprefers_new_w9 == 'success' && $totalprefers_new_gli == 'success' && $totalprefers_new_aip == 'success' && $totalprefers_new_wci == 'success' && $totalprefers_new_umb == 'success' && $totalprefers_new_pln == 'success' && $totalprefers_new_occ == 'success'  && $totalprefers_new_omi == 'success'){
			$totalprefers[$sp]->special_requirements = 'success' ;
			
			$masteraccount = $this->getmasterfirmaccount();
			$sql_terms = "SELECT termsconditions FROM #__cam_vendor_aboutus WHERE vendorid=".$masteraccount." "; 
			$db->setQuery($sql_terms);
			$terms_exist = $db->loadResult();
			
			if($terms_exist == '1'){
			$sql = "SELECT accepted FROM #__cam_vendor_terms WHERE vendorid=".$totalprefers[$sp]->v_id." and masterid=".$masteraccount." "; 
			$db->setQuery($sql);
			$terms = $db->loadResult();
				if($terms == '1'){
				$totalprefers[$sp]->special_requirements = 'success' ;
				}
				else{
				$totalprefers[$sp]->special_requirements = 'fail' ;
				}
			}
			else{
			
			}
			
			
		}
		else{
			$totalprefers[$sp]->special_requirements = 'fail' ;
		}
	}
	
		for( $sa=0; $sa<count($totalprefers); $sa++ ){
		$exclude = $this->checkexclude($totalprefers[$sa]->id);
		if($exclude == 'yes'){
			$totalprefers[$sa]->excluded = 'yes' ;
		}
		else{
			$totalprefers[$sa]->excluded = '' ;
		}
		
		// Adding block unverified vendor rule
	$user =& JFactory::getUser();
	$masterid = $this->getmasterfirmaccount();
	$block_per = "SELECT block, block_complinace FROM #__cam_master_block_users where masterid ='".$masterid."' ";
	$db->setQuery($block_per);
	$blockid = $db->loadObject();
	if( $blockid->block == '1' )
		$totalprefers[$sa]->unverified = 'hide' ;
	else	
		$totalprefers[$sa]->unverified = 'show' ;
	
	if( $blockid->block_complinace == '1' )
		$totalprefers[$sa]->block_nonc = 'hide' ;
	else	
		$totalprefers[$sa]->block_nonc = 'show' ;
	//Completed
	
	}
	
		//echo "<pre>"; print_r($totalprefers); exit;
		return $totalprefers ;
	}
//Completed
	//To get the general pre results
	function getw9data($indus) 
	{
		$db=&JFactory::getDBO();
		$user =& JFactory::getUser();
		$master =	$this->getmasterfirmaccount();
		$query = "SELECT * FROM #__cam_master_w9_standards WHERE masterid=".$master." and industry_id=".$indus."  ";
		$db->setQuery($query);
		$data_pre = $db->loadObject();
		return $data_pre;
	}
	//Completed

	//To get the general pre results
	function getgeneralinsdata($indus) 
	{
		$db=&JFactory::getDBO();
		$user =& JFactory::getUser();
		$master =	$this->getmasterfirmaccount();
		$query = "SELECT * FROM #__cam_master_generalinsurance_standards WHERE masterid=".$master." and industry_id=".$indus."  ";
		$db->setQuery($query);
		$data_pre = $db->loadObject();
		return $data_pre;
	}
	//Completed
	//To get the general pre results
	function getautoinsdata($indus) 
	{
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$master =	$this->getmasterfirmaccount();
		$query = "SELECT * FROM #__cam_master_autoinsurance_standards WHERE masterid=".$master." and industryid=".$indus."  ";
		$db->setQuery($query);
		$data_auto = $db->loadObject();
		return $data_auto;
	}
	//Completed
	//To get the workers insurance pre results
	function getworkinsdata($indus) 
	{
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$master =	$this->getmasterfirmaccount();
		$query = "SELECT * FROM #__cam_master_workers_standards WHERE masterid=".$master." and industryid=".$indus."  ";
		$db->setQuery($query);
		$data_work = $db->loadObject();
		return $data_work;
	}
	//Completed
	//To get the workers insurance pre results
	function getumbrellainsdata($indus) 
	{
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$master =	$this->getmasterfirmaccount();
		$query = "SELECT * FROM #__cam_master_umbrellainsurance_standards WHERE masterid=".$master." and industryid=".$indus."  ";
		$db->setQuery($query);
		$data_umbrella = $db->loadObject();
		return $data_umbrella;
	}
	//Completed
	//To get the workers insurance pre results
	function getlicinsdata($indus) 
	{
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$master =	$this->getmasterfirmaccount();				
		$query = "SELECT * FROM #__cam_master_licinsurance_standards WHERE masterid=".$master." and industryid=".$indus."  ";
		$db->setQuery($query);
		$data_lic = $db->loadObject();
		return $data_lic;
	}
	//Completed
	
	//To get the errors and omissions values
	function getomiinsdata($indus) 
	{
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$master =	$this->getmasterfirmaccount();				
		$query = "SELECT * FROM #__cam_master_errors_omissions WHERE masterid=".$master." and industryid=".$indus."  ";
		$db->setQuery($query);
		$data_omi = $db->loadObject();
		return $data_omi;
	}
	//Completed
	
	//To find the manager is existing or not
	function getcheckindustryinc($rfpid) 
	{
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$query = "SELECT id FROM #__cam_master_generalinsurance_standards_rfps WHERE rfpid=".$rfpid."  ";
		$db->setQuery($query);
		$id = $db->loadResult();
		return $id;
	}
	//To find the manager is existing or not
	function getcheckautoinc($rfpid) 
	{
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$query = "SELECT id FROM #__cam_master_autoinsurance_standards_rfps WHERE rfpid=".$rfpid."  ";
		$db->setQuery($query);
		$id = $db->loadResult();
		return $id;
	}
	//Completed
	//To find the manager is existing or not
	function getcheckworkinc($rfpid) 
	{
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$query = "SELECT id FROM #__cam_master_workers_standards_rfps WHERE rfpid=".$rfpid."  ";
		$db->setQuery($query);
		$id = $db->loadResult();
		return $id;
	}
	//Completed
	//To find the manager is existing or not
	function getcheckumbinc($rfpid) 
	{
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$query = "SELECT id FROM #__cam_master_umbrellainsurance_standards_rfps WHERE rfpid=".$rfpid."  ";
		$db->setQuery($query);
		$id = $db->loadResult();
		return $id;
	}
	//Completed
	//To find the manager is existing or not
	function getchecklicinc($rfpid) 
	{
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$query = "SELECT id FROM #__cam_master_licinsurance_standards_rfps WHERE rfpid=".$rfpid."  ";
		$db->setQuery($query);
		$id = $db->loadResult();
		return $id;
	}
	//Completed
	
	//To find the manager is existing or not
	function getcheckomiinc($rfpid) 
	{
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$query = "SELECT id FROM #__cam_master_errors_omissions_rfps WHERE rfpid=".$rfpid."  ";
		$db->setQuery($query);
		$id = $db->loadResult();
		return $id;
	}
	//Completed
	
	//To save the special requirement
	function saveinsurance($data)
	{
		$row = & $this->getTable('savegeneralinsurancerfps');
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
	}
	//Completed
	//To save the special requirement
	function saveautoinsurance($data)
	{
		$row = & $this->getTable('saveautoinsurancerfps');
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
	}
	//Completed
	//To save the special requirement
	function saveworkinsurance($data)
	{
		$row = & $this->getTable('saveworkinsurancerfps');
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
	}
	//Completed
	//To save the special requirement
	function saveumbinsurance($data)
	{
		$row = & $this->getTable('saveumbinsurancerfps');
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
	}
	//Completed
	//To save the special requirement
	function savelicinsurance($data)
	{
		$row = & $this->getTable('savelicinsurancerfps');
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
	}
	//Completed
	
	//To save the special requirement
	function saveomiinsurance($data)
	{
		$row = & $this->getTable('saveomiinsurancerfps');
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
	}
	//Completed
	
	
	//To get the general pre results
	function getw9document($rfpid) 
	{
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$query = "SELECT * FROM #__cam_master_w9_standards_rfps WHERE rfpid=".$rfpid."  ";
		$db->setQuery($query);
		$data_pre = $db->loadObject();
		return $data_pre;
	}
	//Completed
	//To get the general pre results
	function getgeneralins($rfpid) 
	{
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$query = "SELECT * FROM #__cam_master_generalinsurance_standards_rfps WHERE rfpid=".$rfpid."  ";
		$db->setQuery($query);
		$data_pre = $db->loadObject();
		return $data_pre;
	}
	//Completed
	//To get the general pre results
	function getautoins($rfpid) 
	{
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$query = "SELECT * FROM #__cam_master_autoinsurance_standards_rfps WHERE rfpid=".$rfpid."  ";
		$db->setQuery($query);
		$data_auto = $db->loadObject();
		return $data_auto;
	}
	//Completed
	//To get the workers insurance pre results
	function getworkersins($rfpid) 
	{
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$query = "SELECT * FROM #__cam_master_workers_standards_rfps WHERE rfpid=".$rfpid."  ";
		$db->setQuery($query);
		$data_work = $db->loadObject();
		return $data_work;
	}
	//Completed
	//To get the workers insurance pre results
	function getumbins($rfpid) 
	{
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$query = "SELECT * FROM #__cam_master_umbrellainsurance_standards_rfps WHERE rfpid=".$rfpid."  ";
		$db->setQuery($query);
		$data_umbrella = $db->loadObject();
		return $data_umbrella;
	}
	//Completed
	//To get the workers insurance pre results
	function getlicins($rfpid) 
	{
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$query = "SELECT * FROM #__cam_master_licinsurance_standards_rfps WHERE rfpid=".$rfpid."  ";
		$db->setQuery($query);
		$data_lic = $db->loadObject();
		return $data_lic;
	}
	//Completed
	function getomiins($rfpid) 
	{
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$query = "SELECT * FROM #__cam_master_errors_omissions_rfps WHERE rfpid=".$rfpid."  ";
		$db->setQuery($query);
		$data_omi = $db->loadObject();
		return $data_omi;
	}
	//Function to get master firm userid when manager, firm, district manager loggedin
	function getmasterfirmaccount(){
	$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
			if($user->user_type == '12'){
				$query_c = "SELECT comp_id FROM #__cam_customer_companyinfo WHERE cust_id=".$user->id." ";
				$db->setQuery($query_c);
				$cid = $db->loadResult();	
				$camfirmid = "SELECT cust_id FROM #__cam_camfirminfo WHERE id=".$cid." ";
				$db->setQuery($camfirmid);
				$camfirm = $db->loadResult();
				$masterid = "SELECT masterid FROM #__cam_masteraccounts WHERE firmid=".$camfirm." ";
				$db->setQuery($masterid);
				$master = $db->loadResult();
				}
			elseif($user->user_type == '13' && $user->accounttype!='master'){
				$masterid = "SELECT masterid FROM #__cam_masteraccounts WHERE firmid=".$user->id." "; 
				$db->setQuery($masterid);
				$master = $db->loadResult();
			}
			else{
			$master = $user->id;
			}	
			return $master ;
	}
	//COmpleted
	//Function to get existing active RFPs special requirements
	function getspecialrequirements_activelicense($rfpid){
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$query_exist = "SELECT * FROM #__cam_rfpreq_info WHERE rfp_id=".$rfpid." and req_parentid='1' "; 
		$db->setQuery($query_exist);
		$exist_spl = $db->loadObjectList();
		return $exist_spl ;
	}
	//Completed
	//Function to get existing active RFPs special requirements
	function getspecialrequirements_activeworkers($rfpid){
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$query_exist_work = "SELECT * FROM #__cam_rfpreq_info WHERE rfp_id=".$rfpid." and req_parentid='3' "; 
		$db->setQuery($query_exist_work);
		$exist_work = $db->loadObjectList();
		return $exist_work ;
	}
	//Completed
	function getvendorinsurancestandards($rfpid,$vendorid){
		$managerid = $_REQUEST['managerid'];
		$db=&JFactory::getDBO();
			$industryid = $allindustries[$in]->value;
			$generaldata = $this->getgeneralinsdata_compliant($rfpid);
			$vendor_generaldata = $this->getvendorgeneralinsdata_second($vendorid);
			
			$autodata = $this->getautoinsdata_compliant($rfpid);
			$vendor_autodata = $this->getvendorautoinsdata_second($vendorid);
			
			$workdata = $this->getworkinsdata_compliant($rfpid);
			$vendor_workdata = $this->getvendorworkinsdata_second($vendorid);

			$umbrelladata = $this->getumbrellainsdata_compliant($rfpid);
			$vendor_umbrelladata = $this->getvendorumbrellainsdata_second($vendorid);
			
			$licdata = $this->getlicinsdata_compliant($rfpid);
			$vendor_licdata = $this->getvendorlicinsdata_second($vendorid);
			$vendor_occdata = $this->getvendoroccinsdata_second($vendorid);
	
	}
	
	function getw9insdata_compliant($rfpid)
	{
		$db=&JFactory::getDBO();
		$user =& JFactory::getUser();
		$master =	$this->getmasterfirmaccount();
		$query = "SELECT * FROM #__cam_master_w9_standards_rfps WHERE rfpid=".$rfpid."  ";
		$db->setQuery($query);
		$data_pre = $db->loadObject();
		return $data_pre;
	}
	
	function getgeneralinsdata_compliant($rfpid)
	{
		$db=&JFactory::getDBO();
		$user =& JFactory::getUser();
		$master =	$this->getmasterfirmaccount();
		$query = "SELECT * FROM #__cam_master_generalinsurance_standards_rfps WHERE rfpid=".$rfpid."  ";
		$db->setQuery($query);
		$data_pre = $db->loadObject();
		//echo "<pre>"; print_r($data_pre); exit;
		return $data_pre;
	}
	
	function getautoinsdata_compliant($rfpid)
	{
		$db=&JFactory::getDBO();
		$user =& JFactory::getUser();
		$master =	$this->getmasterfirmaccount();
		$query = "SELECT * FROM #__cam_master_autoinsurance_standards_rfps WHERE rfpid=".$rfpid."  ";
		$db->setQuery($query);
		$data_auto = $db->loadObject();
		return $data_auto;
	}
	function getworkinsdata_compliant($rfpid)
	{
		$db=&JFactory::getDBO();
		$user =& JFactory::getUser();
		$master =	$this->getmasterfirmaccount();
		$query = "SELECT * FROM #__cam_master_workers_standards_rfps WHERE rfpid=".$rfpid."  ";
		$db->setQuery($query);
		$data_work = $db->loadObject();
		return $data_work;
	}
	function getumbrellainsdata_compliant($rfpid)
	{
		$db=&JFactory::getDBO();
		$user =& JFactory::getUser();
		$master =	$this->getmasterfirmaccount();
		$query = "SELECT * FROM #__cam_master_umbrellainsurance_standards_rfps WHERE rfpid=".$rfpid."  ";
		$db->setQuery($query);
		$data_umbrella = $db->loadObject();
		return $data_umbrella;
	}
	function getlicinsdata_compliant($rfpid)
	{
		$db=&JFactory::getDBO();
		$user =& JFactory::getUser();
		$master =	$this->getmasterfirmaccount();
		$query = "SELECT * FROM #__cam_master_licinsurance_standards_rfps WHERE rfpid=".$rfpid."  ";
		$db->setQuery($query);
		$data_lic = $db->loadObject();
		return $data_lic;
	}
	
	function getomiinsdata_compliant($rfpid)
	{
		$db=&JFactory::getDBO();
		$user =& JFactory::getUser();
		$master =	$this->getmasterfirmaccount();
		$query = "SELECT * FROM #__cam_master_errors_omissions_rfps WHERE rfpid=".$rfpid."  ";
		$db->setQuery($query);
		$data_omi = $db->loadObject();
		return $data_omi;
	}
	
	function getvendorw9insdata_second($vendorid){
		$db = & JFactory::getDBO();
		$w9_data ="SELECT * from #__cam_vendor_compliance_w9docs  WHERE vendor_id=".$vendorid." "; //validation to status of docs
		$db->Setquery($w9_data);
		$vendor_w9_data = $db->loadObjectList();
		return $vendor_w9_data;
		}
		
	function getvendorgeneralinsdata_second($vendorid){
		$db = & JFactory::getDBO();
		$gli_data ="SELECT * from #__cam_vendor_liability_insurence  WHERE vendor_id=".$vendorid." and GLI_end_date > ".date('Y-m-d')." and GLI_status != '-1' "; //validation to status of docs
		$db->Setquery($gli_data);
		$vendor_gli_data = $db->loadObjectList();
		return $vendor_gli_data;
		}
		
	function getvendorautoinsdata_second($vendorid){
		$user =& JFactory::getUser();
		$db = & JFactory::getDBO();
		$aip_data ="SELECT * from #__cam_vendor_auto_insurance WHERE vendor_id=".$vendorid." and aip_end_date > ".date('Y-m-d')." and aip_status != '-1' "; //validation to status of docs
		$db->Setquery($aip_data);
		$vendor_aip_data = $db->loadObjectList();
		return $vendor_aip_data;
		}	
	
	function getvendorworkinsdata_second($vendorid){
		$user =& JFactory::getUser();
		$db = & JFactory::getDBO();
		$wci_data ="SELECT * from #__cam_vendor_workers_companies_insurance WHERE vendor_id=".$vendorid." and ( WCI_end_date > ".date('Y-m-d')."  || WCI_end_date = 'Does Not Expire' ) and WCI_status != '-1' "; //validation to status of docs
		$db->Setquery($wci_data);
		$vendor_wci_data = $db->loadObjectList();
		return $vendor_wci_data;
		}
	function getvendorumbrellainsdata_second($vendorid){ 
		$user =& JFactory::getUser();
		$db = & JFactory::getDBO();
		$umb_data ="SELECT * from #__cam_vendor_umbrella_license WHERE vendor_id=".$vendorid." and UMB_expdate > ".date('Y-m-d')." and UMB_status != '-1' "; //validation to status of docs
		$db->Setquery($umb_data);
		$vendor_umb_data = $db->loadObjectList();
		return $vendor_umb_data;
		}
	function getvendorlicinsdata_second($vendorid){
		$user =& JFactory::getUser();
		$db = & JFactory::getDBO();
		$lic_data ="SELECT * from #__cam_vendor_professional_license WHERE vendor_id=".$vendorid." and PLN_expdate > ".date('Y-m-d')." and PLN_status != '-1' "; //validation to status of docs
		$db->Setquery($lic_data);
		$vendor_lic_data = $db->loadObjectList();
		return $vendor_lic_data;
		}
	function getvendoroccinsdata_second($vendorid){
		$user =& JFactory::getUser();
		$db = & JFactory::getDBO();
		$occ_data ="SELECT * from #__cam_vendor_occupational_license WHERE vendor_id=".$vendorid." and ( OLN_expdate > ".date('Y-m-d')." || OLN_expdate = 'Does Not Expire') and OLN_status != '-1' "; //validation to status of docs
		$db->Setquery($occ_data);
		$vendor_occ_data = $db->loadObjectList();
		return $vendor_occ_data;
		}	
	
	function getvendoromiinsdata_second($vendorid){
		$user =& JFactory::getUser();
		$db = & JFactory::getDBO();
		$omi_data ="SELECT * from #__cam_vendor_errors_omissions_insurance WHERE vendor_id=".$vendorid." and OMI_end_date > ".date('Y-m-d')." and OMI_status != '-1' "; //validation to status of docs
		$db->Setquery($omi_data);
		$vendor_omi_data = $db->loadObjectList();
		return $vendor_omi_data;
		}	
			
	//Function to send the mail to manager
	function sendmailtomanager($rfpid){
	$user =& JFactory::getUser();
	$db = & JFactory::getDBO();
        $total_invites = "SELECT DISTINCT(proposedvendorid) FROM #__cam_vendor_proposals  where proposaltype != 'uninvited' and rfpno=".$rfpid;
	// $total_invites = "SELECT DISTINCT(vendorid),mail FROM #__rfp_invitations  where rfpid=".$rfpid." and mail='no' ";
	$db->Setquery($total_invites);
	$totalinvites = $db->loadObjectList();
	$ul = "<ul>";
	$ulc = "</ul>";
       
	//To send the mail to the manager
       
        
	$pdata1 = "SELECT v.update_rfp,v.rfp_type,u.property_name, v.projectName, v.proposalDueDate, v.proposalDueTime, v.cust_id FROM #__cam_property as u, #__cam_rfpinfo as v where u.id=v.property_id and v.id=".$rfpid." ";
	$db->Setquery($pdata1);
	$rfpdetails1 = $db->loadObject();
	$customerdata1 = "SELECT u.comp_name FROM #__cam_customer_companyinfo as u, #__cam_rfpinfo as v where v.cust_id=u.cust_id and v.id=".$rfpid." ";
	$db->Setquery($customerdata1);
	$cust_coname1 = $db->loadResult();
        
        $customerdata2 = "SELECT u.name,u.lastname FROM #__users as u, #__cam_rfpinfo as v where v.cust_id=u.id and v.id=".$rfpid." ";
	$db->Setquery($customerdata2);
	$custm_coname1 = $db->loadObject();
        $managername=$custm_coname1->name. ' '.$custm_coname1->lastname;
        $pname_un = str_replace( '_',' ',$rfpdetails1->property_name ) ;
        $projectname = str_replace( '_',' ',$rfpdetails1->projectName ) ;
        
         if($rfpdetails1->update_rfp=='1' && $rfpdetails1->rfp_type!='draft'){
	 $email_datatom = "SELECT introtext  FROM #__content where id='270' ";
        } else {
         $email_datatom = "SELECT introtext  FROM #__content where id='266' ";  
        }
	$db->Setquery($email_datatom);
	$datatom = $db->loadResult();
        
	$datatom = str_replace('[Community Name]',$pname_un,$datatom );
        $datatom = str_replace('[Project Name]',$projectname,$datatom );
        $datatom = str_replace('[Property Name]',$pname_un,$datatom );
	$datatom = str_replace('[Manager]',$managername,$datatom);
        
	$body = $datatom ;
     // echo '<pre>'; print_r($rfpdetails1);
	$fromname = 'MyVendorCenter';
        if($rfpdetails1->update_rfp=='1' && $rfpdetails1->rfp_type!='draft'){
	$mailsubject = "You Modified a Project";
        } else {
         $mailsubject = "You Submitted a New Project";   
        }
	//echo $mailsubject; exit; //$mailsubject = "Invited Vendors List";
	$memail_sateesh = 'rize.cama@gmail.com';
	$memail = $user->email;
	$mailfrom = 'support@myvendorcenter.com';
	$support_manager = 'manageremails@myvendorcenter.com';	
	
		if($totalinvites){
			for( $s=0; $s<count($totalinvites); $s++ ){ 
			$v_companys = "SELECT company_name FROM #__cam_vendor_company where user_id=".$totalinvites[$s]->proposedvendorid." ";
			$db->Setquery($v_companys);
			$vcomnames = $db->loadResult();
				if( $vcomnames )
				$companies .= '<li>'.$vcomnames . '</li>' ;
			}
			$all_vendor_companies = $ul.$companies.$ulc ;
                       // print_r($all_vendor_companies);
			$body = str_replace('[Vendor Company Name]',$all_vendor_companies,$body);
                         JUtility::sendMail($mailfrom, $fromname, $memail, $mailsubject, $body,$mode = 1);
			JUtility::sendMail($mailfrom, $fromname, $support_manager, $mailsubject, $body,$mode = 1);
			JUtility::sendMail($mailfrom, $fromname, $memail_sateesh, $mailsubject, $body,$mode = 1);
			$all_vendor_companies = '' ;
			$companies = '';
		}
		else{
                    $email_datatom1 = "SELECT introtext  FROM #__content where id='271' ";
                    $db->Setquery($email_datatom1);
                    $datatom1 = $db->loadResult();
                    $datatom1 = str_replace('[Project Name]',$projectname,$datatom );
                    $datatom1 = str_replace('[Property Name]',$pname_un,$datatom );
                    $datatom1 = str_replace('[Manager]',$managername,$datatom);
                $body = $datatom1 ;
		$body = str_replace('[Vendor Company Name]','You did NOT invite Vendors for this project - Please use the "Invite A Vendor" link to request proposals <br/>',$body);
		JUtility::sendMail($mailfrom, $fromname, $memail, $mailsubject, $body,$mode = 1);
		JUtility::sendMail($mailfrom, $fromname, $support_manager, $mailsubject, $body,$mode = 1);		
		JUtility::sendMail($mailfrom, $fromname, $memail_sateesh, $mailsubject, $body,$mode = 1);
		}
		
		$success = '';
	return $success ;	
	}
	//Completed
	
	//Function to get the individual wide preferred vendors
function getcorporatevendors()
	{
		$db = & JFactory::getDBO();
		$user =& JFactory::getUser();
		$industrytype = JRequest::getVar( 'industrytype','');
		$state = JRequest::getVar( 'state','');	
 		$county = JRequest::getVar( 'divcounty','');
		if(!$state){
		$county = '';
		}		
		else{
		$county = $county;
		}	
		$usercreator = $this->getmasterfirmaccount();
		
	 	$query = "SELECT V.company_name,V.city,V.company_phone,V.phone_ext,V.fax_id,V.tax_id,U.vendortype,U.vid,U.v_id,U.status,U.inhousevendors,W.name,W.lastname,W.suspend,W.subscribe,W.subscribe_type,V.state,W.id from #__vendor_inviteinfo as U, #__cam_vendor_company as V, #__users as W where LOWER(U.inhousevendors) = (W.email) and W.search='' and V.user_id=W.id and U.userid=".$usercreator."  ";
		$db->setQuery($query); 
		$totalprefers = $db->loadObjectList();
		//echo "<pre>"; print_r($totalprefers); exit;
		//To get the vendors based on industry
			if($industrytype){
			$checkvendors = "SELECT distinct(user_id) FROM #__cam_vendor_industries where industry_id=".$industrytype." ";
			$db->setQuery($checkvendors);
			$accpetvendor = $db->loadObjectList();
			
			if($totalprefers){
				foreach($totalprefers as $vid){
				$existing[] = $vid->v_id;
				}
			}	
			if($accpetvendor){
				foreach($accpetvendor as $inids){
				$indusids[] = $inids->user_id;
				}
			}
			if($indusids != '' && $existing!= ''){
			$common = array_intersect($indusids, $existing) ;
			}
			if($common){
			$indus_condition = implode(',',$common) ;
			}
			if($indus_condition)
			$query = $query . "AND V.user_id IN ("  . $indus_condition . ")" ;
			else
			$query = $query . "AND V.user_id IN ('')" ;
			}	
			
			
		if($county){
			$checkvendors1 = "SELECT distinct(user_id) FROM #__vendor_state_counties where county_id=".$county." ";
			$db->setQuery($checkvendors1);
			$accpetvendor1 = $db->loadObjectList();
			
			if($totalprefers){
				foreach($totalprefers as $vid){
				$existing[] = $vid->v_id;
				}
			}	
			if($accpetvendor1){
				foreach($accpetvendor1 as $county){
				$countys[] = $county->user_id;
				}
			}
			//echo "<pre>"; print_r($countys);
			//echo "<pre>"; print_r($existing);
			if($countys != '' && $existing!= ''){
			$common = array_intersect($countys, $existing) ;
			}
			if($common){
			$county_condition = implode(',',$common) ;
			}
			if($county_condition)
			$query = $query . "AND V.user_id IN ("  . $county_condition . ")" ;
			else
			$query = $query . "AND V.user_id IN ('')" ;
			}
			
			//If selecting state and not selecting ny county
			if($state && !$county){
			 $checkvendorsstate = "SELECT distinct(user_id) FROM #__vendor_state_counties where state_id='".$state."' ";
			$db->setQuery($checkvendorsstate);
			$statevendors = $db->loadObjectList();
			if($totalprefers){
				foreach($totalprefers as $vid){
				$existing[] = $vid->v_id;
				}
			}	
			if($statevendors){
				foreach($statevendors as $county){
				$countys[] = $county->user_id;
				}
			}
			if($countys != '' && $existing!= ''){
			$common = array_intersect($countys, $existing) ;
			}
			if($common){
			$county_condition = implode(',',$common) ;
			}
			if($county_condition)
			$query = $query . "AND V.user_id IN ("  . $county_condition . ")" ;
			else
			$query = $query  . "AND V.user_id IN (' ')" ;
			}
			//Completed
			//echo $query; 
		$sort = JRequest::getVar('sort','');
		$type = JRequest::getVar('type','');
		
		if( $sort == 'asc' && $type == 'corporate' ){
			$sorting = ' GROUP BY U.v_id order by V.company_name ASC ';
		}
		else if( $sort == 'desc' && $type == 'corporate' ){
			$sorting = ' GROUP BY U.v_id order by V.company_name DESC ';
		}
		else{
			$sorting = " GROUP BY U.v_id order by W.subscribe_type='', W.subscribe_type='public', W.subscribe_type='all'  ";
		}
		
		$query = $query . ' '.$sorting.'  ' ;
		
			$db->setQuery($query);
			$totalprefers = $db->loadObjectList();
		//Funtion to get the eligible vendors
		$rfp_id = JRequest::getVar('rfpid','');
		$rfpinfo = $this->getrfpinfopre($rfp_id);
		$eligible_vendors =	$this->getVendorspre($rfpinfo->cust_id,$rfpinfo->property_id,$rfpinfo->id);
		//echo "<pre>"; print_r($eligible_vendors);
		$vendors_bids	=	$this->getVendor_bidsinfopre($eligible_vendors,$rfp_id);
		//echo "<pre>"; print_r($vendors_bids);
		for($c=0; $c<count($vendors_bids); $c++){
		$elist[] = $vendors_bids[$c][0]->id ;
		}
		if($elist){
		$elist = $elist ;
		}
		else{
		$elist = '';
		}
		// to check the previously invited vendors
		$query_in = "SELECT vendorid from #__rfp_invitations where rfpid=".$rfp_id." ";
		$db->setQuery($query_in);
		$preinviters = $db->loadObjectList();
		
			for($cm=0; $cm<count($preinviters); $cm++){
			$prelist[] = $preinviters[$cm]->vendorid ;
			}
			
			if($prelist){
			$prelist = $prelist ;
			}
			else{
			$prelist = '';
			}
		
		for($im=0; $im<count($totalprefers); $im++){
		if(in_array($totalprefers[$im]->v_id,$prelist)) {
		$totalprefers[$im]->pre = 'yes';
		}
		else{
		$totalprefers[$im]->pre = 'no';		
		}
		}
		//Completed
		
		for($i=0; $i<count($totalprefers); $i++){
		if(in_array($totalprefers[$i]->v_id,$elist)) {
		$totalprefers[$i]->vendorstatus = 'eligible';
		}
		else{
		$totalprefers[$i]->vendorstatus = 'ineligible';		
		}
		}
		//Completed
		//To get the status of compliance documents GLI and W9 docs
	/*for( $v=0; $v<count($totalprefers); $v++ ){
	$alert_sql ="SELECT count(*) from #__cam_vendor_liability_insurence   WHERE GLI_end_date  >= '".$today."' AND GLI_upld_cert!= '' AND GLI_policy_occurence!='' AND GLI_policy_aggregate!='' AND vendor_id=".$totalprefers[$v]->v_id; //validation to expdate of docs
		$db->Setquery($alert_sql);
		$res8 = $db->loadResult();
		if($res8 != 0) $res8=0; else $res8=1;
		
		$alert_sql ="SELECT count(*) from #__cam_vendor_compliance_w9docs  WHERE w9_upld_cert!=''  AND ein_number!='' AND vendor_id=".$totalprefers[$v]->v_id; //validation to status of docs
		$db->Setquery($alert_sql);
		$res4 = $db->loadResult();
		if($res4 != 0) $res4=0; else $res4=1;
		if( $res8 == 0 && $res4 == 0 ){
		$totalprefers[$v]->w9gli = 'yes';	
		}
		else{
		$totalprefers[$v]->w9gli = 'no';	
		}
		
	}*/
	//echo "<pre>"; print_r($totalprefers);
	for( $sp=0; $sp<count($totalprefers); $sp++ ){
		//if($totalprefers[$sp]->v_id == '1767'){
	//echo $totalprefers[$sp]->v_id.'<br />' ;
	$totalprefers_new_w9	=	$this->checknewspecialrequirements_w9($totalprefers[$sp]->v_id,$rfp_id);
	$totalprefers_new_gli	=	$this->checknewspecialrequirements_gli($totalprefers[$sp]->v_id,$rfp_id);
	//echo "GLI: ".$totalprefers_new_gli.'<br />';
	$totalprefers_new_aip	=	$this->checknewspecialrequirements_aip($totalprefers[$sp]->v_id,$rfp_id);
	//echo "AIP: ".$totalprefers_new_aip.'<br />';
	$totalprefers_new_wci	=	$this->checknewspecialrequirements_wci($totalprefers[$sp]->v_id,$rfp_id);
	//echo "WCI: ".$totalprefers_new_wci.'<br />';
	$totalprefers_new_umb	=	$this->checknewspecialrequirements_umb($totalprefers[$sp]->v_id,$rfp_id);
	//echo "UMB: ".$totalprefers_new_umb.'<br />';
	$totalprefers_new_pln	=	$this->checknewspecialrequirements_pln($totalprefers[$sp]->v_id,$rfp_id);
	$totalprefers_new_occ	=	$this->checknewspecialrequirements_occ($totalprefers[$sp]->v_id,$rfp_id);
	$totalprefers_new_omi	=	$this->checknewspecialrequirements_omi($totalprefers[$sp]->v_id,$rfp_id);
	
	//echo "UMB: ".$totalprefers_new_omi.'<br />';
	
	//}
		if($totalprefers_new_w9 == 'success' && $totalprefers_new_gli == 'success' && $totalprefers_new_aip == 'success' && $totalprefers_new_wci == 'success' && $totalprefers_new_umb == 'success' && $totalprefers_new_pln == 'success' && $totalprefers_new_occ == 'success'  && $totalprefers_new_omi == 'success'){
			$totalprefers[$sp]->special_requirements = 'success' ;
			$masteraccount = $this->getmasterfirmaccount();
			$sql_terms = "SELECT termsconditions FROM #__cam_vendor_aboutus WHERE vendorid=".$masteraccount." "; 
			$db->setQuery($sql_terms);
			$terms_exist = $db->loadResult();
			
			if($terms_exist == '1'){
			$sql = "SELECT accepted FROM #__cam_vendor_terms WHERE vendorid=".$totalprefers[$sp]->v_id." and masterid=".$masteraccount." "; 
			$db->setQuery($sql);
			$terms = $db->loadResult();
				if($terms == '1'){
				$totalprefers[$sp]->special_requirements = 'success' ;
				}
				else{
				$totalprefers[$sp]->special_requirements = 'fail' ;
				}
			}
			else{
			
			}
			
			
		}
		else{
			$totalprefers[$sp]->special_requirements = 'fail' ;
		}
	}
	
		for( $se=0; $se<count($totalprefers); $se++ ){
	$exclude	=	$this->checkexclude($totalprefers[$se]->v_id);
		if($exclude == 'yes'){
			$totalprefers[$se]->excluded = 'yes' ;
		}
		else{
			$totalprefers[$se]->excluded = '' ;
		}
		
		// Adding block unverified vendor rule
	$user =& JFactory::getUser();
	$masterid = $this->getmasterfirmaccount();
	$block_per = "SELECT block, block_complinace FROM #__cam_master_block_users where masterid ='".$masterid."' ";
	$db->setQuery($block_per);
	$blockid = $db->loadObject();
	if( $blockid->block == '1' )
		$totalprefers[$se]->unverified = 'hide' ;
	else	
		$totalprefers[$se]->unverified = 'show' ;
	
	if( $blockid->block_complinace == '1' )
		$totalprefers[$se]->block_nonc = 'hide' ;
	else	
		$totalprefers[$se]->block_nonc = 'show' ;	
//Completed

	}
	//echo "<pre>"; print_r($totalprefers); echo "</pre>";
	
	//exit;
		return $totalprefers;
	}
//Completed	


  function propertyownermangersvendors()
	{
		$db = & JFactory::getDBO();
		$user =& JFactory::getUser();
		$industrytype = JRequest::getVar( 'industrytype','');
		$state = JRequest::getVar( 'state','');	
 		$county = JRequest::getVar( 'divcounty','');
		if(!$state){
		$county = '';
		}		
		else{
		$county = $county;
		}	
		$usercreator = $this->getalllinkedmanagerids();
		if( $usercreator )
		 {
		    $manager_ids = implode(',',$usercreator);
		    $whers_cond = 'U.userid IN ('.$manager_ids.')';
		 }	
		
	 	 $query = "SELECT V.company_name,V.city,V.company_phone,V.phone_ext,V.fax_id,V.tax_id,U.vendortype,U.userid,U.vid,U.v_id,U.status,U.inhousevendors,W.name,W.lastname,W.suspend,W.subscribe,W.subscribe_type,V.state,W.id from #__vendor_inviteinfo as U, #__cam_vendor_company as V, #__users as W where LOWER(U.inhousevendors) = (W.email) and W.search='' and V.user_id=W.id and ".$whers_cond." ";
		$db->setQuery($query); 
		$totalprefers = $db->loadObjectList();
		//echo "<pre>"; print_r($totalprefers); exit;
		//To get the vendors based on industry
			if($industrytype){
			$checkvendors = "SELECT distinct(user_id) FROM #__cam_vendor_industries where industry_id=".$industrytype." ";
			$db->setQuery($checkvendors);
			$accpetvendor = $db->loadObjectList();
			
			if($totalprefers){
				foreach($totalprefers as $vid){
				$existing[] = $vid->v_id;
				}
			}	
			if($accpetvendor){
				foreach($accpetvendor as $inids){
				$indusids[] = $inids->user_id;
				}
			}
			if($indusids != '' && $existing!= ''){
			$common = array_intersect($indusids, $existing) ;
			}
			if($common){
			$indus_condition = implode(',',$common) ;
			}
			if($indus_condition)
			$query = $query . "AND V.user_id IN ("  . $indus_condition . ")" ;
			else
			$query = $query . "AND V.user_id IN ('')" ;
			}	
			
			
		if($county){
			$checkvendors1 = "SELECT distinct(user_id) FROM #__vendor_state_counties where county_id=".$county." ";
			$db->setQuery($checkvendors1);
			$accpetvendor1 = $db->loadObjectList();
			
			if($totalprefers){
				foreach($totalprefers as $vid){
				$existing[] = $vid->v_id;
				}
			}	
			if($accpetvendor1){
				foreach($accpetvendor1 as $county){
				$countys[] = $county->user_id;
				}
			}
			//echo "<pre>"; print_r($countys);
			//echo "<pre>"; print_r($existing);
			if($countys != '' && $existing!= ''){
			$common = array_intersect($countys, $existing) ;
			}
			if($common){
			$county_condition = implode(',',$common) ;
			}
			if($county_condition)
			$query = $query . "AND V.user_id IN ("  . $county_condition . ")" ;
			else
			$query = $query . "AND V.user_id IN ('')" ;
			}
			
			//If selecting state and not selecting ny county
			if($state && !$county){
			 $checkvendorsstate = "SELECT distinct(user_id) FROM #__vendor_state_counties where state_id='".$state."' ";
			$db->setQuery($checkvendorsstate);
			$statevendors = $db->loadObjectList();
			if($totalprefers){
				foreach($totalprefers as $vid){
				$existing[] = $vid->v_id;
				}
			}	
			if($statevendors){
				foreach($statevendors as $county){
				$countys[] = $county->user_id;
				}
			}
			if($countys != '' && $existing!= ''){
			$common = array_intersect($countys, $existing) ;
			}
			if($common){
			$county_condition = implode(',',$common) ;
			}
			if($county_condition)
			$query = $query . "AND V.user_id IN ("  . $county_condition . ")" ;
			else
			$query = $query  . "AND V.user_id IN (' ')" ;
			}
			//Completed
			//echo $query; 
		$sort = JRequest::getVar('sort','');
		$type = JRequest::getVar('type','');
		
		if( $sort == 'asc' && $type == 'corporate' ){
			$sorting = ' GROUP BY U.v_id order by V.company_name ASC ';
		}
		else if( $sort == 'desc' && $type == 'corporate' ){
			$sorting = ' GROUP BY U.v_id order by V.company_name DESC ';
		}
		else{
			$sorting = " GROUP BY U.v_id order by W.subscribe_type='', W.subscribe_type='public', W.subscribe_type='all'  ";
		}
		
		$query = $query . ' '.$sorting.'  ' ;
		
			$db->setQuery($query);
			$totalprefers = $db->loadObjectList();
		//Funtion to get the eligible vendors
		$rfp_id = JRequest::getVar('rfpid','');
		$rfpinfo = $this->getrfpinfopre($rfp_id);
		$eligible_vendors =	$this->getVendorspre($rfpinfo->cust_id,$rfpinfo->property_id,$rfpinfo->id);
		//echo "<pre>"; print_r($eligible_vendors);exit;
		$vendors_bids	=	$this->getVendor_bidsinfopre($eligible_vendors,$rfp_id);
		//echo "<pre>"; print_r($vendors_bids);
		for($c=0; $c<count($vendors_bids); $c++){
		$elist[] = $vendors_bids[$c][0]->id ;
		}
		if($elist){
		$elist = $elist ;
		}
		else{
		$elist = '';
		}
		//print_r($elist);exit;
		// to check the previously invited vendors
		$query_in = "SELECT vendorid from #__rfp_invitations where rfpid=".$rfp_id." ";
		$db->setQuery($query_in);
		$preinviters = $db->loadObjectList();
		
			for($cm=0; $cm<count($preinviters); $cm++){
			$prelist[] = $preinviters[$cm]->vendorid ;
			}
			
			if($prelist){
			$prelist = $prelist ;
			}
			else{
			$prelist = '';
			}
		
		for($im=0; $im<count($totalprefers); $im++){
		if(in_array($totalprefers[$im]->v_id,$prelist)) {
		$totalprefers[$im]->pre = 'yes';
		}
		else{
		$totalprefers[$im]->pre = 'no';		
		}
		}
		//Completed
		
		for($i=0; $i<count($totalprefers); $i++){
		if(in_array($totalprefers[$i]->v_id,$elist)) {
		$totalprefers[$i]->vendorstatus = 'eligible';
		}
		else{
		$totalprefers[$i]->vendorstatus = 'ineligible';		
		}
		}
		//Completed
		//To get the status of compliance documents GLI and W9 docs
	/*for( $v=0; $v<count($totalprefers); $v++ ){
	$alert_sql ="SELECT count(*) from #__cam_vendor_liability_insurence   WHERE GLI_end_date  >= '".$today."' AND GLI_upld_cert!= '' AND GLI_policy_occurence!='' AND GLI_policy_aggregate!='' AND vendor_id=".$totalprefers[$v]->v_id; //validation to expdate of docs
		$db->Setquery($alert_sql);
		$res8 = $db->loadResult();
		if($res8 != 0) $res8=0; else $res8=1;
		
		$alert_sql ="SELECT count(*) from #__cam_vendor_compliance_w9docs  WHERE w9_upld_cert!=''  AND ein_number!='' AND vendor_id=".$totalprefers[$v]->v_id; //validation to status of docs
		$db->Setquery($alert_sql);
		$res4 = $db->loadResult();
		if($res4 != 0) $res4=0; else $res4=1;
		if( $res8 == 0 && $res4 == 0 ){
		$totalprefers[$v]->w9gli = 'yes';	
		}
		else{
		$totalprefers[$v]->w9gli = 'no';	
		}
		
	}*/
	//echo "<pre>"; print_r($totalprefers);
	for( $sp=0; $sp<count($totalprefers); $sp++ ){
		//if($totalprefers[$sp]->v_id == '1767'){
	//echo $totalprefers[$sp]->v_id.'<br />' ;
	$totalprefers_new_w9	=	$this->checknewspecialrequirements_w9($totalprefers[$sp]->v_id,$rfp_id);
	$totalprefers_new_gli	=	$this->checknewspecialrequirements_gli($totalprefers[$sp]->v_id,$rfp_id);
	//echo "GLI: ".$totalprefers_new_gli.'<br />';
	$totalprefers_new_aip	=	$this->checknewspecialrequirements_aip($totalprefers[$sp]->v_id,$rfp_id);
	//echo "AIP: ".$totalprefers_new_aip.'<br />';
	$totalprefers_new_wci	=	$this->checknewspecialrequirements_wci($totalprefers[$sp]->v_id,$rfp_id);
	//echo "WCI: ".$totalprefers_new_wci.'<br />';
	$totalprefers_new_umb	=	$this->checknewspecialrequirements_umb($totalprefers[$sp]->v_id,$rfp_id);
	//echo "UMB: ".$totalprefers_new_umb.'<br />';
	$totalprefers_new_pln	=	$this->checknewspecialrequirements_pln($totalprefers[$sp]->v_id,$rfp_id);
	$totalprefers_new_occ	=	$this->checknewspecialrequirements_occ($totalprefers[$sp]->v_id,$rfp_id);
	$totalprefers_new_omi	=	$this->checknewspecialrequirements_omi($totalprefers[$sp]->v_id,$rfp_id);
	
	//echo "UMB: ".$totalprefers_new_omi.'<br />';
	
	//}
		if($totalprefers_new_w9 == 'success' && $totalprefers_new_gli == 'success' && $totalprefers_new_aip == 'success' && $totalprefers_new_wci == 'success' && $totalprefers_new_umb == 'success' && $totalprefers_new_pln == 'success' && $totalprefers_new_occ == 'success'  && $totalprefers_new_omi == 'success'){
			$totalprefers[$sp]->special_requirements = 'success' ;
			$masteraccount = $this->getmasterfirmaccount();
			$sql_terms = "SELECT termsconditions FROM #__cam_vendor_aboutus WHERE vendorid=".$masteraccount." "; 
			$db->setQuery($sql_terms);
			$terms_exist = $db->loadResult();
			
			if($terms_exist == '1'){
			$sql = "SELECT accepted FROM #__cam_vendor_terms WHERE vendorid=".$totalprefers[$sp]->v_id." and masterid=".$masteraccount." "; 
			$db->setQuery($sql);
			$terms = $db->loadResult();
				if($terms == '1'){
				$totalprefers[$sp]->special_requirements = 'success' ;
				}
				else{
				$totalprefers[$sp]->special_requirements = 'fail' ;
				}
			}
			else{
			
			}
			
			
		}
		else{
			$totalprefers[$sp]->special_requirements = 'fail' ;
		}
	}
	
		for( $se=0; $se<count($totalprefers); $se++ ){
	$exclude	=	$this->checkexclude($totalprefers[$se]->v_id);
		if($exclude == 'yes'){
			$totalprefers[$se]->excluded = 'yes' ;
		}
		else{
			$totalprefers[$se]->excluded = '' ;
		}
		
		// Adding block unverified vendor rule
	$user =& JFactory::getUser();
	$masterid = $this->getmasterfirmaccount();
	$block_per = "SELECT block, block_complinace FROM #__cam_master_block_users where masterid ='".$masterid."' ";
	$db->setQuery($block_per);
	$blockid = $db->loadObject();
	if( $blockid->block == '1' )
		$totalprefers[$se]->unverified = 'hide' ;
	else	
		$totalprefers[$se]->unverified = 'show' ;
	
	if( $blockid->block_complinace == '1' )
		$totalprefers[$se]->block_nonc = 'hide' ;
	else	
		$totalprefers[$se]->block_nonc = 'show' ;	
//Completed

	}
	
	//echo "<pre>"; print_r($totalprefers); echo "</pre>";
	//exit;
		return $totalprefers;
	}


  function getalllinkedmanagerids(){
		$db =& JFactory::getDBO();
		$user=JFactory::getUser();
		$query  = "SELECT user_id FROM  #__cam_propertyowner_link where propertyowner_id ='".$user->id."' AND link_value=1 AND vendors_p='1'" ;
		$db->setQuery($query);
		$manager_id = $db->loadObjectList();
		//echo '<pre>';print_r($manager_id);exit;
		foreach($manager_id as $id ){
			            $managers[] = $id->user_id;
	                               }	
          return $managers;
	          }
  
    
	function getmasterglobals(){
		$db=&JFactory::getDBO();
		$user =& JFactory::getUser();
		$master =	$this->getmasterfirmaccount();
			
		$query = "SELECT * FROM #__cam_master_w9_standards WHERE masterid=".$master." ";
		$db->setQuery($query);
		$data_w9 = $db->loadObjectList();
		
		$query = "SELECT * FROM #__cam_master_generalinsurance_standards WHERE masterid=".$master." ";
		$db->setQuery($query);
		$data_pre = $db->loadObjectList();
		
		$query = "SELECT * FROM #__cam_master_autoinsurance_standards WHERE masterid=".$master."";
		$db->setQuery($query);
		$data_auto = $db->loadObjectList();
		
		$query = "SELECT * FROM #__cam_master_workers_standards WHERE masterid=".$master."";
		$db->setQuery($query);
		$data_work = $db->loadObjectList();

		$query = "SELECT * FROM #__cam_master_umbrellainsurance_standards WHERE masterid=".$master." ";
		$db->setQuery($query);
		$data_umbrella = $db->loadObjectList();

		$query = "SELECT * FROM #__cam_master_licinsurance_standards WHERE masterid=".$master." ";
		$db->setQuery($query);
		$data_lic = $db->loadObjectList();
		
		$query = "SELECT * FROM #__cam_master_errors_omissions WHERE masterid=".$master." ";
		$db->setQuery($query);
		$data_omi = $db->loadObjectList();
		
			if( $data_w9 || $data_pre || $data_auto || $data_work || $data_umbrella || $data_lic || $data_omi ){
				$message = 'success';
			}
			else{
				$message = 'fail';
			}	

		return $message ;
		}
	
	function getw9insdata_compliant_active($rfpid,$from,$custid)
	{
		$db=&JFactory::getDBO();
		$user =& JFactory::getUser();
		$master =	$this->getmasterfirmaccount();
		$query = "SELECT * FROM #__cam_master_w9_standards_rfps WHERE rfpid=".$rfpid."  ";
		$db->setQuery($query);
		$data_pre = $db->loadObject();
		//echo "<pre>"; print_r($data_pre); exit;
		return $data_pre;
	}	

	function getgeneralinsdata_compliant_active($rfpid,$from,$custid)
	{
		$db=&JFactory::getDBO();
		$user =& JFactory::getUser();
		$master =	$this->getmasterfirmaccount();
		$query = "SELECT * FROM #__cam_master_generalinsurance_standards_rfps WHERE rfpid=".$rfpid."  ";
		$db->setQuery($query);
		$data_pre = $db->loadObject();
		//echo "<pre>"; print_r($data_pre); exit;
		return $data_pre;
	}
	
	function getautoinsdata_compliant_active($rfpid,$from,$custid)
	{
		$db=&JFactory::getDBO();
		$user =& JFactory::getUser();
		$master =	$this->getmasterfirmaccount();
		$query = "SELECT * FROM #__cam_master_autoinsurance_standards_rfps WHERE rfpid=".$rfpid."  ";
		$db->setQuery($query);
		$data_auto = $db->loadObject();
		return $data_auto;
	}
	function getworkinsdata_compliant_active($rfpid,$from,$custid)
	{
		$db=&JFactory::getDBO();
		$user =& JFactory::getUser();
		$master =	$this->getmasterfirmaccount();
		$query = "SELECT * FROM #__cam_master_workers_standards_rfps WHERE rfpid=".$rfpid."  ";
		$db->setQuery($query);
		$data_work = $db->loadObject();
		return $data_work;
	}
	function getumbrellainsdata_compliant_active($rfpid,$from,$custid)
	{
		$db=&JFactory::getDBO();
		$user =& JFactory::getUser();
		$master =	$this->getmasterfirmaccount();
		$query = "SELECT * FROM #__cam_master_umbrellainsurance_standards_rfps WHERE rfpid=".$rfpid."  ";
		$db->setQuery($query);
		$data_umbrella = $db->loadObject();
		return $data_umbrella;
	}
	function getlicinsdata_compliant_active($rfpid,$from,$custid)
	{
		$db=&JFactory::getDBO();
		$user =& JFactory::getUser();
		$master =	$this->getmasterfirmaccount();
		$query = "SELECT * FROM #__cam_master_licinsurance_standards_rfps WHERE rfpid=".$rfpid."  ";
		$db->setQuery($query);
		$data_lic = $db->loadObject();
		return $data_lic;
	}	
	
	function getomiinsdata_compliant_active($rfpid,$from,$custid)
	{
		$db=&JFactory::getDBO();
		$user =& JFactory::getUser();
		$master =	$this->getmasterfirmaccount();
		$query = "SELECT * FROM #__cam_master_errors_omissions_rfps WHERE rfpid=".$rfpid."  ";
		$db->setQuery($query);
		$data_omi = $db->loadObject();
		return $data_omi;
	}	
	
	
	function savebfiles($data){
		JTable::addIncludePath(JPATH_COMPONENT.DS.'tables');
		$row =& $this->getTable('basicfiles');
		$row = JTable::getInstance('basicfiles','Table');
        if (!$row->bind($data)) {
                $this->setError($this->_db->getErrorMsg());
                return false;
        }
        if (!$row->check()) {
                $this->setError($this->_db->getErrorMsg());
                return false;
        }
        if (!$row->store()) {
                $this->setError($row->getErrorMsg());
                return false;
        }
        return true;
	} 
	function getrfpinfo_new($rfpid){
		$db=JFactory::getDBO();
		$sql_rfp_new = "SELECT property_id, cust_id, industry_id, create_rfptype FROM #__cam_rfpinfo where id=".$rfpid." ";
		$db->Setquery($sql_rfp_new);
		$rfp_new = $db->loadObject();	
		return $rfp_new;
	}
	
	function savebasicrequest($rfpid, $vendors, $invitation){
	$db=JFactory::getDBO();
	$user=JFactory::getUser();
	$vendors_sel = explode(",", $vendors);
	//To get customer, property id, rfpid
	$rfp_new = $this->getrfpinfo_new($rfpid);
	
	if( $rfp_new->create_rfptype == 'open' || $rfp_new->create_rfptype == 'both' ) {
	$eligible_vendors =	$this->getVendorspre($rfp_new->cust_id,$rfp_new->property_id,$rfpid);
	$vendors_bids	=	$this->getVendor_bidsinfopre($eligible_vendors,$rfpid);	
			
		for( $v=0; $v<=count($vendors_bids); $v++ ){
				if( $vendors_bids[$v][0]->vid )
				$all_vendors[] = $vendors_bids[$v][0]->vid;
			}
		if( $vendors_sel && $all_vendors )	
		$vendors_b = array_merge($all_vendors, $vendors_sel);
		else if( $all_vendors && !$vendors_sel )
		$vendors_b = $all_vendors;
		else if( !$all_vendors && $vendors_sel)
		$vendors_b = $vendors_sel ;
			
	}
	else{
		$vendors_b = $vendors_sel;
	}
	
	$post['rfpid']	= $rfpid;
	//$vendors_b = explode(",", $vendors);
	/*echo "<pre>"; print_r($vendors_bids); echo "</pre>";
	echo "<pre>"; print_r($vendors_sel); echo "</pre>";
	echo "<pre>"; print_r($all_vendors); echo "</pre>";
	echo "<pre>"; print_r($vendors_b); echo "</pre>";
	exit;*/
	
	$count = count($vendors_b);
	for($i=0; $i<$count; $i++){
		$post['rfpid']	= $rfpid;
		$post['vendorid'] = $vendors_b[$i];
		$post['publish'] = '0';
		$post['status'] = '0';
		$post['date'] = date('Y-m-d');
		if($closeinvite == 'closeinvite') {
		$no = '';
		}
		else {
		$no = 'no' ;
		}
		// To get the vendor id
		if($invitation == 'invite') {
			$post['vendorid'] = $vendors_b[$i];
		}
		else{
			$sql12_vendor = "SELECT v_id FROM #__vendor_inviteinfo where vid=".$vendors_b[$i]." ";
			$db->Setquery($sql12_vendor);
			$post['vendorid'] = $db->loadResult();
			if( !$post['vendorid'] )
			$post['vendorid'] = $this->getvendorid_users($vendors_bids,$vendors_b[$i]);
		}
		
		// Cross checking to eliminate duplicate vendors
		
		//Completed
		$checkuninvite = $this->checkproposalstatus($post['rfpid'],$post['vendorid']);
		if( $checkuninvite != 'uninvited' ){
		$existingid = $this->checkproposalexist($post['rfpid'],$post['vendorid']);
		$duplicateid = $existingid ;
		if( $duplicateid == 'no' ) {
		$insert_sql = "insert into #__rfp_invitations values ('','".$post['rfpid']."','".$post['vendorid']."','".$post['publish']."','".$post['status']."','".$post['date']."','".$no."','')";
		$db->SetQuery($insert_sql);
		$db->query();
		$invitationid = $db->insertid();
		
		$insert_avail = "insert into #__cam_vendor_availablejobs values ('','".$post['rfpid']."','".$post['vendorid']."','1','0','0','0')";
		$db->SetQuery($insert_avail);
		$db->query();	
	
		$today = date('m-d-Y');
		$insert_sqlITB = "insert into #__cam_vendor_proposals values ('0','','".$post['rfpid']."','','','','','".$post['vendorid']."','".$today."','ITB','0.00','',0.00,'','','admin')";
		$db->SetQuery($insert_sqlITB);
		$db->query();
		}
		}
		else{
		$today = date('m-d-Y');
		$sql = "UPDATE #__cam_vendor_proposals SET proposaltype='ITB', bidfrom='admin', proposeddate='".$today."' where rfpno = ".$post['rfpid']." AND proposedvendorid= ".$post['vendorid']." and proposaltype = 'uninvited' "; 
		$db->SetQuery($sql);
		$db->query();
		$query = "DELETE FROM #__cam_rfp_uninvites WHERE rfpid=".$post['rfpid']." and vendorid=".$post['vendorid']." ";
		$db->setQuery($query);
		$db->query();
		}
		//requerst for mail send
		
	//permssions for rfp	
	$rfpapprovalper = "SELECT approval_p FROM #__cam_propertyowner_link where property_id=".$rfp_new->property_id." ";
	$db->Setquery($rfpapprovalper);
	$rfpapprovalper = $db->loadResult();
	if( $rfpapprovalper == 1 )
	{
	$updatereq = "UPDATE #__cam_rfpinfo SET rfpapproval = 1 where id = ".$rfpid."";
	$db->setQuery($updatereq);
	$db->query();
	
	$updateinv = "UPDATE #__rfp_invitations SET approval_request = 1 where id = ".$invitationid."";
	$db->setQuery($updateinv);
	$db->query();
	} 
		
    $v_company = "SELECT u.company_name, v.email, v.ccemail, v.subscribe, u.faxid, u.fax_acc  FROM #__cam_vendor_company as u, #__users as v where u.user_id=".$post['vendorid']." and u.user_id=v.id ";
	$db->Setquery($v_company);
	$vendor_companyname = $db->loadObject();
	$v_companyname = $vendor_companyname->company_name ;
    $vemail = $vendor_companyname->email ;
	
	$ccemail = $vendor_companyname->ccemail ;
    $subscribe = $vendor_companyname->subscribe ;     
	$pdata = "SELECT u.property_name, v.projectName, v.proposalDueDate, v.proposalDueTime, v.cust_id, v.jobtype, v.property_id FROM #__cam_property as u, #__cam_rfpinfo as v where u.id=v.property_id and v.id=".$post['rfpid']." ";
	$db->Setquery($pdata);
	$rfpdetails = $db->loadObject();
	//To get the company name
	$namemanager = "SELECT comp_name FROM #__cam_customer_companyinfo  where cust_id=".$rfpdetails->cust_id." ";
	$db->Setquery($namemanager);
	$managaercname = $db->loadResult();
    $rfptime = $rfpdetails->proposalDueDate.' '.$rfpdetails->proposalDueTime ;
     
    $customerdata = "SELECT u.comp_name FROM #__cam_customer_companyinfo as u, #__cam_rfpinfo as v where v.cust_id=u.cust_id and v.id=".$post['rfpid']." ";
	$db->Setquery($customerdata);
	$cust_coname = $db->loadResult();
	
	// To get the manager name
	$manager_name = "SELECT name, lastname, email FROM #__users where id=".$rfpdetails->cust_id." ";
	$db->Setquery($manager_name);
	$manager_details = $db->loadObject();
	$man_fullname = $manager_details->name.' '. $manager_details->lastname ;
	//Completed
	
    if($subscribe == 'yes'){
		if( $rfp_new->create_rfptype == 'open' || $rfp_new->create_rfptype == 'both' )
    	$email_data = "SELECT introtext  FROM #__content where id='310' ";
		else
		$email_data = "SELECT introtext  FROM #__content where id='248' ";
	}
	else{
		if( $rfp_new->create_rfptype == 'open' || $rfp_new->create_rfptype == 'both' )
		$email_data = "SELECT introtext  FROM #__content where id='311' ";
		else
		$email_data = "SELECT introtext  FROM #__content where id='258' ";
	}
	$db->Setquery($email_data);
	$data = $db->loadResult();
   
	$proposalid = $this->getproposal($post['rfpid'],$post['vendorid']);       
    $body = str_replace('{VENDOR}',$v_companyname,$data);
	$body = str_replace('[RFP #]',$post['rfpid'],$body);
	$body = str_replace('{PNAME}',str_replace('_',' ',$rfpdetails->property_name),$body);
	$body = str_replace('[communityname]',str_replace('_',' ',$rfpdetails->property_name),$body);
	$body = str_replace('[managername]',$managaercname,$body);
	$body = str_replace('[Reference Name]',$rfpdetails->projectName,$body);
	$body = str_replace('{PROJECTNAME}',$rfptime,$body);
	$body = str_replace('{CAMFIRM}',$cust_coname,$body);
	$body = str_replace('{managerfullname}',$man_fullname,$body);
	
	$site_url = JURI::root() ;
	$link = $site_url."index.php?option=com_camassistant&controller=proposals&task=vendor_proposal_form&view=proposals&Prp_id=".$rfpdetails->property_id."&rfp_id=".$post['rfpid']."&mot_interested=0&type=invitation&id=".$proposalid."&jobtype=".$rfpdetails->jobtype."&Itemid=112";
	$link_invite = '<a href="'.$link.'">CLICK HERE</a>';
	$body = str_replace('{CLICK HERE}',$link_invite,$body);
	
	//$mailfrom = 'support@myvendorcenter.com';
	$mailfrom = $manager_details->email ;
	
	if( $user->user_type == '16' )
	$fromname = $man_fullname;
	else 
	$fromname = $cust_coname;

	if( $rfp_new->create_rfptype == 'open' || $rfp_new->create_rfptype == 'both' )
		$mailsubject = "A new Project is available for your company";
	else
		$mailsubject = "You've received a Project Invitation";
	
		if( $duplicateid == 'no' ) {		
	if( $vemail ) {
	
	if( $rfpapprovalper !=1 )
	{
	
	JUtility::sendMail($mailfrom, $fromname, $vemail, $mailsubject, $body,$mode = 1);
	$support='rize.cama@gmail.com';
    JUtility::sendMail($mailfrom, $fromname, $support, $mailsubject, $body,$mode = 1);
	//To send the mails to CC
	$cclist = explode(';',$ccemail);
		for($c=0; $c<=count($cclist); $c++){
		$listcc = $cclist[$c];
		if($listcc){
		$res = JUtility::sendMail($mailfrom, $fromname, $listcc, $mailsubject, $body,$mode = 1);
		}
		} 
	}
	}
	}	
	//Completed	 
	// To send th FAX
		/*$email_fax = "SELECT introtext  FROM #__content where id='309' ";
		$db->Setquery($email_fax);
		$faxbody = $db->loadResult();
		$fax_body = str_replace('{VENDOR}',$v_companyname,$faxbody);
		$fax_body = str_replace('[RFP #]',$rfpid,$fax_body);
		$fax_body = str_replace('{PNAME}',str_replace('_',' ',$rfpdetails->property_name),$fax_body);
		$fax_body = str_replace('[communityname]',str_replace('_',' ',$rfpdetails->property_name),$fax_body);
		$fax_body = str_replace('[managername]',$managaercname,$fax_body);
		$fax_body = str_replace('[Reference Name]',$rfpdetails->projectName,$fax_body);
		$fax_body = str_replace('{PROJECTNAME}',$rfptime,$fax_body);
		$fax_body = str_replace('{CAMFIRM}',$cust_coname,$fax_body);
		$fax_body = str_replace('{managerfullname}',$man_fullname,$fax_body);

		$pdf = new MYPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
		$pdf->SetCreator(PDF_CREATOR);
		$pdf->SetHeaderData(PDF_HEADER_LOGO, PDF_HEADER_LOGO_WIDTH, PDF_HEADER_TITLE, PDF_HEADER_STRING);
		$pdf->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
		$pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));
		$pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);
		$pdf->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP, PDF_MARGIN_RIGHT);
		$pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
		$pdf->SetFooterMargin(PDF_MARGIN_FOOTER);
		$pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
		$pdf->setImageScale(PDF_IMAGE_SCALE_RATIO);
		$pdf->setLanguageArray($l);
		$pdf = new MYPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
		$pdf->setJPEGQuality(200);
		$pdf->AddPage();
		$pdfcontent = $fax_body;
		$pdf->writeHTML($pdfcontent, true, 0, true, 0);
		$pdf->lastPage();
		$title= $post['rfpid'].'_Invitation_'.$post['vendorid'].'.pdf'; //set title
		$pdf->SetTitle($title);
		$pdf->Output('/var/www/vhosts/myvendorcenter.com/httpdocs/components/com_camassistant/assets/invitations/' . $title, 'F');
		$attachment ="/var/www/vhosts/myvendorcenter.com/httpdocs/components/com_camassistant/assets/invitations/".$title;
		$to_fax = '8005309768@rcfax.com';
		$mailfrom = "support@myvendorcenter.com";
		$mailsubject = "You've received a Project Invitation";
		$body = $fax_body ;
		$to_rize = 'rize.cama@gmail.com';
		if( $vendor_companyname->faxid && ( $vendor_companyname->fax_acc == 'yes' || $vendor_companyname->fax_acc  == '' ) ) {
		$successMail =JUtility::sendMail($mailfrom, $fromname, $to_rize, $mailsubject, $body,$mode = 1, $cc=null, $bcc=null, $attachment, $replyto=null, $replytoname=null);
		$successMail =JUtility::sendMail($mailfrom, $fromname, $to_fax, $mailsubject, $body,$mode = 1, $cc=null, $bcc=null, $attachment, $replyto=null, $replytoname=null);
		}		
		$username = 'rize.cama'; // Enter your Interfax username here
		$password = 'rize@1251'; // Enter your Interfax password here
		$faxnumber = '+18005309768'; // Enter your designated fax number here in the format +[country code][area code][fax number], for example: +12125554874
		$texttofax = $body; // Enter your fax contents here
		$filetype = 'pdf';
		
		$client = new SoapClient("http://ws.interfax.net/dfs.asmx?wsdl");
		$params->Username  = $username;
		$params->Password  = $password;
		$params->FaxNumber = $faxnumber;
		$params->Data      = $texttofax;
		$params->FileType  = $filetype;
		if( $vendor_companyname->faxid && ( $vendor_companyname->fax_acc == 'yes' || $vendor_companyname->fax_acc  == '' ) ) {
		$faxResult = $client->SendCharFax($params);
		}*/
	//Completed

	}
	return $res;
	}	
	
	
	
	
	//Function to get user id in case of not in invite table
	function getvendorid_users($vendors_bids,$inviteid){
		for( $b=0; $b<=count($vendors_bids); $b++ ){
			if( $vendors_bids[$b][0]->vid == $inviteid )
				return $vendors_bids[$b][0]->id;
		}
	}
	//function to check the vendor received invitation ot nor
	function checkproposalexist($rfpid,$vendorid){
		$db=&JFactory::getDBO();
		$check_invite = "SELECT id FROM #__cam_vendor_availablejobs where rfp_id = ".$rfpid." and user_id=".$vendorid." " ;
		$db->SetQuery($check_invite);
		$existid = $db->loadResult();
		if( $existid )
			$val = 'yes';
		else
			$val = 'no';	
		return $val ;	
	}
	//Function to get attached files to basic request
	function bascifiles()
	{
		$db=&JFactory::getDBO();
		$rfp_id = JRequest::getVar('rfpid','');
		$query_basic = "SELECT * FROM #__cam_basicrequest_files WHERE rfpid=".$rfp_id."  ";
		$db->setQuery($query_basic);
		$basefiles = $db->loadObjectList();
		
		/*for( $f=0; $f<count($basefiles); $f++ ){
			$query_pinfo = "SELECT u.property_id, v.property_name, v.tax_id FROM #__cam_property as v, #__cam_rfpinfo as u WHERE u.id=".$rfp_id." and u.property_id=v.id ";
			$db->setQuery($query_pinfo);
			$pinfo = $db->loadObject();
			$basefiles[$f]->path = str_replace(' ','_',$pinfo->property_name).'_'.$pinfo->tax_id ;
		}*/
		
		
		return $basefiles;
	}	
	//Completed
	function checknewspecialrequirements_w9_indus($vendorid,$industryid,$managerid){
		$totalprefers_new_w9 = '';
		$db = & JFactory::getDBO();
		$w9_data ="SELECT * from #__cam_vendor_compliance_w9docs WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($w9_data);
		$vendor_w9_data = $db->loadObjectList();
		//Get RFP data
		$rfp_w9_data ="SELECT * from #__cam_master_w9_standards WHERE masterid=".$managerid." and industry_id=".$industryid; 
		$db->Setquery( $rfp_w9_data );
		$rfp_w9_data = $db->loadObject();
		
		$occur_w9 = '';
			if($rfp_w9_data){
					if( !$vendor_w9_data[0]->w9_upld_cert || $vendor_w9_data[0]->w9_status == '-1') {
						$occur_w9[] = 'no' ;
					}
					else{
						$occur_w9[] = 'yes' ;
					}
				}
		
				
			if($occur_w9){
				if( in_array("no", $occur_w9) ){
				$cabins_w9[] = "no";
				}
				else{
				$cabins_w9[] = "yes";
				}
			}
				
		
			if($cabins_w9){
					if( in_array("yes", $cabins_w9) ){
					$special_w9 = "success";
					}
					else{
					$special_w9 = "fail";
					}
			
			}
			
			else{
					if($rfp_w9_data)
					$special_w9 = "fail";
					else
					$special_w9 = "success";
			}
			
				
			$cabins_w9 = '';
			return $special_w9 ;
			
	 }
	
	function checknewspecialrequirements_gli_indus($vendorid,$industryid,$managerid){
		$totalprefers_new_gli = '';
		$db = & JFactory::getDBO();
		$gli_data ="SELECT * from #__cam_vendor_liability_insurence  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($gli_data);
		$vendor_gli_data = $db->loadObjectList();
		//Get RFP data
		$rfp_gli_data ="SELECT * from #__cam_master_generalinsurance_standards WHERE masterid=".$managerid." and industry_id=".$industryid; //validation to status of docs
		$db->Setquery($rfp_gli_data);
		$rfp_gli_data = $db->loadObject();
		//echo "<br />";
		//echo "<pre>"; print_r($vendor_gli_data); echo "</pre>";
		//echo "<pre>"; print_r($rfp_gli_data); echo "</pre>";
		
		$occur = '';
		for( $gl=0; $gl<count($vendor_gli_data); $gl++ ){
			if($rfp_gli_data->occur ==  'yes'){
				if( $vendor_gli_data[$gl]->GLI_occur == 'occur' ){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			
			if($rfp_gli_data->each_occurrence >  '0'){
				if($rfp_gli_data->each_occurrence <= $vendor_gli_data[$gl]->GLI_policy_occurence){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->damage_retend > '0'){
				if($rfp_gli_data->damage_retend <= $vendor_gli_data[$gl]->GLI_damage){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->med_expenses > '0'){
				if($rfp_gli_data->med_expenses <= $vendor_gli_data[$gl]->GLI_med){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}	
			if($rfp_gli_data->personal_inj > '0'){
				if($rfp_gli_data->personal_inj <= $vendor_gli_data[$gl]->GLI_injury){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->general_aggr > '0'){	
				if($rfp_gli_data->general_aggr <= $vendor_gli_data[$gl]->GLI_policy_aggregate){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}

			if($rfp_gli_data->applies_to == 'pol'){
				if($vendor_gli_data[$gl]->GLI_applies == 'pol'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->applies_to == 'proj'){
				if($vendor_gli_data[$gl]->GLI_applies == 'proj'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->applies_to == 'loc'){
				if($vendor_gli_data[$gl]->GLI_applies == 'loc'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->products_aggr >  '0'){
				if($rfp_gli_data->products_aggr <= $vendor_gli_data[$gl]->GLI_products){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}	
			if($rfp_gli_data->waiver_sub == 'yes') {
				if($vendor_gli_data[$gl]->GLI_waiver == 'waiver'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->primary_noncontr == 'yes') {
				if($vendor_gli_data[$gl]->GLI_primary == 'primary'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->additional_insured == 'yes') {
				if($vendor_gli_data[$gl]->GLI_additional){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->cert_holder == 'yes') {
				if($vendor_gli_data[$gl]->GLI_certholder == 'yes'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
				if($rfp_gli_data){
					if($vendor_gli_data[$gl]->GLI_end_date < date('Y-m-d') || !$vendor_gli_data[$gl]->GLI_upld_cert || !$vendor_gli_data[$gl]->GLI_policy_occurence || !$vendor_gli_data[$gl]->GLI_policy_aggregate || $vendor_gli_data[$gl]->GLI_status == '-1') {
						$occur[] = 'no' ;
					}
					else{
						$occur[] = 'yes' ;
					}
				}
		
			if($occur){
				if( in_array("no", $occur) ){
				$cabins_gli[] = "no";
				}
				else{
				$cabins_gli[] = "yes";
				}
			}
			$occur = '';
		}
		
		if($cabins_gli){
			if( in_array("yes", $cabins_gli) ){
			$special = "success";
			}
			else{
			$special = "fail";
			}
			
		}
		else{
				if($rfp_gli_data)
				$special = "fail";
				else
				$special = "success";
		}
			
		$cabins_gli = '';
		return $special ;
		
	}
//Completed
	
	function checknewspecialrequirements_aip_indus($vendorid,$industryid,$managerid){
		$db = & JFactory::getDBO();
		$aip_data ="SELECT * from #__cam_vendor_auto_insurance  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($aip_data);
		$vendor_aip_data = $db->loadObjectList();
		//Get RFP data
		$rfp_aip_data ="SELECT * from #__cam_master_autoinsurance_standards WHERE masterid=".$managerid." and industryid=".$industryid; //validation to status of docs
		$db->Setquery($rfp_aip_data);
		$rfp_aip_data = $db->loadObject();
		
			for( $ai=0; $ai<count($vendor_aip_data); $ai++ ){
				if($rfp_aip_data->applies_to_any == 'any'){
					if($rfp_aip_data->applies_to_any == $vendor_aip_data[$ai]->aip_applies_any){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}

				if($rfp_aip_data->applies_to_owned == 'owned'){
					if($rfp_aip_data->applies_to_owned == $vendor_aip_data[$ai]->aip_applies_owned){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}

				if($rfp_aip_data->applies_to_nonowned == 'nonowned'){
					if($rfp_aip_data->applies_to_nonowned == $vendor_aip_data[$ai]->aip_applies_nonowned){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}

				if($rfp_aip_data->applies_to_hired == 'hired'){
					if($rfp_aip_data->applies_to_hired == $vendor_aip_data[$ai]->aip_applies_hired){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}

				if($rfp_aip_data->applies_to_scheduled == 'scheduled'){
					if($vendor_aip_data[$ai]->aip_applies_scheduled == 'sch'){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->combined_single > '0'){	
					if($rfp_aip_data->combined_single <= $vendor_aip_data[$ai]->aip_combined){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->bodily_injusy_person > '0'){	
					if($rfp_aip_data->bodily_injusy_person <= $vendor_aip_data[$ai]->aip_bodily){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->bodily_injusy_accident > '0'){	
					if($rfp_aip_data->bodily_injusy_accident <= $vendor_aip_data[$ai]->aip_body_injury){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->property_damage > '0'){	
					if($rfp_aip_data->property_damage <= $vendor_aip_data[$ai]->aip_property){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->waiver == 'yes'){
					if($vendor_aip_data[$ai]->aip_waiver == 'waiver'){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->primary == 'yes'){
					if($vendor_aip_data[$ai]->aip_primary == 'primary'){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->additional_ins == 'yes'){
					if($vendor_aip_data[$ai]->aip_addition != ''){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->cert_holder == 'yes'){
					if($vendor_aip_data[$ai]->aip_cert == 'yes'){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data){
					if($vendor_aip_data[$ai]->aip_end_date < date('Y-m-d') || $vendor_aip_data[$ai]->aip_upld_cert=='' || $vendor_aip_data[$ai]->aip_status == '-1' || !$vendor_aip_data[$ai]->aip_combined ) 		{
						$occur_aip[] = 'no' ;
						}
					else
						{
						$occur_aip[] = 'yes' ;
						}
				}
				if($occur_aip){
					if( in_array("no", $occur_aip) ){
						$cabins_aip[] = "no";
					}
					else{
						$cabins_aip[] = "yes";
					}
				}
				$occur_aip = '';
			}	
			if($cabins_aip){
				if( in_array("yes", $cabins_aip) ){
					$special_aip = "success";
				}
				else{
					$special_aip = "fail";
				}
			}
			else{
				if($rfp_aip_data)
				$special_aip = "fail";
				else
				$special_aip = "success";
			}
			
				$cabins_aip = '';
		
		return $special_aip ;
		
		
	}
	
		//Function to check WCI documents
	function checknewspecialrequirements_wci_indus($vendorid,$industryid,$managerid){
		
		$db = & JFactory::getDBO();
		$wci_data ="SELECT * from #__cam_vendor_workers_companies_insurance  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($wci_data);
		$vendor_wci_data = $db->loadObjectList();
		//Get RFP data
		$rfp_wci_data ="SELECT * from #__cam_master_workers_standards WHERE masterid=".$managerid." and industryid=".$industryid; //validation to status of docs
		$db->Setquery($rfp_wci_data);
		$rfp_wci_data = $db->loadObject();

			for( $wci=0; $wci<count($vendor_wci_data); $wci++ ){
				
				if($rfp_wci_data->disease_policy > '0'){	
					if($rfp_wci_data->disease_policy <= $vendor_wci_data[$wci]->WCI_disease_policy){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}	
					
				if($rfp_wci_data->disease_eachemp > '0'){
					if($rfp_wci_data->disease_eachemp <= $vendor_wci_data[$wci]->WCI_disease){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}
				
				if($rfp_wci_data->waiver_work == 'yes'){
					if($vendor_wci_data[$wci]->WCI_waiver == 'waiver'){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}
				
				if($rfp_wci_data->each_accident > '0'){
					if($rfp_wci_data->each_accident <= $vendor_wci_data[$wci]->WCI_each_accident){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}
				
				if($rfp_wci_data->certholder_work == 'yes'){
					if($vendor_wci_data[$wci]->WCI_cert == 'yes'){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}
				if($rfp_wci_data){
					if($vendor_wci_data[$wci]->WCI_end_date < date('Y-m-d') || $vendor_wci_data[$wci]->WCI_upld_cert=='' || $vendor_wci_data[$wci]->WCI_status == '-1') {
							$occur_wci[] = 'no' ;
					}
					else{
							$occur_wci[] = 'yes' ;
					}
				}	
				if($occur_wci){
					if( in_array("no", $occur_wci) ){
						$cabins_wci[] = "no";
					}
					else{
						$cabins_wci[] = "yes";
					}
				}
				$occur_wci = '';
			}
			
			if($cabins_wci){
				if( in_array("yes", $cabins_wci) ){
					$special_wci = "success";
				}
				else{
					$special_wci = "fail";
				}
			}
			else{
				if($rfp_wci_data)
				$special_wci = "fail";
				else
				$special_wci = "success";
			}
			
				$cabins_wci = '';
		
		return $special_wci ;
	}
	
	//COmpleted
	
	//function to check umbrella liability documents
	 function checknewspecialrequirements_umb_indus($vendorid,$industryid,$managerid){
		$db = & JFactory::getDBO();
		$umb_data ="SELECT * from #__cam_vendor_umbrella_license  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($umb_data);
		$vendor_umb_data = $db->loadObjectList();
		//Get RFP data
		$rfp_umb_data ="SELECT * from #__cam_master_umbrellainsurance_standards WHERE masterid=".$managerid." and industryid=".$industryid; //validation to status of docs
		$db->Setquery($rfp_umb_data);
		$rfp_umb_data = $db->loadObject();
		
			for( $umb=0; $umb<count($vendor_umb_data); $umb++ ){
				
				if($rfp_umb_data->each_occur > '0'){	
					if($rfp_umb_data->each_occur <= $vendor_umb_data[$umb]->UMB_occur){
						$occur_umb[] = 'yes' ;
					}
					else{
						$occur_umb[] = 'no' ;
					}
				}	
				if($rfp_umb_data->aggregate > '0'){	
					if($rfp_umb_data->aggregate <= $vendor_umb_data[$umb]->UMB_aggregate){
						$occur_umb[] = 'yes' ;
					}
					else{
						$occur_umb[] = 'no' ;
					}
				}	
				if($rfp_umb_data->certholder_umbrella == 'yes'){
					if($vendor_umb_data[$umb]->UMB_certholder == 'yes'){
						$occur_umb[] = 'yes' ;
					}
					else{
						$occur_umb[] = 'no' ;
					}
				}
				if($rfp_umb_data){
				if($vendor_umb_data[$umb]->UMB_expdate < date('Y-m-d') || !$vendor_umb_data[$umb]->UMB_upld_cert || $vendor_umb_data[$umb]->UMB_status == '-1' || !$vendor_umb_data[$umb]->UMB_aggregate || !$vendor_umb_data[$umb]->UMB_occur) {
						$occur_umb[] = 'no' ;
				}
				else{
						$occur_umb[] = 'yes' ;
				}
				}
				
				if($occur_umb){
					if( in_array("no", $occur_umb) ){
						$cabins_umb[] = "no";
					}
					else{
						$cabins_umb[] = "yes";
					}
				}
				$occur_umb = '';
			}	 
				
				if($cabins_umb){
					if( in_array("yes", $cabins_umb) ){
						$special_umb = "success";
					}
					else{
						$special_umb = "fail";
					}
				}
				else{
					if($rfp_umb_data)
					$special_umb = "fail";
					else
					$special_umb = "success";
				}
		
				$cabins_umb = '';
				return $special_umb ;
	 }
	//Completed
	
	//Funcion to check professional licensw
	function checknewspecialrequirements_pln_indus($vendorid,$industryid,$managerid){

		$db = & JFactory::getDBO();
		$pln_data ="SELECT * from #__cam_vendor_professional_license  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($pln_data);
		$vendor_pln_data = $db->loadObjectList();
		//Get RFP data
		$rfp_pln_data ="SELECT * from #__cam_master_licinsurance_standards WHERE masterid=".$managerid." and industryid=".$industryid; //validation to status of docs
		$db->Setquery($rfp_pln_data);
		$rfp_pln_data = $db->loadObject();
		
			for( $pln=0; $pln<count($vendor_pln_data); $pln++ ){
			
				if($rfp_pln_data->professional == 'yes'){
					if($vendor_pln_data[$pln]->PLN_expdate < date('Y-m-d') || !$vendor_pln_data[$pln]->PLN_upld_cert || $vendor_pln_data[$pln]->PLN_status == '-1') {
						$occur_pln[] = 'no' ;
					}
					else{
						$occur_pln[] = 'yes' ;
					}
				}
				if( $occur_pln ){
					if( in_array("no", $occur_pln) ){
						$cabins_pln[] = "no";
					}
					else{
						$cabins_pln[] = "yes";
					}
				}	
			}	
			
			if($cabins_pln){
				if( in_array("yes", $cabins_pln) ){
					$special_pln = "success";
				}
				else{
					$special_pln = "fail";
				}
				$cabins_pln = '';
			}
			
			else{
					if($rfp_pln_data->professional)
					$special_pln = "fail";
					else
					$special_pln = "success";
			}
			
				$cabins_pln = '';
				return $special_pln ;
	}
	//Completed
	function checknewspecialrequirements_occ_indus($vendorid,$industryid,$managerid){

		$db = & JFactory::getDBO();
		$occ_data ="SELECT * from #__cam_vendor_occupational_license  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($occ_data);
		$vendor_occ_data = $db->loadObjectList();
		//Get RFP data
		$rfp_occ_data ="SELECT * from #__cam_master_licinsurance_standards WHERE masterid=".$managerid." and industryid=".$industryid; //validation to status of docs
		$db->Setquery($rfp_occ_data);
		$rfp_occ_data = $db->loadObject();
		
			for( $occ=0; $occ<count($vendor_occ_data); $occ++ ){
			
				if($rfp_occ_data->occupational == 'yes'){
					if($vendor_occ_data[$occ]->OLN_expdate < date('Y-m-d') || !$vendor_occ_data[$occ]->OLN_upld_cert || $vendor_occ_data[$pln]->OLN_status == '-1') {
						$occur_occ[] = 'no' ;
					}
					else{
						$occur_occ[] = 'yes' ;
					}
				}
				if( $occur_occ ){
					if( in_array("no", $occur_occ) ){
						$cabins_occ[] = "no";
					}
					else{
						$cabins_occ[] = "yes";
					}
				}	
			}	
			
			if($cabins_occ){
				if( in_array("yes", $cabins_occ) ){
					$special_occ = "success";
				}
				else{
					$special_occ = "fail";
				}
				$cabins_occ = '';
			}
			
			else{
					if($rfp_occ_data->occupational)
					$special_occ = "fail";
					else
					$special_occ = "success";
			}
			
				$cabins_occ = '';
				return $special_occ ;
	}
	//Completed
	
	function checknewspecialrequirements_omi_indus($vendorid,$industryid,$managerid){

		$db = & JFactory::getDBO();
		$omi_data ="SELECT * from #__cam_vendor_errors_omissions_insurance  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($omi_data);
		$vendor_omi_data = $db->loadObjectList();
		//Get RFP data
		$rfp_omi_data ="SELECT * from #__cam_master_errors_omissions WHERE masterid=".$managerid." and industryid=".$industryid; //validation to status of docs
		$db->Setquery($rfp_omi_data);
		$rfp_omi_data = $db->loadObject();
		
		
		
			for( $omi=0; $omi<count($rfp_omi_data); $omi++ ){
				
				if($rfp_omi_data->each_claim > '0'){	
					if($rfp_omi_data->each_claim <= $vendor_omi_data[$omi]->OMI_each_claim){
						$occur_omi[] = 'yes' ;
					}
					else{
						$occur_omi[] = 'no' ;
					}
				}	
				if($rfp_omi_data->aggregate_omi > '0'){	
					if($rfp_omi_data->aggregate_omi <= $vendor_omi_data[$omi]->OMI_aggregate){
						$occur_omi[] = 'yes' ;
					}
					else{
						$occur_omi[] = 'no' ;
					}
				}	
				if($rfp_omi_data->certholder_omi == 'yes'){
					if($vendor_omi_data[$omi]->OMI_cert == 'yes'){
						$occur_omi[] = 'yes' ;
					}
					else{
						$occur_omi[] = 'no' ;
					}
				}
				if($rfp_omi_data){
				if($vendor_omi_data[$omi]->OMI_end_date < date('Y-m-d') || !$vendor_omi_data[$omi]->OMI_upld_cert || $vendor_omi_data[$omi]->OMI_status == '-1' ) {
						$occur_omi[] = 'no' ;
				}
				else{
						$occur_omi[] = 'yes' ;
				}
				}
				
				/*if( $vendorid == '1767' ){
				echo "<pre>";	print_r($occur_omi); echo "</pre>";
				//echo "<pre>";	print_r($rfp_omi_data); echo "</pre>";
				}*/
		
				if($occur_omi){
					if( in_array("no", $occur_omi) ){
						$cabins_omi[] = "no";
					}
					else{
						$cabins_omi[] = "yes";
					}
				}
				$occur_omi = '';
			}	
			
				if($cabins_omi){
					if( in_array("yes", $cabins_omi) ){
						$special_omi = "success";
					}
					else{
						$special_omi = "fail";
					}
				}
				else{
					if($rfp_omi_data)
					$special_omi = "fail";
					else
					$special_omi = "success";
				}
		
				$cabins_omi = '';
				return $special_omi ;
				
			
	}
	//Completed
	
	//Function to get the company wide vendors
	
	//Function to get the rfp standards to display N/A incase of not set any standards in the first step
	function getallstandardsrfp(){
		$db = & JFactory::getDBO();
		$user =& JFactory::getUser();
		$rfp_id = JRequest::getVar('rfpid','');
		
		$rfp_w9_data ="SELECT * from #__cam_master_w9_standards_rfps  WHERE rfpid=".$rfp_id; //validation to status of docs
		$db->Setquery($rfp_w9_data);
		$rfp_w9_data = $db->loadObject();
		
		$rfp_gli_data ="SELECT * from #__cam_master_generalinsurance_standards_rfps  WHERE rfpid=".$rfp_id; //validation to status of docs
		$db->Setquery($rfp_gli_data);
		$rfp_gli_data = $db->loadObject();
		
		$rfp_aip_data ="SELECT * from #__cam_master_autoinsurance_standards_rfps  WHERE rfpid=".$rfp_id; //validation to status of docs
		$db->Setquery($rfp_aip_data);
		$rfp_aip_data = $db->loadObject();
		
		$rfp_wci_data ="SELECT * from #__cam_master_workers_standards_rfps WHERE rfpid=".$rfp_id; //validation to status of docs
		$db->Setquery($rfp_wci_data);
		$rfp_wci_data = $db->loadObject();
		
		$rfp_umb_data ="SELECT * from #__cam_master_umbrellainsurance_standards_rfps WHERE rfpid=".$rfp_id; //validation to status of docs
		$db->Setquery($rfp_umb_data);
		$rfp_umb_data = $db->loadObject();
		
		$rfp_pln_data ="SELECT * from #__cam_master_licinsurance_standards_rfps WHERE rfpid=".$rfp_id; //validation to status of docs
		$db->Setquery($rfp_pln_data);
		$rfp_pln_data = $db->loadObject();
		
		$rfp_omi_data = "SELECT * FROM #__cam_master_errors_omissions_rfps WHERE rfpid = ".$rfp_id." ";
		$db->setQuery($rfp_omi_data);
		$rfp_omi_data = $db->loadObject();

		if(!$rfp_w9_data && !$rfp_gli_data && !$rfp_aip_data && !$rfp_wci_data && !$rfp_umb_data && !$rfp_pln_data && !$rfp_omi_data ){
			$set = 'no';
		}
		else{
			$set = 'yes';
		}
		return $set ;	
	}
	//Completed
	
	//To find the manager is existing or not
	function getcheckw9inc($rfpid) 
	{
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$query = "SELECT id FROM #__cam_master_w9_standards_rfps WHERE rfpid=".$rfpid."  ";
		$db->setQuery($query);
		$id = $db->loadResult();
		return $id;
	}
	
	function savew9insurance($data)
	{
		$row = & $this->getTable('savew9insurancerfps');
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
	}
	
	//function to  get updated date in timzone
	function makedatetime($rfpid){
			$db=&JFactory::getDBO();
			$date_now = date("Y-m-d H:i");
			$datetime = explode(' ',$date_now) ;
			$strdate = strtotime($datetime[0]);
			$time_only = explode(':',$datetime[1]) ;
			$onlyhours = $time_only[0] * 3600; 
			$duetime = $strdate + $time_only[1] + $onlyhours; 
			$sql_time = "SELECT u.timezone FROM #__cam_property as u, #__cam_rfpinfo as v WHERE v.id=".$rfpid." and u.id=v.property_id "; 
			$db->setQuery($sql_time);
			$timezone = $db->loadResult();
			if( $timezone == '' || $timezone == 'est' ) 
			$duetime = $duetime ;
			else if( $timezone == 'cen' )
			$duetime = $duetime - 3600 ;
			else if( $timezone == 'mou' ) 
			$duetime = $duetime - 7200 ;
			else if( $timezone == 'pac' ) 
			$duetime = $duetime - 10800 ;
			else if( $timezone == 'ala' )  
			$duetime = $duetime - 14400 ;
			else if( $timezone == 'haw' ) 
			$duetime = $duetime - 18000 ;
			else
			$duetime = $duetime ;
			$duetime = $duetime + $time_only[1];
			$date_year = date("m-d-Y H:i", $duetime);	
			
			$final_date = explode(' ',$date_year);
			$hours = explode(':',$final_date[1]);
			$finalyear = $final_date[0].' '.$hours[0].':'.$time_only[1];
			return $finalyear;
	}
	
	//Function to check vebndor is uninvited or not
	function checkproposalstatus($rfpid, $vendorid){
		$db=&JFactory::getDBO();
		$sql_uninvite = "SELECT proposaltype FROM #__cam_vendor_proposals WHERE rfpno=".$rfpid." and proposedvendorid=".$vendorid." "; 
		$db->setQuery($sql_uninvite);
		$invitestatus = $db->loadResult();
		return $invitestatus; 
	}
	
	function resize_pimage($files,$path,$filename){
		$resized = JPATH_COMPONENT.DS.'assets'.DS.'images'.DS.'property_pictures';
		$img = $path;
		$dimensions[0]->vendor_logo_width = 438;
		$img1=$resized;
		$apath=getimagesize($img);
		$height_orig=$apath[1]; 
		$width_orig=$apath[0]; 
		$aspect_ratio = (float) $height_orig / $width_orig;
		$width =$dimensions[0]->vendor_logo_width; 
		$height = round($width * $aspect_ratio);
		$thumb =     $this->image_resize_to_max($img,$width,$height,$img1,$filename);
		$ftmp = $filename;
        $oname = $filename;
        $fname = $path;
		$sizes = getimagesize($fname);
		$width	=	$sizes[0];
        $height	=	$sizes[1];
		$extenssion = strstr($oname, ".");
		$prod_img		= $fname;
		$prod_img_thumb =  $pdf_resized.'/'.$oname;
		move_uploaded_file($ftmp, $prod_img);
		$ret = '1';
		return $ret;
	}
		 function get_thumbnail_dimensions()
	{
		$db = JFactory::getDBO();
		$sql = "SELECT vendor_logo_height,vendor_logo_width FROM #__cam_configuration";
		$db->Setquery($sql);
		$dimensions = $db->loadObjectList();
		return $dimensions;
	}

	function image_resize_to_max($uploadfile,$max_width,$max_height,$uploadDir,$file)
	{
		/******* To Get the size and MIME type of the requested image ****/
		$size		= getimagesize($uploadfile);
		$mime		= $size['mime'];
		/********** To Create the New Image from the Restricted Image ********/
		switch($mime)
		{
			case	'image/gif'		:	$src = imagecreatefromgif($uploadfile);
										break;
			case	'image/png'		:	$src = imagecreatefrompng($uploadfile);
										break;
			default					:	$src = imagecreatefromjpeg($uploadfile);
										break;
		}
		$width		= $size[0];
		$height		= $size[1];

		//for large images
		/*********** Assiging The Maximum Width & Height of Image ****/
		if($width > $max_width || $height > $max_height)
		{
			$newwidth	= $max_width;
			$newheight	= ($height/$width)*$newwidth;
		}
		else
		{
			$newwidth	= $width;
			$newheight	= $height;
		}
		$tmp	= imagecreatetruecolor($max_width,$max_height);
         $bg = imagecolorallocate ( $tmp, 255, 255, 255 );
           imagefill ( $tmp, 0, 0, $bg );
		imagecopyresampled($tmp,$src,0,0,0,0,$max_width,$max_height,$width,$height);
		$filename = $uploadDir.DS.$file;
		switch($mime)
		{
			case	'image/gif'		:	imagegif($tmp,$filename);
										break;
			case	'image/x-png'	:
			case	'image/png'		:	imagepng($tmp,$filename);
										break;
			default					:	imagejpeg($tmp,$filename,100);
										break;
		}
		imagedestroy($src);
		imagedestroy($tmp);
	}//end of function
	
	function getvendorcompanyname($vendorid){
		$db=&JFactory::getDBO();
		$vendor_company_name = "SELECT company_name FROM #__cam_vendor_company where user_id=".$vendorid." ";
		$db->Setquery($vendor_company_name);
		$vname = $db->loadResult();
		return $vname; 
	}
	function gettermsandconditions($vendorid){
			$master =	$this->getmasterfirmaccount();
			$db =& JFactory::getDBO();
			$sql_terms = "SELECT * FROM #__cam_vendor_terms where vendorid=".$vendorid." and masterid=".$master." ";
			$db->Setquery($sql_terms);
			$terms_data = $db->loadObject();
			
			if( $terms_data->accepted == '1' || $terms_data->accepted == '0' ){
			if( !$terms_data->firstname || !$terms_data->lastname || !$terms_data->update_date ){
				$sql_unme = "SELECT name, lastname FROM #__users where id=".$vendorid." ";
				$db->Setquery($sql_unme);
				$name_vendor = $db->loadObject();
				$firstname = $name_vendor->name ;
				$lastname = $name_vendor->lastname ;
				$datef = '2015-06-22 13:00:00';
			}
			else{
				$firstname = $terms_data->firstname ;
				$lastname = $terms_data->lastname ;
				$datef = $terms_data->update_date;
			}
			
			$date = explode(' ',$datef);
			$date_mdy = explode('-',$date[0]);
			$time = date("h:i A", strtotime($date[1]));
			
			if( $terms_data->accepted == '1' )
			$result = "Terms & Conditions: <font color='#77b800'>Accepted</font> on ".$date_mdy[1]."/".$date_mdy[2]."/".$date_mdy[0]." at ".$time." by ".$firstname."&nbsp;".$lastname."";
			else
			$result = "Terms & Conditions: <font color='red'>Declined</font> on ".$date_mdy[1]."/".$date_mdy[2]."/".$date_mdy[0]." at ".$time." by ".$firstname."&nbsp;".$lastname."";
			}
			else{
				$result = "Terms & Conditions: <font color='red'>Unread</font>";
			
			}
			
			return $result;
		}
	
	function getrfpindustryname($rfpid){
		$db=&JFactory::getDBO();
		$rfp_industry = "SELECT i.industry_name FROM #__cam_industries as i, #__cam_rfpinfo as r where r.id=".$rfpid." and i.id=r.industry_id ";
		$db->Setquery($rfp_industry);
		$industry = $db->loadResult();
		return $industry; 
	}	
		//Function to get all properties
	
	function getallproperties(){
	$user =& JFactory::getUser();
	$db=&JFactory::getDBO();
			if($user->user_type == 13 && $user->accounttype != 'master') {
			$totalmanagers = $this->gettotalmanagersofcamfirm();
			$whereas[] = "U.`property_manager_id` IN (".implode( ' , ' , $totalmanagers).") ";
			}
			else if($user->dmanager == 'yes'){
			$total_mangrs = $this->gettotalmanagersofdm() ;	
			$whereas[] = "U.`property_manager_id` IN (".implode( ' , ' , $total_mangrs).") ";
			}
			else if($user->user_type ==13 && $user->accounttype == 'master')
			{
			$total_mangrs = $this->getmastermanagers() ;
			$whereas[] = "U.`property_manager_id` IN (".implode( ' , ' , $total_mangrs).") ";
			}
			else{
			$whereas[] = "U.`property_manager_id` IN (".$user->id.") ";
			}
			$query = "SELECT U.*, V.salutation,V.name,V.lastname FROM #__cam_property as U, #__users as V where U.`property_manager_id` = V.`id` and publish!=1  "; 
			if($whereas) {
				$query .= " AND ".implode( ' AND ', $whereas )."   ".$sorting." ";
			}		
			$query = $query . ' order by U.property_name ASC' ;
		$db->Setquery($query);
		$properties = $db->loadObjectList();
		
		return $properties;
 
	}
	//Completed
	
		function gettotalmanagersofcamfirm(){
	$db = JFactory::getDBO();
	$user = JFactory::getUser();
	$query = "SELECT id FROM #__cam_camfirminfo WHERE cust_id=".$user->id;
	$db->setQuery($query);
	$comp_id = $db->loadResult();
	$userid=array($user->id);
	$query_mans = "SELECT cust_id from #__cam_customer_companyinfo where comp_id = ".$comp_id." ";
	$db->setQuery($query_mans);
    $Managers_list = $db->loadObjectList();
	
	foreach( $Managers_list as $cf_mans)
		{
			$total_mangrs[] = $cf_mans->cust_id ;
		}
	if($total_mangrs){
		$totalcust_id1 = array_merge($userid,$total_mangrs); 
	}
	else{
		$totalcust_id1[] = $user->id; 
	}

	return $totalcust_id1; 	
	}
	
	function gettotalmanagersofdm(){
	$db = JFactory::getDBO();
	$user = JFactory::getUser();
	$dmmanagers = "SELECT DISTINCT managerid FROM #__cam_invitemanagers WHERE dmanager=".$user->id;
	$db->setQuery($dmmanagers);
	$dm_managers = $db->loadObjectlist();
		for($i=0; $i<count($dm_managers);$i++){
			$query = "SELECT id from #__users where id='".$dm_managers[$i]->managerid."' and block=0 " ;
			$db->setQuery($query);
			$total_mangrs[]=$db->loadResult();
			}
			/*if($Managers_list){
	foreach( $Managers_list as $cf_mans)
		{
			$total_mangrs[] = $cf_mans->id ;
		}
		}*/
	$userid=array($user->id);		
	if($total_mangrs){
		$totalcust_id1 = array_merge($userid,$total_mangrs); 
	}
	else{
		$totalcust_id1[] = $user->id; 
	}
	 return $totalcust_id1; 		
	}
	
	function getmastermanagers(){
			$user =& JFactory::getUser();
			$db=&JFactory::getDBO();
			$sql1 = "SELECT firmid from #__cam_masteraccounts where masterid=".$user->id." ";
			$db->Setquery($sql1);
			$subfirms = $db->loadObjectlist();
			
	if($subfirms)
		{
			for( $a=0; $a<count($subfirms); $a++ )
				{
					$firmid1[] = $subfirms[$a]->firmid;
					$sql = "SELECT id from #__cam_camfirminfo where cust_id=".$subfirms[$a]->firmid." ";
					$db->Setquery($sql);
					$companyid[] = $db->loadResult();
											
				}
				
        }
			
	if($companyid)
		{
         	for( $c=0; $c<count($companyid); $c++ )
				{
					$sql_cid = "SELECT cust_id from #__cam_customer_companyinfo where comp_id=".$companyid[$c]." ";
					$db->Setquery($sql_cid);
					$managerids = $db->loadObjectList();
						if($managerids) {
							foreach( $managerids as $last_mans){
								$total_mangrs[] = $last_mans->cust_id ;
							}
						}
               }
        }
	
	if($firmid1 && $total_mangrs )
		{
            $total_mangrs = array_merge($total_mangrs,$firmid1); 
        }
        if($firmid1){
            for( $d=0; $d<count($firmid1); $d++ ){
        $query = "SELECT id FROM #__cam_camfirminfo WHERE cust_id=".$firmid1[$d];
	$db->setQuery($query);
	$comp_id = $db->loadResult();
	$userid=array($user->id);
	$query_mans = "SELECT cust_id from #__cam_customer_companyinfo where comp_id = ".$comp_id." ";
	$db->setQuery($query_mans);
        $Managers_list1 = $db->loadObjectList();
                if($Managers_list1) {
                        foreach( $Managers_list1 as $Managers_list2){
                                $Managers_list[] = $Managers_list2->cust_id ;
                        }
                }
            }
            if($Managers_list){
        $total_mangrs = array_merge($Managers_list,$firmid1);
            } else {
         $total_mangrs = $firmid1;        
            }
        }
	/*if($firmid1){
            $total_mangrs = $firmid1;
        }
         */
        $userid=array($user->id);
        if($total_mangrs){
        $total_mangrs = array_merge($userid,$total_mangrs); 
		}
		else{
		$total_mangrs[] = $user->id; 
		}
		 
		return $total_mangrs;
	}
	
	//Function to update rfp type
	function updaterfptype($rfpid,$rfptype){
		$db=&JFactory::getDBO();
		$sql = "UPDATE #__cam_rfpinfo SET create_rfptype='".$rfptype."' where id = ".$rfpid." ";  
		$db->SetQuery($sql);
		return $db->query();
	}
	//Function to get proposal id to inlcue the link in the new job invitation
	function getproposal($rfpid,$vendorid){
		$db=&JFactory::getDBO();
		$query_mans = "SELECT id from #__cam_vendor_proposals where rfpno = ".$rfpid." and proposedvendorid=".$vendorid." ";
		$db->setQuery($query_mans);
        $proposalid = $db->loadResult();
		return $proposalid;
	}
 
  
       function getpropertyowneryinfo()
          {
			$db =& JFactory::getDBO();
			$user =& JFactory::getUser();
			$userinfo = "SELECT steetaddress,city,state,zipcode,altemail,fax from #__cam_propertyowner_info where user_id='".$user->id."'";
			$db->setQuery($userinfo);
			$properyownerinfo = $db->loadObject();
			return $properyownerinfo;

          }
		  
	function linkedmanagerids(){
		$db =& JFactory::getDBO();
		$user=JFactory::getUser();
		$query  = "SELECT user_id FROM  #__cam_propertyowner_link where propertyowner_id ='".$user->id."' AND link_value=1 AND vendors_p='1'" ;
		$db->setQuery($query);
		$manager_id = $db->loadObjectList();
		
          return $manager_id;
	          }
   

}
?>
