<?php
/**
 * @version		1.0.0 cam assistant $
 * @package		cam_assistant
 * @copyright	Copyright Â© 2010 - All rights reserved.
 * @license		GNU/GPL
 * @author		
 * @author mail	nobody@nobody.com
 *
 *
 * @MVC architecture generated by MVC generator tool at http://www.alphaplug.com
 */

defined('_JEXEC') or die('Restricted access');

jimport( 'joomla.application.component.model' );
class camassistantModelInvitations extends Jmodel
{
	function __construct(){
		parent::__construct();

	}
	



}
class invitationsModelInvitations extends Jmodel
{
function __construct()
	{
		parent::__construct();
 
}
	function getPending(){
        $property = array(); 
		$db =& JFactory::getDBO();
		$user =& JFactory::getUser();
        $user_id = $user->get('email');
		//$query = "SELECT V.userid, V.fei, V.invitedate, V.vendortype, V.status, U.comp_state, U.comp_name, U.comp_city, W.name,W.lastname, W.email	from #__vendor_inviteinfo as V, #__cam_customer_companyinfo  as U, #__users as W where W.id=V.userid and V.userid =U.cust_id and V.vendortype !='exclude' and V.inhousevendors ='".$user_id."' group by U.comp_name having count(*)>=1";
		
		$query = "SELECT U.id as userid, U.name, U.lastname, V.comp_name, V.cust_id from #__users as U 
		LEFT JOIN #__cam_customer_companyinfo as V on U.id=V.cust_id
		where U.user_type='13' and U.accounttype='master' and U.search='' ";
		
		$db->setQuery($query);
        $pending=$db->loadObjectList();
		//To get vendor counties
		$vendor_counties = $this->getvendorcounties();
		//echo "<pre>"; print_r($vendor_counties); echo "</pre>";
		for( $q=0; $q<count($pending); $q++ ){
				//get master property counties
				$property_counties = $this->getpropertycounties($pending[$q]->userid);
				if( $vendor_counties && $property_counties ){
					$result = array_intersect($vendor_counties,$property_counties);	
					if( $result )
						$pending[$q]->counties_match = 'yes';
					else
						$pending[$q]->counties_match = 'no';	
				}	
				else{
					$pending[$q]->counties_match = 'no';				
				}
				$query = "SELECT permission from #__cam_master_email_compliance_status where masterid=".$pending[$q]->userid." ";
				$db->setQuery($query);
       			$permission = $db->loadResult();
				if($permission == 'yes'){
				$pending[$q]->permission = 'yes';
				}
				else{
				$pending[$q]->permission = '';
				}
		}
	
		//To check the vendor compliance documents
		for( $p=0; $p<count($pending); $p++ ){
			//if($pending[$p]->userid == '968'){
			$master =	$this->checkcompliancestatus($pending[$p]->userid);
			$pending[$p]->cstatus = $master ;
			//}
		}
		//echo "<pre>"; print_r($pending); echo "</pre>";	
		for( $s=0; $s<count($pending); $s++ ){
		$only_state = $pending[$s]->cstatus ;
					if($only_state){
						foreach($only_state as $statues){
							$final_state[] = $statues->status;
								if(in_array('fail',$final_state)){
									$pending[$s]->final_status = 'fail' ;
								}
								else{
								
									$count_no = count(array_unique($final_state)); 
									if($count_no == 1 && $final_state[0] == 'no'){
									$pending[$s]->final_status = 'no' ;
									}
									else{
									$pending[$s]->final_status = 'success' ;
									$masteraccount = $this->getmasterfirmaccount($pending[$s]->userid);
									$sql_terms = "SELECT termsconditions FROM #__cam_vendor_aboutus WHERE vendorid=".$masteraccount." "; 
									$db->setQuery($sql_terms);
									$terms_exist = $db->loadResult();
									if($terms_exist == '1'){
									$sql = "SELECT accepted FROM #__cam_vendor_terms WHERE vendorid=".$user->id." and masterid=".$masteraccount." "; 
									$db->setQuery($sql);
									$terms = $db->loadResult();
										if($terms == '1'){
										$pending[$s]->final_status = 'success' ;
										}
										else{
										$pending[$s]->final_status = 'fail' ;
										}
									}
			
									}
								}
						} 
						$final_state = '';
						//echo "<pre>"; print_r($final_state); echo "</pre>";	
					}
			
		}
		
		for( $t=0; $t<count($pending); $t++ ){
				$master =	$this->getmasterfirmaccount($pending[$t]->userid);
				$sql = "SELECT accepted FROM #__cam_vendor_terms WHERE vendorid=".$user->id." and masterid=".$master." ";
				$db->setQuery($sql);
				$terms = $db->loadResult();
				if(!$terms){
					$pending[$t]->terms = 'no' ;
				}
				if($terms == '1'){
					$pending[$t]->terms = 'acc' ;
				}
				else if($terms == '0'){
					$pending[$t]->terms = 'dec' ;
				}
				
				$sql_checked = "SELECT termsconditions FROM #__cam_vendor_aboutus WHERE vendorid=".$master." ";
				$db->setQuery($sql_checked);
				$terms_accept = $db->loadResult();
				$pending[$t]->terms_need = $terms_accept ;
				$pending[$t]->masterid = $master ;
				
		}
		
				
		//echo "<pre>"; print_r($pending); echo "</pre>";
		//Completed
		return $pending;
}
	//Function to get master property counties
	function getpropertycounties($masterid){
		$db=&JFactory::getDBO();
		$total_mangrs = $this->getmastermanagers($masterid) ;
		$whereas[] = "U.`property_manager_id` IN (".implode( ' , ' , $total_mangrs).") ";
		$query = "SELECT DISTINCT(U.divcounty) FROM #__cam_property as U, #__users as V where U.`property_manager_id` = V.`id` and publish!=1 "; 
			if($whereas) {
				$query .= " AND ".implode( ' AND ', $whereas )."   ".$sorting." ";
			}
		$db->Setquery($query);
		$counties_property = $db->loadResultArray();	
		return $counties_property;
	}
	//Function to get vebndor counties
	function getvendorcounties(){
		$user = JFactory::getUser();
		$db = JFactory::getDBO();
		$sql_counties = "SELECT U.county_id, W.County, U.state_id FROM #__vendor_state_counties  as U, #__cam_vendor_company as V, #__cam_counties as W   WHERE V.user_id=".$user->id." AND V.user_id=U.user_id AND W.id=U.county_id GROUP BY U.county_id HAVING COUNT(*)>0 ORDER BY W.County";	
		$db->setQuery($sql_counties);
		$counties_results = $db->loadResultArray();
		return $counties_results;
		
	}
	//Completed
	function getmastermanagers($masterid){
			$user =& JFactory::getUser($masterid);
			$db=&JFactory::getDBO();
			$sql1 = "SELECT firmid from #__cam_masteraccounts where masterid=".$user->id." ";
			$db->Setquery($sql1);
			$subfirms = $db->loadObjectlist();
			
	if($subfirms)
		{
			for( $a=0; $a<count($subfirms); $a++ )
				{
					$firmid1[] = $subfirms[$a]->firmid;
					$sql = "SELECT id from #__cam_camfirminfo where cust_id=".$subfirms[$a]->firmid." ";
					$db->Setquery($sql);
					$companyid[] = $db->loadResult();
											
				}
				
        }
			
	if($companyid)
		{
         	for( $c=0; $c<count($companyid); $c++ )
				{
					$sql_cid = "SELECT cust_id from #__cam_customer_companyinfo where comp_id=".$companyid[$c]." ";
					$db->Setquery($sql_cid);
					$managerids = $db->loadObjectList();
						if($managerids) {
							foreach( $managerids as $last_mans){
								$total_mangrs[] = $last_mans->cust_id ;
							}
						}
               }
        }
	
	if($firmid1 && $total_mangrs )
		{
            $total_mangrs = array_merge($total_mangrs,$firmid1); 
        }
        if($firmid1){
            for( $d=0; $d<count($firmid1); $d++ ){
        $query = "SELECT id FROM #__cam_camfirminfo WHERE cust_id=".$firmid1[$d];
	$db->setQuery($query);
	$comp_id = $db->loadResult();
	$userid=array($user->id);
	$query_mans = "SELECT cust_id from #__cam_customer_companyinfo where comp_id = ".$comp_id." ";
	$db->setQuery($query_mans);
        $Managers_list1 = $db->loadObjectList();
                if($Managers_list1) {
                        foreach( $Managers_list1 as $Managers_list2){
                                $Managers_list[] = $Managers_list2->cust_id ;
                        }
                }
            }
            if($Managers_list){
        $total_mangrs = array_merge($Managers_list,$firmid1);
            } else {
         $total_mangrs = $firmid1;        
            }
        }
	/*if($firmid1){
            $total_mangrs = $firmid1;
        }
         */
        $userid=array($user->id);
        if($total_mangrs){
        $total_mangrs = array_merge($userid,$total_mangrs); 
		}
		else{
		$total_mangrs[] = $user->id; 
		}
		 
		return $total_mangrs;
	}
//completed
function getmasterPending(){ 
        $property = array(); 
		$db =& JFactory::getDBO();
		$user =& JFactory::getUser();
        $user_id = $user->get('email'); //W.accounttype='master'
		$query = "SELECT U.*, V.*, W.* from #__cam_customer_companyinfo  as U, #__users as W, #__cam_vendor_aboutus as V  where V.vendorid= W.id and U.cust_id=W.id and V.termsconditions!='' and W.accounttype='master' and W.user_type='13' and W.search='' group by U.comp_name having count(*)>=1";
		$db->setQuery($query);
        $masterPending=$db->loadObjectList();
      //  echo '<pre>'; print_r($masterPending);
	  //To get vendor counties
		$vendor_counties = $this->getvendorcounties();
		//echo "<pre>"; print_r($vendor_counties); echo "</pre>";
		//To check the vendor compliance documents
		for( $p=0; $p<count($masterPending); $p++ ){
			//get master property counties
				$property_counties = $this->getpropertycounties($masterPending[$p]->id);
				//echo "<pre>"; print_r($property_counties); echo "</pre>";
				if( $vendor_counties && $property_counties ){
					$result = array_intersect($vendor_counties,$property_counties);	
					if( $result )
						$masterPending[$p]->counties_match = 'yes';
					else
						$masterPending[$p]->counties_match = 'no';	
				}	
				else{
					$masterPending[$p]->counties_match = 'no';				
				}
				
			$master =	$this->checkcompliancestatus($masterPending[$p]->cust_id);
			$masterPending[$p]->cstatus = $master ;
			
		}
		
		
		
		for( $t=0; $t<count($masterPending); $t++ ){
				$master =	$this->getmasterfirmaccount($masterPending[$t]->cust_id);
				$sql = "SELECT accepted FROM #__cam_vendor_terms WHERE masterid=".$masterPending[$t]->cust_id." and vendorid=".$user->id." ";
				$db->setQuery($sql);
				$terms = $db->loadResult();
				if(!$terms){
					$masterPending[$t]->terms = 'no' ;
				}
				if($terms == '1'){
					$masterPending[$t]->terms = 'acc' ;
				}
				else if($terms == '0'){
					$masterPending[$t]->terms = 'dec' ;
				}
		}
		//echo "<pre>"; print_r($masterPending); echo "</pre>";
		
		
		//exit;
		//Completed
		return $masterPending;
}


	function getpreferredmanagers(){
        $property = array(); 
		$db =& JFactory::getDBO();
		$user =& JFactory::getUser();
        $user_id = $user->get('email');
	
	$sort = JRequest::getVar('sort','');
	if($sort == 'asc' || $sort == ''){
		$sorting = 'order by U.comp_name ASC';
	}
	else{
		$sorting = 'order by U.comp_name DESC';
	}
	
		$query = "SELECT V.userid, V.fei, V.invitedate, V.vendortype, V.status, U.comp_state, U.comp_name, U.comp_city, W.name,W.lastname from #__vendor_inviteinfo as V, #__cam_customer_companyinfo  as U, #__users as W where W.id=V.userid and V.userid =U.cust_id and V.vendortype !='exclude' and V.inhousevendors ='".$user_id."'  ".$sorting." ";
		
		
		$db->setQuery($query);
        $pending=$db->loadObjectList();
		
		for( $q=0; $q<count($pending); $q++ ){
				$query = "SELECT permission from #__cam_master_email_compliance_status where masterid=".$pending[$q]->userid." ";
				$db->setQuery($query);
       			$permission = $db->loadResult();
				if($permission == 'yes'){
				$pending[$q]->permission = 'yes';
				}
				else{
				$pending[$q]->permission = '';
				}
		}
	
		//To check the vendor compliance documents
		for( $p=0; $p<count($pending); $p++ ){
			//if($pending[$p]->userid == '968'){
			$master =	$this->checkcompliancestatus($pending[$p]->userid);
			$pending[$p]->cstatus = $master ;
			//}
		}
		//echo "<pre>"; print_r($pending); echo "</pre>";	
		for( $s=0; $s<count($pending); $s++ ){
		$only_state = $pending[$s]->cstatus ;
					if($only_state){
						foreach($only_state as $statues){
							$final_state[] = $statues->status;
								if(in_array('fail',$final_state)){
									$pending[$s]->final_status = 'fail' ;
								}
								else{
								
									$count_no = count(array_unique($final_state)); 
									if($count_no == 1 && $final_state[0] == 'no'){
									$pending[$s]->final_status = 'no' ;
									}
									else{
									$pending[$s]->final_status = 'success' ;
									$masteraccount = $this->getmasterfirmaccount($pending[$s]->userid);
									$sql_terms = "SELECT termsconditions FROM #__cam_vendor_aboutus WHERE vendorid=".$masteraccount." "; 
									$db->setQuery($sql_terms);
									$terms_exist = $db->loadResult();
									if($terms_exist == '1'){
									$sql = "SELECT accepted FROM #__cam_vendor_terms WHERE vendorid=".$user->id." and masterid=".$masteraccount." "; 
									$db->setQuery($sql);
									$terms = $db->loadResult();
										if($terms == '1'){
										$pending[$s]->final_status = 'success' ;
										}
										else{
										$pending[$s]->final_status = 'fail' ;
										}
									}
			
									}
								}
						} 
						$final_state = '';
						//echo "<pre>"; print_r($final_state); echo "</pre>";	
					}
			
		}
		
		for( $t=0; $t<count($pending); $t++ ){
				$master =	$this->getmasterfirmaccount($pending[$t]->userid);
				$sql = "SELECT accepted FROM #__cam_vendor_terms WHERE vendorid=".$user->id." and masterid=".$master." ";
				$db->setQuery($sql);
				$terms = $db->loadResult();
				if(!$terms){
					$pending[$t]->terms = 'no' ;
				}
				if($terms == '1'){
					$pending[$t]->terms = 'acc' ;
				}
				else if($terms == '0'){
					$pending[$t]->terms = 'dec' ;
				}
		}
		
				
		
		//Completed
		return $pending;
}

	function checkcompliancestatus($managerid){
		$db=&JFactory::getDBO();
		$user =& JFactory::getUser();
		$master =	$this->getmasterfirmaccount($managerid);
		$vendorindustrieslist = $this->vendorallindustries();
			for( $vi=0; $vi<count($vendorindustrieslist); $vi++ )
				{
					$totalprefers_new_w9	=	$this->checknewspecialrequirements_w9($user->id,$vendorindustrieslist[$vi]->value,$master);
					$totalprefers_new_gli	=	$this->checknewspecialrequirements_gli($user->id,$vendorindustrieslist[$vi]->value,$master);
					$totalprefers_new_aip	=	$this->checknewspecialrequirements_aip($user->id,$vendorindustrieslist[$vi]->value,$master);
					$totalprefers_new_wci	=	$this->checknewspecialrequirements_wci($user->id,$vendorindustrieslist[$vi]->value,$master);
					$totalprefers_new_umb	=	$this->checknewspecialrequirements_umb($user->id,$vendorindustrieslist[$vi]->value,$master);
					$totalprefers_new_pln	=	$this->checknewspecialrequirements_pln($user->id,$vendorindustrieslist[$vi]->value,$master);
					$totalprefers_new_occ	=	$this->checknewspecialrequirements_occ($user->id,$vendorindustrieslist[$vi]->value,$master);
					
					/*if($master == '1991'){
					echo "GLI".$totalprefers_new_gli ;
					echo "AIP".$totalprefers_new_aip ;
					echo "WCI".$totalprefers_new_wci ;
					echo "UMB".$totalprefers_new_umb ;
					echo "PLN".$totalprefers_new_pln ;
					echo "OCC:".$totalprefers_new_occ;
					}*/
				$vendorindustrieslist[$vi]->status = '' ;
						/*if($totalprefers_new_gli == 'success' && $totalprefers_new_aip == 'success' && $totalprefers_new_wci == 'success' && $totalprefers_new_umb == 'success' && $totalprefers_new_pln == 'success' ){
							$vendorindustrieslist[$vi]->status = 'success' ;
						}
						else if($totalprefers_new_gli == 'no' && $totalprefers_new_aip == 'no' && $totalprefers_new_wci == 'no' && $totalprefers_new_umb == 'no' && $totalprefers_new_pln == 'no'){
							$vendorindustrieslist[$vi]->status = 'no' ;
						}
						else{
							$vendorindustrieslist[$vi]->status = 'fail' ;
						}*/
						
if($totalprefers_new_w9 == 'fail' || $totalprefers_new_gli == 'fail' || $totalprefers_new_aip == 'fail' || $totalprefers_new_wci == 'fail' || $totalprefers_new_umb == 'fail' || $totalprefers_new_pln == 'fail' || $totalprefers_new_occ == 'fail' ){
							$vendorindustrieslist[$vi]->status = 'fail' ;
						}
else if($totalprefers_new_w9 == 'no' && $totalprefers_new_gli == 'no' && $totalprefers_new_aip == 'no' && $totalprefers_new_wci == 'no' && $totalprefers_new_umb == 'no' && $totalprefers_new_pln == 'no' && $totalprefers_new_occ == 'no'){
							$vendorindustrieslist[$vi]->status = 'no' ;
						}
						else{
							$vendorindustrieslist[$vi]->status = 'success' ;
						}
						
						
		
				}	
				//echo "<pre>"; print_r($vendorindustrieslist); echo "</pre>";		
		return  $vendorindustrieslist;
	}
	
	function checknewspecialrequirements_w9($vendorid,$industryid,$managerid){
		$totalprefers_new_w9 = '';
		$db = & JFactory::getDBO();
		$w9_data ="SELECT * from #__cam_vendor_compliance_w9docs WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($w9_data);
		$vendor_w9_data = $db->loadObjectList();
		//Get RFP data
		$rfp_w9_data ="SELECT * from #__cam_master_w9_standards WHERE masterid=".$managerid." and industry_id=".$industryid; 
		$db->Setquery( $rfp_w9_data );
		$rfp_w9_data = $db->loadObject();
		
		$occur_w9 = '';
			if($rfp_w9_data){
					if( !$vendor_w9_data[0]->w9_upld_cert || $vendor_w9_data[0]->w9_status == '-1') {
						$occur_w9[] = 'no' ;
					}
					else{
						$occur_w9[] = 'yes' ;
					}
				}
		
				
			if($occur_w9){
				if( in_array("no", $occur_w9) ){
				$cabins_w9[] = "no";
				}
				else{
				$cabins_w9[] = "yes";
				}
			}
				
		
			if($cabins_w9){
					if( in_array("yes", $cabins_w9) ){
					$special_w9 = "success";
					}
					else{
					$special_w9 = "fail";
					}
			
			}
			
			else{
					if($rfp_w9_data)
					$special_w9 = "fail";
					else
					$special_w9 = "success";
			}
			
				
			$cabins_w9 = '';
			return $special_w9 ;
			
	 }
	 
	//Function to check new special requirements
	function checknewspecialrequirements_gli($vendorid,$industryid,$managerid){
		//echo $vendorid.'<br />';
		//echo $industryid.'<br />';
		//echo $managerid.'<br /><br />';
		$totalprefers_new_gli = '';
		$db = & JFactory::getDBO();
		$gli_data ="SELECT * from #__cam_vendor_liability_insurence  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($gli_data);
		$vendor_gli_data = $db->loadObjectList();
		//Get RFP data
		$rfp_gli_data ="SELECT * from #__cam_master_generalinsurance_standards WHERE masterid=".$managerid." and industry_id=".$industryid; //validation to status of docs
		$db->Setquery($rfp_gli_data);
		$rfp_gli_data = $db->loadObject();
		//echo "<br />";
		//echo "<pre>"; print_r($vendor_gli_data); echo "</pre>";
		//echo "<pre>"; print_r($rfp_gli_data); echo "</pre>";
		
		$occur = '';
		for( $gl=0; $gl<count($vendor_gli_data); $gl++ ){
			if($rfp_gli_data->occur ==  'yes'){
				if( $vendor_gli_data[$gl]->GLI_occur == 'occur' ){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			
			if($rfp_gli_data->each_occurrence >  '0'){
				if($rfp_gli_data->each_occurrence <= $vendor_gli_data[$gl]->GLI_policy_occurence){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->damage_retend > '0'){
				if($rfp_gli_data->damage_retend <= $vendor_gli_data[$gl]->GLI_damage){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->med_expenses > '0'){
				if($rfp_gli_data->med_expenses <= $vendor_gli_data[$gl]->GLI_med){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}	
			if($rfp_gli_data->personal_inj > '0'){
				if($rfp_gli_data->personal_inj <= $vendor_gli_data[$gl]->GLI_injury){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->general_aggr > '0'){	
				if($rfp_gli_data->general_aggr <= $vendor_gli_data[$gl]->GLI_policy_aggregate){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}

			if($rfp_gli_data->applies_to == 'pol'){
				if($vendor_gli_data[$gl]->GLI_applies == 'pol'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->applies_to == 'proj'){
				if($vendor_gli_data[$gl]->GLI_applies == 'proj'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->applies_to == 'loc'){
				if($vendor_gli_data[$gl]->GLI_applies == 'loc'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->products_aggr >  '0'){
				if($rfp_gli_data->products_aggr <= $vendor_gli_data[$gl]->GLI_products){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}	
			if($rfp_gli_data->waiver_sub == 'yes') {
				if($vendor_gli_data[$gl]->GLI_waiver == 'waiver'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->primary_noncontr == 'yes') {
				if($vendor_gli_data[$gl]->GLI_primary == 'primary'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->additional_insured == 'yes') {
				if($vendor_gli_data[$gl]->GLI_additional){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->cert_holder == 'yes') {
				if($vendor_gli_data[$gl]->GLI_certholder == 'yes'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
				if($rfp_gli_data){
					if($vendor_gli_data[$gl]->GLI_end_date < date('Y-m-d') || !$vendor_gli_data[$gl]->GLI_upld_cert || !$vendor_gli_data[$gl]->GLI_policy_occurence || !$vendor_gli_data[$gl]->GLI_policy_aggregate || $vendor_gli_data[$gl]->GLI_status == '-1') {
						$occur[] = 'no' ;
					}
					else{
						$occur[] = 'yes' ;
					}
				}
		
			if($occur){
				if( in_array("no", $occur) ){
				$cabins_gli[] = "no";
				}
				else{
				$cabins_gli[] = "yes";
				}
			}
			$occur = '';
		}
		
		if($cabins_gli){
			if( in_array("yes", $cabins_gli) ){
			$special = "success";
			}
			else{
			$special = "fail";
			}
			
		}
		else{
				if($rfp_gli_data)
				$special = "fail";
				else
				$special = "success";
		}
			
		$cabins_gli = '';
			if(!$rfp_gli_data){
				$special = "no";
			}
		return $special ;
		
	}
//Completed
function checknewspecialrequirements_aip($vendorid,$industryid,$managerid){
		$db = & JFactory::getDBO();
		$aip_data ="SELECT * from #__cam_vendor_auto_insurance  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($aip_data);
		$vendor_aip_data = $db->loadObjectList();
		//Get RFP data
		$rfp_aip_data ="SELECT * from #__cam_master_autoinsurance_standards WHERE masterid=".$managerid." and industryid=".$industryid; //validation to status of docs
		$db->Setquery($rfp_aip_data);
		$rfp_aip_data = $db->loadObject();
		
			for( $ai=0; $ai<count($vendor_aip_data); $ai++ ){
				if($rfp_aip_data->applies_to_any == 'any'){
					if($rfp_aip_data->applies_to_any == $vendor_aip_data[$ai]->aip_applies_any){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}

				if($rfp_aip_data->applies_to_owned == 'owned'){
					if($rfp_aip_data->applies_to_owned == $vendor_aip_data[$ai]->aip_applies_owned){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}

				if($rfp_aip_data->applies_to_nonowned == 'nonowned'){
					if($rfp_aip_data->applies_to_nonowned == $vendor_aip_data[$ai]->aip_applies_nonowned){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}

				if($rfp_aip_data->applies_to_hired == 'hired'){
					if($rfp_aip_data->applies_to_hired == $vendor_aip_data[$ai]->aip_applies_hired){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}

				if($rfp_aip_data->applies_to_scheduled == 'scheduled'){
					if($vendor_aip_data[$ai]->aip_applies_scheduled == 'sch'){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->combined_single > '0'){	
					if($rfp_aip_data->combined_single <= $vendor_aip_data[$ai]->aip_combined){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->bodily_injusy_person > '0'){	
					if($rfp_aip_data->bodily_injusy_person <= $vendor_aip_data[$ai]->aip_bodily){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->bodily_injusy_accident > '0'){	
					if($rfp_aip_data->bodily_injusy_accident <= $vendor_aip_data[$ai]->aip_body_injury){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->property_damage > '0'){	
					if($rfp_aip_data->property_damage <= $vendor_aip_data[$ai]->aip_property){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->waiver == 'yes'){
					if($vendor_aip_data[$ai]->aip_waiver == 'waiver'){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->primary == 'yes'){
					if($vendor_aip_data[$ai]->aip_primary == 'primary'){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->additional_ins == 'yes'){
					if($vendor_aip_data[$ai]->aip_addition){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->cert_holder == 'yes'){
					if($vendor_aip_data[$ai]->aip_cert == 'yes'){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data){
					if($vendor_aip_data[$ai]->aip_end_date < date('Y-m-d') || $vendor_aip_data[$ai]->aip_upld_cert=='' || $vendor_aip_data[$ai]->aip_status == '-1' || !$vendor_aip_data[$ai]->aip_combined ) 		{
						$occur_aip[] = 'no' ;
						}
					else
						{
						$occur_aip[] = 'yes' ;
						}
				}
				if($occur_aip){
					if( in_array("no", $occur_aip) ){
						$cabins_aip[] = "no";
					}
					else{
						$cabins_aip[] = "yes";
					}
				}
				$occur_aip = '';
			}	
			if($cabins_aip){
				if( in_array("yes", $cabins_aip) ){
					$special_aip = "success";
				}
				else{
					$special_aip = "fail";
				}
			}
			else{
				if($rfp_aip_data)
				$special_aip = "fail";
				else
				$special_aip = "success";
			}
			
				$cabins_aip = '';
		
				if(!$rfp_aip_data){
				$special_aip = "no";
				}
			
		return $special_aip ;
		
		
	}
	
	//Function to check WCI documents
	function checknewspecialrequirements_wci($vendorid,$industryid,$managerid){
		
		$db = & JFactory::getDBO();
		$wci_data ="SELECT * from #__cam_vendor_workers_companies_insurance  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($wci_data);
		$vendor_wci_data = $db->loadObjectList();
		//Get RFP data
		$rfp_wci_data ="SELECT * from #__cam_master_workers_standards WHERE masterid=".$managerid." and industryid=".$industryid; //validation to status of docs
		$db->Setquery($rfp_wci_data);
		$rfp_wci_data = $db->loadObject();

			for( $wci=0; $wci<count($vendor_wci_data); $wci++ ){
				
				if($rfp_wci_data->disease_policy > '0'){	
					if($rfp_wci_data->disease_policy <= $vendor_wci_data[$wci]->WCI_disease_policy){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}	
					
				if($rfp_wci_data->disease_eachemp > '0'){
					if($rfp_wci_data->disease_eachemp <= $vendor_wci_data[$wci]->WCI_disease){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}
				
				if($rfp_wci_data->waiver_work == 'yes'){
					if($vendor_wci_data[$wci]->WCI_waiver == 'waiver'){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}
				
				if($rfp_wci_data->each_accident > '0'){
					if($rfp_wci_data->each_accident <= $vendor_wci_data[$wci]->WCI_each_accident){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}
				
				if($rfp_wci_data->certholder_work == 'yes'){
					if($vendor_wci_data[$wci]->WCI_cert == 'yes'){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}
				if($rfp_wci_data){
					if($vendor_wci_data[$wci]->WCI_end_date < date('Y-m-d') || $vendor_wci_data[$wci]->WCI_upld_cert=='' || $vendor_wci_data[$wci]->WCI_status == '-1') {
							$occur_wci[] = 'no' ;
					}
					else{
							$occur_wci[] = 'yes' ;
					}
				}	
				if($occur_wci){
					if( in_array("no", $occur_wci) ){
						$cabins_wci[] = "no";
					}
					else{
						$cabins_wci[] = "yes";
					}
				}
				$occur_wci = '';
			}
			
			if($cabins_wci){
				if( in_array("yes", $cabins_wci) ){
					$special_wci = "success";
				}
				else{
					$special_wci = "fail";
				}
			}
			else{
				if($rfp_wci_data)
				$special_wci = "fail";
				else
				$special_wci = "success";
			}
			
				$cabins_wci = '';
				if(!$rfp_wci_data){
				$special_wci = "no";
				}
				
		return $special_wci ;
	}
	
	//COmpleted
	
	//function to check umbrella liability documents
	 function checknewspecialrequirements_umb($vendorid,$industryid,$managerid){
		$db = & JFactory::getDBO();
		$umb_data ="SELECT * from #__cam_vendor_umbrella_license  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($umb_data);
		$vendor_umb_data = $db->loadObjectList();
		//Get RFP data
		$rfp_umb_data ="SELECT * from #__cam_master_umbrellainsurance_standards WHERE masterid=".$managerid." and industryid=".$industryid; //validation to status of docs
		$db->Setquery($rfp_umb_data);
		$rfp_umb_data = $db->loadObject();
		
			for( $umb=0; $umb<count($vendor_umb_data); $umb++ ){
				
				if($rfp_umb_data->each_occur > '0'){	
					if($rfp_umb_data->each_occur <= $vendor_umb_data[$umb]->UMB_occur){
						$occur_umb[] = 'yes' ;
					}
					else{
						$occur_umb[] = 'no' ;
					}
				}	
				if($rfp_umb_data->aggregate > '0'){	
					if($rfp_umb_data->aggregate <= $vendor_umb_data[$umb]->UMB_aggregate){
						$occur_umb[] = 'yes' ;
					}
					else{
						$occur_umb[] = 'no' ;
					}
				}	
				if($rfp_umb_data->certholder_umbrella == 'yes'){
					if($vendor_umb_data[$umb]->UMB_certholder == 'yes'){
						$occur_umb[] = 'yes' ;
					}
					else{
						$occur_umb[] = 'no' ;
					}
				}
				if($rfp_umb_data){
				if($vendor_umb_data[$umb]->UMB_expdate < date('Y-m-d') || !$vendor_umb_data[$umb]->UMB_upld_cert || $vendor_umb_data[$umb]->UMB_status == '-1' || !$vendor_umb_data[$umb]->UMB_aggregate || !$vendor_umb_data[$umb]->UMB_occur) {
						$occur_umb[] = 'no' ;
				}
				else{
						$occur_umb[] = 'yes' ;
				}
				}
				
				if($occur_umb){
					if( in_array("no", $occur_umb) ){
						$cabins_umb[] = "no";
					}
					else{
						$cabins_umb[] = "yes";
					}
				}
				$occur_umb = '';
			}	 
				
				if($cabins_umb){
					if( in_array("yes", $cabins_umb) ){
						$special_umb = "success";
					}
					else{
						$special_umb = "fail";
					}
				}
				else{
					if($rfp_umb_data)
					$special_umb = "fail";
					else
					$special_umb = "success";
				}
		
				$cabins_umb = '';
					if(!$rfp_umb_data){
					$special_umb = "no";
					}
				
				return $special_umb ;
	 }
	//Completed
	
	//Funcion to check professional licensw
	function checknewspecialrequirements_pln($vendorid,$industryid,$managerid){

		$db = & JFactory::getDBO();
		$pln_data ="SELECT * from #__cam_vendor_professional_license  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($pln_data);
		$vendor_pln_data = $db->loadObjectList();
		//Get RFP data
		$rfp_pln_data ="SELECT * from #__cam_master_licinsurance_standards WHERE masterid=".$managerid." and industryid=".$industryid; //validation to status of docs
		$db->Setquery($rfp_pln_data);
		$rfp_pln_data = $db->loadObject();
		
			for( $pln=0; $pln<count($vendor_pln_data); $pln++ ){
			
				if($rfp_pln_data->professional == 'yes'){
					if($vendor_pln_data[$pln]->PLN_expdate < date('Y-m-d') || !$vendor_pln_data[$pln]->PLN_upld_cert || $vendor_pln_data[$pln]->PLN_status == '-1') {
						$occur_pln[] = 'no' ;
					}
					else{
						$occur_pln[] = 'yes' ;
					}
				}
				if( $occur_pln ){
					if( in_array("no", $occur_pln) ){
						$cabins_pln[] = "no";
					}
					else{
						$cabins_pln[] = "yes";
					}
				}	
			}	
			
			if($cabins_pln){
				if( in_array("yes", $cabins_pln) ){
					$special_pln = "success";
				}
				else{
					$special_pln = "fail";
				}
				$cabins_pln = '';
			}
			
			else{
					if($rfp_pln_data->professional)
					$special_pln = "fail";
					else
					$special_pln = "success";
			}
			
				$cabins_pln = '';
				if(!$rfp_pln_data){
					$special_pln = "no";
					}
				return $special_pln ;
	}
	//Completed
	
	function checknewspecialrequirements_occ($vendorid,$industryid,$managerid){

		$db = & JFactory::getDBO();
		$occ_data ="SELECT * from #__cam_vendor_occupational_license  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($occ_data);
		$vendor_occ_data = $db->loadObjectList();
		//Get RFP data
		$rfp_occ_data ="SELECT * from #__cam_master_licinsurance_standards WHERE masterid=".$managerid." and industryid=".$industryid; //validation to status of docs
		$db->Setquery($rfp_occ_data);
		$rfp_occ_data = $db->loadObject();
		
			for( $occ=0; $occ<count($vendor_occ_data); $occ++ ){
			
				if($rfp_occ_data->occupational == 'yes'){
					if($vendor_occ_data[$occ]->OLN_expdate < date('Y-m-d') || !$vendor_occ_data[$occ]->OLN_upld_cert || $vendor_occ_data[$pln]->OLN_status == '-1') {
						$occur_occ[] = 'no' ;
					}
					else{
						$occur_occ[] = 'yes' ;
					}
				}
				if( $occur_occ ){
					if( in_array("no", $occur_occ) ){
						$cabins_occ[] = "no";
					}
					else{
						$cabins_occ[] = "yes";
					}
				}	
			}	
			
			if($cabins_occ){
				if( in_array("yes", $cabins_occ) ){
					$special_occ = "success";
				}
				else{
					$special_occ = "fail";
				}
				$cabins_occ = '';
			}
			
			else{
					if($rfp_occ_data->occupational)
					$special_occ = "fail";
					else
					$special_occ = "success";
			}
			
				$cabins_occ = '';
				
				if(!$rfp_occ_data->occupational){
					$special_occ = "no";
					}
					
				return $special_occ ;
	}
	//Completed
	
	function getw9insdata($indus,$managerid)
	{
		$db=&JFactory::getDBO();
		$master =	$this->getmasterfirmaccount($managerid);
		$query = "SELECT * FROM #__cam_master_w9_standards WHERE masterid=".$master." and industry_id=".$indus."  ";
		$db->setQuery($query);
		$data_pre = $db->loadObject();
		return $data_pre;
	}
	
	function getgeneralinsdata($indus,$managerid)
	{
		$db=&JFactory::getDBO();
		$master =	$this->getmasterfirmaccount($managerid);
		$query = "SELECT * FROM #__cam_master_generalinsurance_standards WHERE masterid=".$master." and industry_id=".$indus."  ";
		$db->setQuery($query);
		$data_pre = $db->loadObject();
		return $data_pre;
	}
	function getautoinsdata($indus,$managerid)
	{
		$db=&JFactory::getDBO();
		$master =	$this->getmasterfirmaccount($managerid);
		$query = "SELECT * FROM #__cam_master_autoinsurance_standards WHERE masterid=".$master." and industryid=".$indus."  ";
		$db->setQuery($query);
		$data_auto = $db->loadObject();
		return $data_auto;
	}
	function getworkinsdata($indus,$managerid)
	{
		$db=&JFactory::getDBO();
		$master =	$this->getmasterfirmaccount($managerid);
		$query = "SELECT * FROM #__cam_master_workers_standards WHERE masterid=".$master." and industryid=".$indus."  ";
		$db->setQuery($query);
		$data_work = $db->loadObject();
		return $data_work;
	}
	function getumbrellainsdata($indus,$managerid) 
	{
		$db=&JFactory::getDBO();
		$master =	$this->getmasterfirmaccount($managerid);
		$query = "SELECT * FROM #__cam_master_umbrellainsurance_standards WHERE masterid=".$master." and industryid=".$indus."  ";
		$db->setQuery($query);
		$data_umbrella = $db->loadObject();
		return $data_umbrella;
	}
	function getlicinsdata($indus,$managerid) 
	{
		$db=&JFactory::getDBO();
		$master =	$this->getmasterfirmaccount($managerid);
		$query = "SELECT * FROM #__cam_master_licinsurance_standards WHERE masterid=".$master." and industryid=".$indus."  ";
		$db->setQuery($query);
		$data_lic = $db->loadObject();
		return $data_lic;
	}
	function getomiinsdata($indus,$managerid) 
	{
		$db=&JFactory::getDBO();
		$master =	$this->getmasterfirmaccount($managerid);
		$query = "SELECT * FROM #__cam_master_errors_omissions WHERE masterid=".$master." and industryid=".$indus."  ";
		$db->setQuery($query);
		$data_omi = $db->loadObject();
		return $data_omi;
	}
	function allindustries(){
	 	$db=&JFactory::getDBO();
		$query = "SELECT id as value,industry_name as text FROM #__cam_industries where published ='1' ORDER BY industry_name ASC";
		$db->setQuery($query);
		$industryList = $db->loadObjectList();
		return $industryList;
	 }
	 function vendorallindustries(){
	 	$db=&JFactory::getDBO();
		$user =& JFactory::getUser();
		$query = "SELECT U.industry_id as value, V.industry_name FROM #__cam_vendor_industries as U, #__cam_industries as V where U.industry_id=V.id and U.user_id = ".$user->id." ";
		$db->setQuery($query);
		$industryList = $db->loadObjectList();
		return $industryList;
	 }
	 //Function to get master firm userid when manager, firm, district manager loggedin
	function getmasterfirmaccount($manager){
	$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$query_user = "SELECT user_type,accounttype FROM #__users WHERE id=".$manager." ";
		$db->setQuery($query_user);
		$user_data = $db->loadObject();
		$user_type = $user_data->user_type ;
		$accounttype = $user_data->accounttype;		
		
			if($user_type == '12'){
				$query_c = "SELECT comp_id FROM #__cam_customer_companyinfo WHERE cust_id=".$manager." ";
				$db->setQuery($query_c);
				$cid = $db->loadResult();	
				$camfirmid = "SELECT cust_id FROM #__cam_camfirminfo WHERE id=".$cid." ";
				$db->setQuery($camfirmid);
				$camfirm = $db->loadResult();
				$masterid = "SELECT masterid FROM #__cam_masteraccounts WHERE firmid=".$camfirm." ";
				$db->setQuery($masterid);
				$master = $db->loadResult();
					if($master)
					$master = $master ;
					else
					$master = $manager ;
				}
			elseif($user_type == '13' && $accounttype!='master'){
				$masterid = "SELECT masterid FROM #__cam_masteraccounts WHERE firmid=".$manager." "; 
				$db->setQuery($masterid);
				$master = $db->loadResult();
					if($master)
					$master = $master ;
					else
					$master = $manager ;
			}
			else{
			$master = $manager;
			}	
			return $master ;
	}
	//COmpleted
	function getvendorgeneralinsdata(){
		$user =& JFactory::getUser();
		$db = & JFactory::getDBO();
		$gli_data ="SELECT * from #__cam_vendor_liability_insurence  WHERE vendor_id=".$user->id." "; //validation to status of docs
		$db->Setquery($gli_data);
		$vendor_gli_data = $db->loadObjectList();
		return $vendor_gli_data;
		}
		
	function getvendorautoinsdata(){
		$user =& JFactory::getUser();
		$db = & JFactory::getDBO();
		$aip_data ="SELECT * from #__cam_vendor_auto_insurance WHERE vendor_id=".$user->id." "; //validation to status of docs
		$db->Setquery($aip_data);
		$vendor_aip_data = $db->loadObjectList();
		return $vendor_aip_data;
		}	
	
	function getvendorworkinsdata(){
		$user =& JFactory::getUser();
		$db = & JFactory::getDBO();
		$wci_data ="SELECT * from #__cam_vendor_workers_companies_insurance WHERE vendor_id=".$user->id." "; //validation to status of docs
		$db->Setquery($wci_data);
		$vendor_wci_data = $db->loadObjectList();
		return $vendor_wci_data;
		}
	function getvendorumbrellainsdata(){ 
		$user =& JFactory::getUser();
		$db = & JFactory::getDBO();
		$umb_data ="SELECT * from #__cam_vendor_umbrella_license WHERE vendor_id=".$user->id." "; //validation to status of docs
		$db->Setquery($umb_data);
		$vendor_umb_data = $db->loadObjectList();
		return $vendor_umb_data;
		}
	function getvendorlicinsdata(){
		$user =& JFactory::getUser();
		$db = & JFactory::getDBO();
		$lic_data ="SELECT * from #__cam_vendor_professional_license WHERE vendor_id=".$user->id.""; //validation to status of docs
		$db->Setquery($lic_data);
		$vendor_lic_data = $db->loadObjectList();
		return $vendor_lic_data;
		}
	function getvendoroccinsdata(){
		$user =& JFactory::getUser();
		$db = & JFactory::getDBO();
		$occ_data ="SELECT * from #__cam_vendor_occupational_license WHERE vendor_id=".$user->id.""; //validation to status of docs
		$db->Setquery($occ_data);
		$vendor_occ_data = $db->loadObjectList();
		return $vendor_occ_data;
		}	
	function getvendoromiinsdata(){
		$user =& JFactory::getUser();
		$db = & JFactory::getDBO();
		$omi_data ="SELECT * from #__cam_vendor_errors_omissions_insurance WHERE vendor_id=".$user->id."  "; 
		$db->Setquery($omi_data);
		$vendor_omi_data = $db->loadObjectList();
		return $vendor_omi_data;
		}
			
	function getterms($manager){
		$db = & JFactory::getDBO();
		$master =	$this->getmasterfirmaccount($manager);	
		$master_terms ="SELECT aboutus, vendorid from #__cam_vendor_aboutus WHERE vendorid=".$master." "; //validation to status of docs
		$db->Setquery($master_terms);
		$terms = $db->loadObject();
		return $terms;
	}
	function getcertificates($indusid,$managerid){
		$master =	$this->getmasterfirmaccount($managerid);
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$query_cert = "SELECT * FROM #__cam_master_certificates WHERE masterid=".$master." and industryid=".$indusid." ";
		$db->setQuery($query_cert);
		$data_cert = $db->loadObjectList();
		return $data_cert;
	}
						
	function getvendorw9insdata(){
		$user =& JFactory::getUser();
		$db = & JFactory::getDBO();
		$w9_data ="SELECT * from #__cam_vendor_compliance_w9docs  WHERE vendor_id=".$user->id." and w9_status != '-1' "; //validation to status of docs
		$db->Setquery($w9_data);
		$vendor_w9_data = $db->loadObjectList();
		return $vendor_w9_data;
		}	
	
	function getmasterPending_clients(){ 
        $property = array(); 
		$db =& JFactory::getDBO();
		$user =& JFactory::getUser();
        $user_id = $user->get('email'); //W.accounttype='master'
		//$query = "SELECT U.*, V.*, W.* from #__cam_customer_companyinfo  as U, #__users as W, #__cam_vendor_aboutus as V  where V.vendorid= W.id and U.cust_id=W.id and V.termsconditions!='' and W.accounttype='master' and W.user_type='13' and W.search='' group by U.comp_name having count(*)>=1";
		
		$query = "SELECT V.userid, V.fei, V.invitedate, V.vendortype, V.status, U.cust_id, U.comp_state, U.comp_name, U.comp_city, W.id, W.name,W.lastname, W.email	from #__vendor_inviteinfo as V, #__cam_customer_companyinfo  as U, #__users as W where W.id=V.userid and V.userid =U.cust_id and V.vendortype !='exclude' and V.inhousevendors ='".$user_id."' group by U.cust_id having count(*)>=1";
		$db->setQuery($query);
        $masterPending=$db->loadObjectList();
      //  echo '<pre>'; print_r($masterPending);
		//To check the vendor compliance documents
		for( $p=0; $p<count($masterPending); $p++ ){
			//if($pending[$p]->userid == '968'){
			$master =	$this->checkcompliancestatus($masterPending[$p]->cust_id);
			$masterPending[$p]->cstatus = $master ;
			//}
		}
		
		
		
		for( $t=0; $t<count($masterPending); $t++ ){
				$master =	$this->getmasterfirmaccount($masterPending[$t]->cust_id);
				$sql = "SELECT accepted FROM #__cam_vendor_terms WHERE masterid=".$master." and vendorid=".$user->id." ";
				$db->setQuery($sql);
				$terms = $db->loadResult();
				if(!$terms){
					$masterPending[$t]->terms = 'no' ;
				}
				if($terms == '1'){
					$masterPending[$t]->terms = 'acc' ;
				}
				else if($terms == '0'){
					$masterPending[$t]->terms = 'dec' ;
				}
				
				$sql_checked = "SELECT termsconditions FROM #__cam_vendor_aboutus WHERE vendorid=".$master." ";
				$db->setQuery($sql_checked);
				$terms_accept = $db->loadResult();
				$masterPending[$t]->terms_need = $terms_accept ;
				$masterPending[$t]->masterid = $master ;
				
		}
		//echo "<pre>"; print_r($masterPending); echo "</pre>";
		
		
		//exit;
		//Completed
		return $masterPending;
}
	// Function to get thr purchased preferred codes
	function purchasedocde(){
		$db =& JFactory::getDBO();
		$user =& JFactory::getUser();
		$sql = "SELECT C.comp_name as client, VP.purchase_date, VP.renewal_date, MV.code, MV.id, MV.publish FROM #__cam_vendor_purchasedcodes as VP 
		INNER JOIN #__cam_master_vendorcodes as MV ON VP.codeid = MV.id 
		INNER JOIN #__cam_customer_companyinfo as C ON VP.masterid = C.cust_id 
		where VP.vendorid=".$user->id." and VP.publish=1 and MV.publish=1 ";
		
		$db->setQuery($sql);
		$codes_purchased = $db->loadObjectList();
		return $codes_purchased;
	}
	
	// Function to get thr purchased preferred codes
	function purchasedocde_cancelled(){
		$db =& JFactory::getDBO();
		$user =& JFactory::getUser();
		$sql = "SELECT C.comp_name as client, VP.purchase_date, VP.renewal_date, MV.code, MV.id, MV.publish, VP.publish as vendor_publish, MV.canceldate, VP.canceldate as vendor_cancel  FROM #__cam_vendor_purchasedcodes as VP 
		INNER JOIN #__cam_master_vendorcodes as MV ON VP.codeid = MV.id 
		INNER JOIN #__cam_customer_companyinfo as C ON VP.masterid = C.cust_id 
		where VP.vendorid=".$user->id." and ( VP.publish=0 or MV.publish=0 ) ";
		
		$db->setQuery($sql);
		$codes_purchased = $db->loadObjectList();
		return $codes_purchased;
	}
	
	
	//Function to get the code data with master details
	function getcodedatenew($code){
		$db =& JFactory::getDBO();
		$code_data =  "SELECT id, masterid, renewtype, cost FROM #__cam_master_vendorcodes where code='".$code."' and publish=1";
		$db->setQuery( $code_data );
		$code_info = $db->loadObject();
		return $code_info;
	}
	
	//Function to store code purchase information
	function savecodes($data){
	$row =& $this->getTable('purchasecodes');
		jimport('joomla.user.helper');
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		return true;
	}
	//Function to store code purchase information
	function savecodes_admin($data){

	$row =& $this->getTable('purchasecodes_admin');
		jimport('joomla.user.helper');
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		return true;
	}
	//Function to send the notify email
	function sendmail_array($post){
		$to = 'rize.cama@gmail.com';
		$subject = 'CODE NOTIFY URLs';
		$content = 'This is for sample email';
		$mailfrom = 'From PAYPAL';
		$rdata = "<div style='padding-left:30px; font-weight: bold'>";
			foreach($_REQUEST as $key => $value)
			{
				$rdata .= $key."-".$value."<br>";
			}		
			$rdata .= "</div>";
			$content = $rdata ;
		$res = JUtility::sendMail($mailfrom, '', $to, $subject, $content, $mode=1);
		return $res;
	}
	
	function infotutsPaypal( $data, $masterid) {
		$masterfirmname = $this->getmastercompanyinfo($masterid);
		$codedesc = "Preferred Vendor Code for ".$masterfirmname.": ".$data['product_name']."";
		//echo "<pre>"; print_r($data); exit;
		//define( 'SSL_URL', 'https://www.paypal.com/cgi-bin/webscr' );
		 define( 'SSL_SAND_URL', 'https://www.sandbox.paypal.com/cgi-bin/webscr' );
		 $action = '';
		 //Is this a test transaction?
		 $action = ($data['paypal_mode']) ? SSL_SAND_URL : SSL_URL;
		 $form = '';
		 $form .= '<form name="frm_payment_method" action="' . $action . '" method="post">';
		 $form .= '<input type="hidden" name="business" value="' . $data['merchant_email'] . '" />';
		 // Instant Payment Notification & Return Page Details /
		 $form .= '<input type="hidden" name="notify_url" value="' . $data['notify_url'] . '" />';
		 $form .= '<input type="hidden" name="cancel_return" value="' . $data['cancel_url'] . '" />';
		 $form .= '<input type="hidden" name="return" value="' . $data['thanks_page'] . '" />';
		 $form .= '<input type="hidden" name="rm" value="2" />';
		 // Configures Basic Checkout Fields -->
		 $form .= '<input type="hidden" name="lc" value="" />';
		 $form .= '<input type="hidden" name="no_shipping" value="1" />';
		 $form .= '<input type="hidden" name="no_note" value="1" />';
		 // <input type="hidden" name="custom" value="localhost" />-->
		 $form .= '<input type="hidden" name="currency_code" value="' . $data['currency_code'] . '" />';
		 $form .= '<input type="hidden" name="page_style" value="paypal" />';
		 $form .= '<input type="hidden" name="charset" value="utf-8" />';
		 $form .= '<input type="hidden" name="item_name" value="' . $codedesc . '" />';
		 $form .= '<input type="hidden" value="_xclick" name="cmd"/>';
		 $form .= '<input type="hidden" name="amount" value="' . $data['amount'] . '" />';
		 $form .= '<script>';
		 $form .= 'setTimeout("document.frm_payment_method.submit()", 2);';
		 $form .= '</script>';
		 $form .= '</form>';
		 return $form;
	 }
	 //Function to add vendor to the master's list
	 function addpreferredlist($masterid,$vendorid){
	$db =& JFactory::getDBO();
	$user	= JFactory::getUser($vendorid);
	// To check if is there any pre invitations to same user
	$checkvendor = "SELECT vid FROM #__vendor_inviteinfo where userid =".$masterid." and v_id=".$vendorid." ";
	$db->setQuery($checkvendor);
	$exist = $db->loadResult();
	if($exist){
	//echo "already";
	}	
	else {
		// To get the company id
		$taxid = $this->getcompanyid($masterid);
		//Completed

		$from_email = $user->email;
		$post['userid'] = $masterid;
		$post['v_id'] = $vendorid;
		$post['taxid'] = $taxid;
		$post['licenseno'] = '';
		$post['vendortype'] = 'preferred';
		$post['fei'] = '';
		$post['inhousevendors'] = $user->email;
		$post['inhouse'] = $user->email;
		$post['subject'] = "Preferred invitation from camfirm";
		$post['inhousetext'] = "Preferred invitation from camfirm";
		$post['status'] = 1;
		$post['invitedate'] = date('Y-m-d h:i:m');;
		$post['search'] = '';
		$post['exclude'] = '';
		$save = $this->store_add($post);
		if($save){
		echo "added" ;
		}
		else{
		echo "fail";
		}
		
		}
		
	 }
	 
	 //Function to get the company id
	function getcompanyid($id){
	$db =& JFactory::getDBO();
	$user	= JFactory::getUser($id);
	if($user->user_type == 13){
	$taxid = "SELECT id FROM #__cam_camfirminfo where cust_id =".$user->id."  ";
	$db->setQuery($taxid);
	$tax = $db->loadResult();
	}
	else{
	$taxid = "SELECT comp_id FROM #__cam_customer_companyinfo where cust_id =".$user->id."  ";
	$db->setQuery($taxid);
	$tax = $db->loadResult();
	}
	return $tax;  
	}
	//Completed
	
	function store_add($data){

	$row =& $this->getTable('invitevendors');
	//echo "<pre>"; print_r($row);print_r($post); exit;
		jimport('joomla.user.helper');
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		return true;
	}
	
	//Function to update money request
	/*function checkmoneyrequest($code){
		$db =& JFactory::getDBO();
		$code_re = "SELECT id FROM #__cam_master_requested_money where codeid=".$code." ";
		$db->setQuery( $code_re );
		$money_re = $db->loadResult();
		if( $money_re ){
			$code_cost = "SELECT cost FROM #__cam_master_vendorcodes where id=".$code." ";
			$db->setQuery( $code_cost );
			$codecost = $db->loadResult();
		}
		else{
			
		}
	}*/
	//Completed
	
	//Function to add vendor to the master's list
	 function addpreferredlist_free($masterid,$vendorid){
	$db =& JFactory::getDBO();
	$user	= JFactory::getUser($vendorid);
	// To check if is there any pre invitations to same user
	$checkvendor = "SELECT vid FROM #__vendor_inviteinfo where userid =".$masterid." and v_id=".$vendorid." ";
	$db->setQuery($checkvendor);
	$exist = $db->loadResult();
	if($exist){
	//echo "already";
	}	
	else {
		// To get the company id
		$taxid = $this->getcompanyid($masterid);
		//Completed

		$from_email = $user->email;
		$post['userid'] = $masterid;
		$post['v_id'] = $vendorid;
		$post['taxid'] = $taxid;
		$post['licenseno'] = '';
		$post['vendortype'] = 'preferred';
		$post['fei'] = '';
		$post['inhousevendors'] = $user->email;
		$post['inhouse'] = $user->email;
		$post['subject'] = "Preferred invitation from camfirm";
		$post['inhousetext'] = "Preferred invitation from camfirm";
		$post['status'] = 1;
		$post['invitedate'] = date('Y-m-d h:i:m');;
		$post['search'] = '';
		$post['exclude'] = '';
		$save = $this->store_add($post);
		if($save){
		//echo "added" ;
		}
		else{
		//echo "fail";
		}
		
		}
		
	 }
	
	//Function to send the mail to vendor about his purchased code recently
	function sendingmailtovendor($code,$vendorid){
		$db =& JFactory::getDBO();
		$data_info = $this->gettotalinfo_code($code,$vendorid);
		$to_support = 'vendoremails@myvendorcenter.com';
		$from = 'MyVendorCenter';
		$mailfrom = 'support@myvendorcenter.com';
		$subject = 'Preferred Vendor Code purchase confirmation';
		$user	= JFactory::getUser($data_info->vendorid);
		$to_vendor = $user->email;
		
		$mail_sending= "SELECT introtext  FROM #__content where id='304' ";
		$db->Setquery($mail_sending);
		$body_article = $db->loadResult();
		$body = str_replace('[Vendor Company Name]',$data_info->vendor_companyname,$body_article) ;
		$body = str_replace('[Code Name]',$data_info->code,$body) ;
		$body = str_replace('[Management Company Name]',$data_info->client,$body) ;
		$body = str_replace('[Cost of Code]','$'.number_format($data_info->cost,2),$body) ;
		$body = str_replace('[Renewal Rate]',ucfirst($data_info->renewtype),$body) ;
		JUtility::sendMail($mailfrom, $from, $to_vendor, $subject, $body, $mode=1);
		$to_support = 'vendoremails@myvendorcenter.com';
		//$to_support = 'rize.cama@gmail.com';
		JUtility::sendMail($mailfrom, $from, $to_support, $subject, $body, $mode=1);
		$ccemails = $user->ccemail;
		$cclist = explode(';',$ccemails);
			for($c=0; $c<=count($cclist); $c++){
				$listcc = $cclist[$c];
					if($listcc){
						$res = JUtility::sendMail($mailfrom, $from, $listcc, $subject, $body, $mode=1);
					}
			} 
				
		//Get code data
	}
	function gettotalinfo_code($code,$vendorid){
		$db = JFactory::getDBO();
		$user	= JFactory::getUser();
		$code_check = "SELECT U.*, V.comp_name as client FROM #__cam_master_vendorcodes as U, #__cam_customer_companyinfo as V where U.id='".$code."' and U.masterid = V.cust_id and U.publish='1' ";
		$db->setQuery( $code_check );
		$codedata = $db->loadObject();
		//Get vendor company name
		$vendor_sql = "SELECT company_name,user_id FROM #__cam_vendor_company where user_id='".$vendorid."' ";
		$db->setQuery( $vendor_sql );
		$data_vid = $db->loadObject();
		$codedata->vendor_companyname = $data_vid->company_name;
		$codedata->vendorid = $data_vid->user_id;
		return $codedata;
	}
	//Completed
	function getmastercompanyinfo($masterid){
		$db = JFactory::getDBO();
		$user	= JFactory::getUser();
		$code_check = "SELECT comp_name from #__cam_customer_companyinfo where cust_id='".$masterid."' ";
		$db->setQuery( $code_check );
		$companyname = $db->loadResult();
		return $companyname;
	}
}
?>