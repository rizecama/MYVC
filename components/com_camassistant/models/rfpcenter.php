<?php

/**

 * @version		1.0.0 cam assistant $
 * @package		cam_assistant
 * @copyright	Copyright © 2010 - All rights reserved.
 * @license		GNU/GPL
 * @author
 * @author mail	nobody@nobody.com
 *
 *
 * @MVC architecture generated by MVC generator tool at http://www.alphaplug.com
 */

// no direct access
defined('_JEXEC') or die('Restricted access');

jimport( 'joomla.application.component.model' );

class rfpcenterModelRfpcenter extends Jmodel
{
 var $_data;
var $_total = null;
var $_pagination = null;

	function __construct()
	{
		parent::__construct();
	// Get the pagination request variables
		global $mainframe, $option;


	// Get pagination request variables
	// $limit = $mainframe->getUserStateFromRequest('global.list.limit', 'limit', $mainframe->getCfg('list_limit'), 'int');
		$db = JFactory::getDBO();
		$limsta ="SELECT * FROM #__cam_configuration WHERE id=1";
		$db->setQuery( $limsta);
		$limitstart = $db->loadObjectlist();

		// print_r($limitstart);
			if($_REQUEST['task']=='submitedrfp'){
			$limit = $limitstart[0]->subrfp_limit;
			} else if ($_REQUEST['task']=='closedrfp'){
			$limit = $limitstart[0]->closedrfp_limit;
			} else if ($_REQUEST['task']=='unsubmittedrfp'){
			$limit= $limitstart[0]->unsubrfp_limit;
			}  else if ($_REQUEST['task']=='awardrfp'){
			$limit= $limitstart[0]->awardrfp_limit;
			}  else if ($_REQUEST['task']=='unawardrfp'){
			$limit= $limitstart[0]->unawardrfp_limit;
			} else if ($_REQUEST['task']=='overview'){
			$limit=2;
			} else {
			$limit=10;
			}

			 global $mainframe;

	   $limitstart = JRequest::getVar('limitstart', 0, '', 'int');
      // $limit = $mainframe->getUserStateFromRequest('global.list.limit', 'limit', $default_limit, 'int');

		JRequest::setVar('limit', (int) $limit);
	// In case limit has been changed, adjust it
	$limitstart = ($limit != 0 ? (floor($limitstart / $limit) * $limit) : 0);

	if ($_REQUEST['viewall']=='all'){
	$limit='0';
	$limitstart='0';
	//print_r($limit);
	}

	$this->setState('limit', $limit);
	$this->setState('limitstart', $limitstart);
	}

	function getsubmitedrfp()
	{
		// load the data if it doesn’t already exist
		if (empty($submitedrfp))
		{
			$query = $this->_buildQuery();

			$submitedrfp = $this->_getList($query,$this->getState("limitstart"),$this->getState("limit"));
			//echo "<pre>"; print_r($submitedrfp);
		}

		return $submitedrfp;
	}

	function getunsubmittedrfp()
	{
		// load the data if it doesn’t already exist
		if (empty($unsubmittedrfp))
		{
		$query1 = $this->_buildQuery1();
		$unsubmittedrfp = $this->_getList($query1,$this->getState("limitstart"),$this->getState("limit"));
		}

		return $unsubmittedrfp;
	}
	function getclosedrfp()
	{
		//echo "<pre>"; print_r($this); exit;
		// load the data if it doesn’t already exist
		if (empty($closedrfp))
		{
		$query2 = $this->_buildQuery2();
		//echo "<pre>"; print_r($query2);
		$closedrfp = $this->_getList($query2,$this->getState("limitstart"),$this->getState("limit"));
		//echo "<pre>"; print_r($closedrfp);
		}

		return $closedrfp;
	}
	
	
	function getawardrfp()
	{
		//echo "<pre>"; print_r($this); exit;
		// load the data if it doesn’t already exist
		if (empty($awardrfp))
		{
		$query4 = $this->_buildQuery4();
		//echo "<pre>"; print_r($query2);
		$awardrfp = $this->_getList($query4,$this->getState("limitstart"),$this->getState("limit"));
		//echo "<pre>"; print_r($closedrfp);
		}

		return $awardrfp;
	}
	
	
	
	
	function getunawardrfp()
	{
		//echo "<pre>"; print_r($this); exit;
		// load the data if it doesn’t already exist
		if (empty($unawardrfp))
		{
		$query5 = $this->_buildQuery5();
		//echo "<pre>"; print_r($query2);
		$unawardrfp = $this->_getList($query5,$this->getState("limitstart"),$this->getState("limit"));
		//echo "<pre>"; print_r($closedrfp);
		}

		return $unawardrfp;
	}
	function getawardjob()
	{
	$db = & JFactory::getDBO();
	if (empty($awardjob))
			{
			$query3 = $this->_buildQuery3();
			//echo "<pre>"; print_r($query3 );
			$awardjob = $this->_getList($query3,$this->getState("limitstart"),$this->getState("limit"));
			//echo "<pre>"; print_r($awardjob);
			}
			
			// To get the compliance documents and new formatt
			$rfpid = $_REQUEST['rid'];
			for( $sp=0; $sp<count($awardjob); $sp++ ){
	$totalprefers_new_w9	=	$this->checknewspecialrequirements_w9($awardjob[$sp]->proposedvendorid,$rfpid);		
	$totalprefers_new_gli	=	$this->checknewspecialrequirements_gli($awardjob[$sp]->proposedvendorid,$rfpid);
	$totalprefers_new_aip	=	$this->checknewspecialrequirements_aip($awardjob[$sp]->proposedvendorid,$rfpid);
	$totalprefers_new_wci	=	$this->checknewspecialrequirements_wci($awardjob[$sp]->proposedvendorid,$rfpid);
	$totalprefers_new_umb	=	$this->checknewspecialrequirements_umb($awardjob[$sp]->proposedvendorid,$rfpid);
	$totalprefers_new_pln	=	$this->checknewspecialrequirements_pln($awardjob[$sp]->proposedvendorid,$rfpid);
	$totalprefers_new_omi	=	$this->checknewspecialrequirements_omi($awardjob[$sp]->proposedvendorid,$rfpid);
		
		if($totalprefers_new_w9 == 'success' && $totalprefers_new_gli == 'success' && $totalprefers_new_aip == 'success' && $totalprefers_new_wci == 'success' && $totalprefers_new_umb == 'success' && $totalprefers_new_pln == 'success' && $totalprefers_new_omi == 'success'){
			$awardjob[$sp]->special_requirements = 'success' ;
			$masteraccount = $this->getmasterfirmaccount();
			$sql_terms = "SELECT termsconditions FROM #__cam_vendor_aboutus WHERE vendorid=".$masteraccount." "; 
			$db->setQuery($sql_terms);
			$terms_exist = $db->loadResult();
			if($terms_exist == '1'){
			$sql = "SELECT accepted FROM #__cam_vendor_terms WHERE vendorid=".$awardjob[$sp]->proposedvendorid." and masterid=".$masteraccount." "; 
			$db->setQuery($sql);
			$terms = $db->loadResult();
				if($terms == '1'){
				$awardjob[$sp]->special_requirements = 'success' ;
				}
				else{
				$awardjob[$sp]->special_requirements = 'fail' ;
				}
			}
			else{
			
			}
		}
		else{
			$awardjob[$sp]->special_requirements = 'fail' ;
		}
		//Function to get apple rating
		$rating = $this->getrating($awardjob[$sp]->proposedvendorid);
		$awardjob[$sp]->applerating = $rating ;
		//Function to get state and county
		$statecode  = "SELECT code from #__cam_vendor_states where id=".$awardjob[$sp]->state." " ; 
		$db->setQuery($statecode);
		$statea = $db->loadResult();
		$awardjob[$sp]->statename = $statea ;
		//Function to get JOB type
		$jobtype  = "SELECT jobtype from #__cam_rfpinfo where id=".$rfpid." " ; 
		$db->setQuery($jobtype);
		$job_type = $db->loadResult();
		$awardjob[$sp]->jobtype = $job_type ;
		//Completed
		// In case of basic request
		if( $job_type == 'yes' ){
			$c_status =	$this->checkcompliancestatus($awardjob[$sp]->proposedvendorid);
			$awardjob[$sp]->special_requirements = $c_status ;
		}
		//Completed
	}
			
			//Completed
			
			return $awardjob;
	}
	function getunawardingjob()
	{
	if (empty($unawardingjob))
			{
			$unawardingjob= $this->_unawardingjob();
		//	echo "<pre>"; print_r($unawardingjob );
			$unawardingjob = $this->_getList($unawardingjob,$this->getState("limitstart"),$this->getState("limit"));
			//echo "<pre>"; print_r($unawardingjob);
			}
			return $unawardingjob;
	}
	function getannouncement()
	{
		/*if (empty($announcement))
		{
		$announcement= $this->_announcement();
	//	echo "<pre>"; print_r($unawardingjob );
		$announcement = $this->_getList($announcement,$this->getState("limitstart"),$this->getState("limit"));
		//echo "<pre>"; print_r($unawardingjob);
		}*/
		$user =& JFactory::getUser();
 		$id = $user->get('id');

		$user_type = $user->get('user_type');
		//print_r($user);
		$db = & JFactory::getDBO();
		$query = "SELECT comp_state FROM #__cam_customer_companyinfo  WHERE `cust_id` =".$id;
		$db->setQuery($query);
		$statename = $db->loadResult();

		if ($user_type){
		$where[] ='user_type='.$user_type;
		}
		if($statename)
		$where[] ="( state_name='".$statename."' OR state_name='' OR state_name=0 OR state_name=57)";
		else
		$where[] ="(state_name='' OR state_name=0 OR state_name=57)";

		$where=implode(' AND ',$where);

	 	$qry = "SELECT announcement FROM #__cam_announcement WHERE published=1 AND ".$where." ORDER BY id DESC";
		$db->Setquery($qry);
		$announcement = $db->loadObjectList();
		return $announcement;
	}
	function getTotal()
	{
		// Lets load the content if it doesn’t already exist
		if (empty($this->_total))
		{
		$query = $this->_buildQuery();
		$this->_total = $this->_getListCount($query);

		}
		return $this->_total;
	}

	function getTotal1()
	{
		// Lets load the content if it doesn’t already exist
		if (empty($this->_total1))
		{
		$query1 = $this->_buildQuery1();
		$this->_total1 = $this->_getListCount($query1);
		}
		return $this->_total1;
	}

	function getTotal2()
	{
		// Lets load the content if it doesn’t already exist
		if (empty($this->_total2))
		{
		$query2 = $this->_buildQuery2();
		$this->_total2 = $this->_getListCount($query2);
		}
		return $this->_total2;
	}
	function getTotal3()
	{
		// Lets load the content if it doesn’t already exist
		if (empty($this->_total3))
		{
		$query3 = $this->_buildQuery3();
		$this->_total3 = $this->_getListCount($query3);
		}
		return $this->_total3;
	}
	function getTotal4()
	{
		// Lets load the content if it doesn’t already exist
		if (empty($this->_total4))
		{
		$query4 = $this->_buildQuery4();
		$this->_total4 = $this->_getListCount($query4);
		}
		return $this->_total4;
	}
	function getTotal5()
	{
		// Lets load the content if it doesn’t already exist
		if (empty($this->_total5))
		{
		$query5 = $this->_buildQuery5();
		$this->_total5 = $this->_getListCount($query5);
		}
		return $this->_total5;
	}
	function getPagination()
	{

		// Lets load the content if it doesn’t already exist
		if (empty($this->_pagination))
		{
		jimport('joomla.html.pagination');
		//echo "<pre>"; print_r($this->getState('limit'));
		$this->_pagination = new JPagination( $this->getTotal(), $this->getState('limitstart'), $this->getState('limit') );
		//echo "<pre>";  print_r($this->_pagination);
		}
		return $this->_pagination;
	}

	function getPagination1()
	{
		// Lets load the content if it doesn’t already exist
		if (empty($this->_pagination1))
		{
		jimport('joomla.html.pagination');
		$this->_pagination1 = new JPagination( $this->getTotal1(), $this->getState('limitstart'), $this->getState('limit') );
		}
		return $this->_pagination1;
	}
	function getPagination2()
	{
		// Lets load the content if it doesn’t already exist
		if (empty($this->_pagination2))
		{
		jimport('joomla.html.pagination');
		$this->_pagination2 = new JPagination( $this->getTotal2(), $this->getState('limitstart'), $this->getState('limit') );
		}
		return $this->_pagination2;
	}
	function getPagination4()
	{
		// Lets load the content if it doesn’t already exist
		if (empty($this->_pagination2))
		{
		jimport('joomla.html.pagination');
		$this->_pagination4 = new JPagination( $this->getTotal4(), $this->getState('limitstart'), $this->getState('limit') );
		}
		return $this->_pagination4;
	}
	function getPagination5()
	{
		// Lets load the content if it doesn’t already exist
		if (empty($this->_pagination5))
		{
		jimport('joomla.html.pagination');
		$this->_pagination5 = new JPagination( $this->getTotal5(), $this->getState('limitstart'), $this->getState('limit') );
		}
		return $this->_pagination5;
	}
	function _buildQuery()
	{
		// Get the award rfp list
		//$where = $this->_buildContentWhere();
		$db= JFactory::getDBO();
		$user =& JFactory::getUser();
	 	$user_id = $user->get('id');
		$usertype = $user->get('user_type');
		//$today = date('m-d-Y');


		$query = "SELECT id FROM #__cam_camfirminfo WHERE cust_id=".$user_id;
		$db->setQuery($query);
		$comp_id = $db->loadResult();

		$query_get = "SELECT cust_id FROM #__cam_customer_companyinfo WHERE comp_id=".$comp_id;
		$db->setQuery($query_get);
		$managers = $db->loadObjectList();
		//echo count($managers);
			$m= date("m"); // Month value
			$de= date("d"); //today's date
			$y= date("Y"); // Year value
			$today = date('m-d-Y', mktime(0,0,0,$m,$de,$y));
if($usertype ==13 && count($managers)!=0){
for($i=0; $i<count($managers);$i++){
$condition = $condition." OR U.cust_id='".$managers[$i]->cust_id."'";
$query = "SELECT U.id,U.projectName,U.proposalDueDate,U.proposalDueTime,V.property_name,U.cust_id,U.publish,V.timezone,U.jobtype FROM #__cam_rfpinfo as U LEFT JOIN #__cam_property as V ON U.property_id = V.id WHERE U.rfp_type = 'rfp' and U.publish!='2' and U.rfpapproval !=1 and U.rfpapproval_decline !=2 and (U.cust_id='".$user_id."' ".$condition.") ORDER BY STR_TO_DATE(U.proposalDueDate, '%m-%d-%Y') ASC";
		}
		}
		else{
		$query = "SELECT U.id,U.projectName,U.proposalDueDate,U.proposalDueTime,V.property_name,U.publish,V.timezone,U.jobtype FROM #__cam_rfpinfo as U LEFT JOIN #__cam_property as V ON U.property_id = V.id WHERE U.rfp_type = 'rfp' and U.publish!='2' and U.rfpapproval !=1 and U.rfpapproval_decline !=2 and U.cust_id='".$user_id."' ORDER BY STR_TO_DATE(U.proposalDueDate, '%m-%d-%Y') ASC";
		}
//echo $query; exit;
//If user district manager
		if($user->dmanager == 'yes'){
		$dmmanagers = "SELECT managerid FROM #__cam_invitemanagers WHERE dmanager=".$user->id;
		$db->setQuery($dmmanagers);
		$dm_managers = $db->loadObjectlist();
		for($i=0; $i<count($dm_managers);$i++){
$condition = $condition." OR U.cust_id='".$dm_managers[$i]->managerid."'";
$query = "SELECT U.id,U.projectName,U.proposalDueDate,U.proposalDueTime,V.property_name,U.cust_id,U.publish,V.timezone,U.jobtype FROM #__cam_rfpinfo as U LEFT JOIN #__cam_property as V ON U.property_id = V.id WHERE U.rfp_type = 'rfp' and U.publish!='2' and U.rfpapproval !=1 and U.rfpapproval_decline !=2 and (U.cust_id='".$user_id."' ".$condition.") ORDER BY STR_TO_DATE(U.proposalDueDate, '%m-%d-%Y') ASC";
		}
		}
//		Completed

		// To get the query for master account
	if($usertype ==13 && $user->accounttype == 'master')
		{$sql1 = "SELECT firmid from #__cam_masteraccounts where masterid=".$user->id." ";
			$db->Setquery($sql1);
			$subfirms = $db->loadObjectlist();
			//echo "<pre>"; print_r($subfirms); echo "</pre>";
	if($subfirms)
		{
			for( $a=0; $a<count($subfirms); $a++ )
				{
					$firmid1[] = $subfirms[$a]->firmid;
					$sql = "SELECT id from #__cam_camfirminfo where cust_id=".$subfirms[$a]->firmid." ";
					$db->Setquery($sql);
					$companyid[] = $db->loadResult();
											
				}
				//echo "<pre>"; print_r($firmid1); echo "</pre>";	
        }
			
	if($companyid)
		{
         	for( $c=0; $c<count($companyid); $c++ )
				{
					$sql_cid = "SELECT cust_id from #__cam_customer_companyinfo where comp_id=".$companyid[$c]." ";
					$db->Setquery($sql_cid);
					$managerids = $db->loadObjectList();
						if($managerids) {
							foreach( $managerids as $last_mans){
								$total_mangrs[] = $last_mans->cust_id ;
							}
						}
               }
        }
		
	if($firmid1 && $total_mangrs )
		{
            $total_mangrs = array_merge($total_mangrs,$firmid1); 
        }
	if($firmid1){
            for( $d=0; $d<count($firmid1); $d++ ){
        $query = "SELECT id FROM #__cam_camfirminfo WHERE cust_id=".$firmid1[$d];
	$db->setQuery($query);
	$comp_id = $db->loadResult();
	$userid=array($user->id);
	$query_mans = "SELECT cust_id from #__cam_customer_companyinfo where comp_id = ".$comp_id." ";
	$db->setQuery($query_mans);
        $Managers_list1 = $db->loadObjectList();
                if($Managers_list1) {
                        foreach( $Managers_list1 as $Managers_list2){
                                $Managers_list[] = $Managers_list2->cust_id ;
                        }
                }
            }
        if($Managers_list){
        $total_mangrs = array_merge($Managers_list,$firmid1);
            } else {
         $total_mangrs = $firmid1;        
            }
        }		
        $userid=array($user->id);
        if($total_mangrs){
        $total_mangrs = array_merge($userid,$total_mangrs); 
		}
		else{
		$total_mangrs[] = $user->id; 
		}
		$totalcust_id1_arr = implode($total_mangrs,',');
		$condition = " U.cust_id IN (".$totalcust_id1_arr.")";
		
$query = "SELECT U.id,U.projectName,U.proposalDueDate,U.proposalDueTime,V.property_name,U.cust_id,U.publish,V.timezone,U.jobtype FROM #__cam_rfpinfo as U LEFT JOIN #__cam_property as V ON U.property_id = V.id WHERE U.rfp_type = 'rfp' and U.publish!='2' and U.rfpapproval !=1 and U.rfpapproval_decline !=2 and ".$condition." ORDER BY STR_TO_DATE(U.proposalDueDate, '%m-%d-%Y') ASC";
		
	}
	//Completed

		return  $query;
	}
     function getdashboard_submit()
	{
		// Get the award rfp list
		//$where = $this->_buildContentWhere();
		$db= JFactory::getDBO();
		$user =& JFactory::getUser();
	 	$user_id = $user->get('id');
		$usertype = $user->get('user_type');
		//$today = date('m-d-Y');


		$query = "SELECT id FROM #__cam_camfirminfo WHERE cust_id=".$user_id;
		$db->setQuery($query);
		$comp_id = $db->loadResult();

		$query_get = "SELECT cust_id FROM #__cam_customer_companyinfo WHERE comp_id=".$comp_id;
		$db->setQuery($query_get);
		$managers = $db->loadObjectList();
		//echo count($managers);
			$m= date("m"); // Month value
			$de= date("d"); //today's date
			$y= date("Y"); // Year value
			$today = date('m-d-Y', mktime(0,0,0,$m,$de,$y));
if($usertype ==13 && count($managers)!=0){
for($i=0; $i<count($managers);$i++){
$condition = $condition." OR U.cust_id='".$managers[$i]->cust_id."'";
 $query = "SELECT U.id,U.projectName,U.proposalDueDate,U.proposalDueTime,V.property_name,U.cust_id,U.publish,V.timezone,U.jobtype FROM #__cam_rfpinfo as U LEFT JOIN #__cam_property as V ON U.property_id = V.id WHERE U.rfp_type = 'rfp' and U.publish!='2' and U.rfpapproval !=1 and U.rfpapproval_decline !=2 and (U.cust_id='".$user_id."' ".$condition.")  ORDER BY STR_TO_DATE(U.proposalDueDate, '%m-%d-%Y') ASC ";
		}
		}
		else{
		$query = "SELECT U.id,U.projectName,U.proposalDueDate,U.proposalDueTime,V.property_name,U.publish,V.timezone,U.jobtype FROM #__cam_rfpinfo as U LEFT JOIN #__cam_property as V ON U.property_id = V.id WHERE U.rfp_type = 'rfp' and U.publish!='2' and U.rfpapproval !=1 and U.rfpapproval_decline !=2 and U.cust_id='".$user_id."' ORDER BY STR_TO_DATE(U.proposalDueDate, '%m-%d-%Y') ASC ";
		}
//echo $query; exit;
//If user property owner
if($usertype == 16 )
{
	$db =& JFactory::getDBO();
	$user=JFactory::getUser();
	$total_managers = $this->getallmanagerids(); 
	
	foreach( $total_managers as $last_mans){
		$managers_links[] = $last_mans->user_id ;
		$property_links[] = $last_mans->property_id ;
	}
	 $loggeduser[] = $user->id;
	
	$total_pids = $this->userallproperties();
    
	foreach( $total_pids as $last_pids){
	$property_total[] = $last_pids->id ;
	}
		

	if($managers_links)
		$final_mans = array_merge($loggeduser,$managers_links);
	else
		$final_mans = $loggeduser;
		
		if($property_links && $property_total)
		$final_pmans = array_merge($property_total,$property_links);
		else if($property_links)
		$final_pmans = $property_links;
	else
		$final_pmans = $property_total;
	
	
	$implode_mans = implode(',',$final_mans);
	$implode_ps = implode(',',$final_pmans);
	
 $condition = 'U.cust_id IN('.$implode_mans.') AND U.property_id IN('.$implode_ps.')' ;
 	
  $query = "SELECT U.id,U.projectName,U.proposalDueDate,U.proposalDueTime,V.property_name,U.publish,
 V.timezone,U.jobtype FROM #__cam_rfpinfo as U LEFT JOIN
  #__cam_property as V ON U.property_id = V.id WHERE U.rfp_type = 'rfp' and U.publish!='2' and U.rfpapproval !=1 and U.rfpapproval_decline !=2 and ".$condition." ORDER BY STR_TO_DATE(U.proposalDueDate, '%m-%d-%Y') ASC ";

  }

//If user district manager
		if($user->dmanager == 'yes'){
		$dmmanagers = "SELECT managerid FROM #__cam_invitemanagers WHERE dmanager=".$user->id;
		$db->setQuery($dmmanagers);
		$dm_managers = $db->loadObjectlist();
		for($i=0; $i<count($dm_managers);$i++){
$condition = $condition." OR U.cust_id='".$dm_managers[$i]->managerid."'";
$query = "SELECT U.id,U.projectName,U.proposalDueDate,U.proposalDueTime,V.property_name,U.cust_id,U.publish,V.timezone,U.jobtype FROM #__cam_rfpinfo as U LEFT JOIN #__cam_property as V ON U.property_id = V.id WHERE U.rfp_type = 'rfp' and U.publish!='2' and U.rfpapproval !=1 and U.rfpapproval_decline !=2 and (U.cust_id='".$user_id."' ".$condition.") ORDER BY STR_TO_DATE(U.proposalDueDate, '%m-%d-%Y') ASC ";
		}
		}
//		Completed
		// To get the query for master account
	if($usertype ==13 && $user->accounttype == 'master')
		{
			$sql1 = "SELECT firmid from #__cam_masteraccounts where masterid=".$user->id." ";
			$db->Setquery($sql1);
			$subfirms = $db->loadObjectlist();
			//echo "<pre>"; print_r($subfirms); echo "</pre>";
	if($subfirms)
		{
			for( $a=0; $a<count($subfirms); $a++ )
				{
					$firmid1[] = $subfirms[$a]->firmid;
					$sql = "SELECT id from #__cam_camfirminfo where cust_id=".$subfirms[$a]->firmid." ";
					$db->Setquery($sql);
					$companyid[] = $db->loadResult();
											
				}
				//echo "<pre>"; print_r($firmid1); echo "</pre>";	
        }
			
	if($companyid)
		{
         	for( $c=0; $c<count($companyid); $c++ )
				{
					$sql_cid = "SELECT cust_id from #__cam_customer_companyinfo where comp_id=".$companyid[$c]." ";
					$db->Setquery($sql_cid);
					$managerids = $db->loadObjectList();
						if($managerids) {
							foreach( $managerids as $last_mans){
								$total_mangrs[] = $last_mans->cust_id ;
							}
						}
               }
        }
		
	if($firmid1 && $total_mangrs )
		{
            $total_mangrs = array_merge($total_mangrs,$firmid1); 
        }
	if($firmid1){
            for( $d=0; $d<count($firmid1); $d++ ){
        $query = "SELECT id FROM #__cam_camfirminfo WHERE cust_id=".$firmid1[$d];
	$db->setQuery($query);
	$comp_id = $db->loadResult();
	$userid=array($user->id);
	$query_mans = "SELECT cust_id from #__cam_customer_companyinfo where comp_id = ".$comp_id." ";
	$db->setQuery($query_mans);
        $Managers_list1 = $db->loadObjectList();
                if($Managers_list1) {
                        foreach( $Managers_list1 as $Managers_list2){
                                $Managers_list[] = $Managers_list2->cust_id ;
                        }
                }
            }
        if($Managers_list){
        $total_mangrs = array_merge($Managers_list,$firmid1);
            } else {
         $total_mangrs = $firmid1;        
            }
        }		
        $userid=array($user->id);
        if($total_mangrs){
        $total_mangrs = array_merge($userid,$total_mangrs); 
		}
		else{
		$total_mangrs[] = $user->id; 
		}
		$totalcust_id1_arr = implode($total_mangrs,',');
		$condition = " U.cust_id IN (".$totalcust_id1_arr.")";
		
$query= "SELECT U.id,U.projectName,U.createdDate,U.proposalDueDate,U.proposalDueTime,V.property_name,U.publish,U.rfp_type,V.timezone,U.jobtype FROM #__cam_rfpinfo as U LEFT JOIN #__cam_property  as V ON U.property_id = V.id WHERE (U.rfp_type = 'rfp' and U.publish != 2) and U.rfpapproval !=1 and U.rfpapproval_decline !=2 and ".$condition." ORDER BY STR_TO_DATE(U.proposalDueDate, '%m-%d-%Y') ASC";

//$query = "SELECT U.id,U.projectName,U.proposalDueDate,U.proposalDueTime,V.property_name,U.cust_id,U.publish FROM #__cam_rfpinfo as U LEFT JOIN #__cam_property as V ON U.property_id = V.id WHERE U.rfp_type = 'rfp' and U.publish!='2' and (U.cust_id='".$user_id."' ".$condition.") ORDER BY U.secondstime ASC ";

		
	}
	//Completed
		//echo $query; 	
         $db->setQuery($query);
		$dashboard_submit = $db->loadObjectlist();
		
		return  $dashboard_submit;
	}

function getallmanagerids()
{ 
$db= JFactory::getDBO();
$user =& JFactory::getUser(); 
$sql1 = "SELECT user_id, property_id FROM #__cam_propertyowner_link  where propertyowner_id='".$user->id."' AND link_value='1'";
$db->setQuery($sql1);
$total_managers = $db->loadObjectList();
return $total_managers;
}

function userallproperties()
{
$db= JFactory::getDBO();
$user =& JFactory::getUser(); 
$sql11 = "SELECT id FROM #__cam_property where property_manager_id='".$user->id."'";
$db->setQuery($sql11);
$total_pids = $db->loadObjectList();
return $total_pids ;
}

		function awaitingrfprequest()
		{
			$db =& JFactory::getDBO();
			$user=JFactory::getUser();
			$sql1 = "SELECT user_id, property_id FROM #__cam_propertyowner_link  where propertyowner_id='".$user->id."' AND link_value='1' AND approval_p ='1'";
			$db->setQuery($sql1);
			$total_managers = $db->loadObjectList();
				if ( $total_managers )
				  {  
				foreach( $total_managers as $last_mans){
					$managers_links[] = $last_mans->user_id ;
					$property_links[] = $last_mans->property_id ;
				}
		
			$implode_mans = implode(',',$managers_links);
			$implode_ps = implode(',',$property_links);
			$condition = 'U.cust_id IN('.$implode_mans.') AND U.property_id IN('.$implode_ps.')' ;
$query = "SELECT U.id,U.projectName,U.cust_id,U.proposalDueDate,U.proposalDueTime,V.property_name,U.publish,V.timezone,U.jobtype FROM #__cam_rfpinfo as U LEFT JOIN #__cam_property as V ON U.property_id = V.id WHERE U.rfp_type = 'rfp' and U.rfpapproval=1 and U.rfpapproval_decline !=2 and U.publish!='2' and ".$condition." ORDER BY STR_TO_DATE(U.proposalDueDate, '%m-%d-%Y') ASC ";
		  $db->setQuery($query);
		  $awaitingrfprequest = $db->loadObjectlist();
		  for($i=0; $i<count($awaitingrfprequest); $i++)
		   {
		      $awaitingrfprequest[$i]->invitationtype ='req';
		   }
		 
		return $awaitingrfprequest;
		    } 
		}
	  
function awaitingrfpapproval()
 {
	$db =& JFactory::getDBO();
	$user=JFactory::getUser();
	$user_id = $user->get('id');
	$usertype = $user->get('user_type');
	$rated = JRequest::getVar('rated','');
	if($rated == ''){
	$survey_c = " (U.rfp_type = 'Awarded' && U.apple = '0') " ; 
	} else {
	$survey_c = " (U.rfp_type = 'Awarded' && U.apple != '0') ";	
	}
	
	$sql1 = "SELECT user_id, property_id FROM #__cam_propertyowner_link  where propertyowner_id='".$user->id."' AND link_value='1' AND awarding_p='1'";
    $db->setQuery($sql1);
    $total_managers = $db->loadObjectList();
    
	foreach( $total_managers as $last_mans){
		$managers_links[] = $last_mans->user_id ;
		$property_links[] = $last_mans->property_id ;
	}
	
	$implode_mans = implode(',',$managers_links);
	$implode_ps = implode(',',$property_links);

	
 $condition = 'U.cust_id IN('.$implode_mans.') AND U.property_id IN('.$implode_ps.')' ;
  $query = "SELECT DISTINCT(U.id),U.projectName,U.createdDate,U.cust_id,U.awardeddate,V.property_name,H.amount,H.awarded_vendor,U.jobtype FROM #__cam_rfpinfo as U LEFT JOIN  #__cam_property  as V ON U.property_id = V.id  LEFT JOIN  #__cam_outsidevendor  as H ON U.id = H.rfpid WHERE ".$survey_c." and ".$condition." and U.awardjobaproval=1 and U.awardjobdecline !=2 ORDER BY U.id DESC";		

 	
	   $db->setQuery($query);
	  $awaitingrfpapproval = $db->loadObjectlist();
	  for($i=0;$i<count($awaitingrfpapproval);$i++)
	  {
	  $awaitingrfpapproval[$i]->invitationtype ='app'; 
	  }
	  return $awaitingrfpapproval;
	
      }
	  
	  
 function get_rejectedrfp()
 {
    
		$db= JFactory::getDBO();
		$user =& JFactory::getUser();
	 	$user_id = $user->get('id');
		$usertype = $user->get('user_type');
		//$today = date('m-d-Y');


		$query = "SELECT id FROM #__cam_camfirminfo WHERE cust_id=".$user_id;
		$db->setQuery($query);
		$comp_id = $db->loadResult();

		$query_get = "SELECT cust_id FROM #__cam_customer_companyinfo WHERE comp_id=".$comp_id;
		$db->setQuery($query_get);
		$managers = $db->loadObjectList();
		//echo count($managers);
			$m= date("m"); // Month value
			$de= date("d"); //today's date
			$y= date("Y"); // Year value
			$today = date('m-d-Y', mktime(0,0,0,$m,$de,$y));
if($usertype ==13 && count($managers)!=0){
for($i=0; $i<count($managers);$i++){
$condition = $condition." OR U.cust_id='".$managers[$i]->cust_id."'";
 $query = "SELECT U.id,U.projectName,U.proposalDueDate,U.proposalDueTime,V.property_name,U.cust_id,U.publish,V.timezone,U.jobtype FROM #__cam_rfpinfo as U LEFT JOIN #__cam_property as V ON U.property_id = V.id WHERE U.rfp_type = 'rfp' and U.publish!='2'  and U.rfpapproval_decline=2 and (U.cust_id='".$user_id."' ".$condition.")  ORDER BY STR_TO_DATE(U.proposalDueDate, '%m-%d-%Y') ASC ";
		}
		}
		else{
		$query = "SELECT U.id,U.projectName,U.proposalDueDate,U.proposalDueTime,V.property_name,U.publish,V.timezone,U.jobtype FROM #__cam_rfpinfo as U LEFT JOIN #__cam_property as V ON U.property_id = V.id WHERE U.rfp_type = 'rfp' and U.publish!='2' and U.rfpapproval_decline=2 and U.cust_id='".$user_id."' ORDER BY STR_TO_DATE(U.proposalDueDate, '%m-%d-%Y') ASC ";
		}
//echo $query; exit;


//If user district manager
		if($user->dmanager == 'yes'){
		$dmmanagers = "SELECT managerid FROM #__cam_invitemanagers WHERE dmanager=".$user->id;
		$db->setQuery($dmmanagers);
		$dm_managers = $db->loadObjectlist();
		for($i=0; $i<count($dm_managers);$i++){
$condition = $condition." OR U.cust_id='".$dm_managers[$i]->managerid."'";
$query = "SELECT U.id,U.projectName,U.proposalDueDate,U.proposalDueTime,V.property_name,U.cust_id,U.publish,V.timezone,U.jobtype FROM #__cam_rfpinfo as U LEFT JOIN #__cam_property as V ON U.property_id = V.id WHERE U.rfp_type = 'rfp' and U.publish!='2' and U.rfpapproval_decline=2 and (U.cust_id='".$user_id."' ".$condition.") ORDER BY STR_TO_DATE(U.proposalDueDate, '%m-%d-%Y') ASC ";
		}
		}
//		Completed
		// To get the query for master account
	if($usertype ==13 && $user->accounttype == 'master')
		{
			$sql1 = "SELECT firmid from #__cam_masteraccounts where masterid=".$user->id." ";
			$db->Setquery($sql1);
			$subfirms = $db->loadObjectlist();
			//echo "<pre>"; print_r($subfirms); echo "</pre>";
	if($subfirms)
		{
			for( $a=0; $a<count($subfirms); $a++ )
				{
					$firmid1[] = $subfirms[$a]->firmid;
					$sql = "SELECT id from #__cam_camfirminfo where cust_id=".$subfirms[$a]->firmid." ";
					$db->Setquery($sql);
					$companyid[] = $db->loadResult();
											
				}
				//echo "<pre>"; print_r($firmid1); echo "</pre>";	
        }
			
	if($companyid)
		{
         	for( $c=0; $c<count($companyid); $c++ )
				{
					$sql_cid = "SELECT cust_id from #__cam_customer_companyinfo where comp_id=".$companyid[$c]." ";
					$db->Setquery($sql_cid);
					$managerids = $db->loadObjectList();
						if($managerids) {
							foreach( $managerids as $last_mans){
								$total_mangrs[] = $last_mans->cust_id ;
							}
						}
               }
        }
		
	if($firmid1 && $total_mangrs )
		{
            $total_mangrs = array_merge($total_mangrs,$firmid1); 
        }
	if($firmid1){
            for( $d=0; $d<count($firmid1); $d++ ){
        $query = "SELECT id FROM #__cam_camfirminfo WHERE cust_id=".$firmid1[$d];
	$db->setQuery($query);
	$comp_id = $db->loadResult();
	$userid=array($user->id);
	$query_mans = "SELECT cust_id from #__cam_customer_companyinfo where comp_id = ".$comp_id." ";
	$db->setQuery($query_mans);
        $Managers_list1 = $db->loadObjectList();
                if($Managers_list1) {
                        foreach( $Managers_list1 as $Managers_list2){
                                $Managers_list[] = $Managers_list2->cust_id ;
                        }
                }
            }
        if($Managers_list){
        $total_mangrs = array_merge($Managers_list,$firmid1);
            } else {
         $total_mangrs = $firmid1;        
            }
        }		
        $userid=array($user->id);
        if($total_mangrs){
        $total_mangrs = array_merge($userid,$total_mangrs); 
		}
		else{
		$total_mangrs[] = $user->id; 
		}
		$totalcust_id1_arr = implode($total_mangrs,',');
		$condition = " U.cust_id IN (".$totalcust_id1_arr.")";
		
$query= "SELECT U.id,U.projectName,U.createdDate,U.proposalDueDate,U.proposalDueTime,V.property_name,U.publish,U.rfp_type,V.timezone,U.jobtype FROM #__cam_rfpinfo as U LEFT JOIN #__cam_property  as V ON U.property_id = V.id WHERE (U.rfp_type = 'rfp' and U.publish != 2) and  U.rfpapproval_decline=2 and ".$condition." ORDER BY STR_TO_DATE(U.proposalDueDate, '%m-%d-%Y') ASC";

//$query = "SELECT U.id,U.projectName,U.proposalDueDate,U.proposalDueTime,V.property_name,U.cust_id,U.publish FROM #__cam_rfpinfo as U LEFT JOIN #__cam_property as V ON U.property_id = V.id WHERE U.rfp_type = 'rfp' and U.publish!='2' and (U.cust_id='".$user_id."' ".$condition.") ORDER BY U.secondstime ASC ";

		
	}
	//Completed
		//echo $query; 	
         $db->setQuery($query);
		$dashboard_submit = $db->loadObjectlist();
		
		return  $dashboard_submit;
	}
	  
	  
  
 
  
 function allpropertyids()
  {
	$db =& JFactory::getDBO();
	$user=JFactory::getUser();
	$sql1 = "SELECT property_id as id FROM #__cam_propertyowner_link  where propertyowner_id='".$user->id."' AND link_value='1'";
	$db->setQuery($sql1);
	$total_properties = $db->loadObjectList();
	
	foreach($total_properties as $id ){
		$property_id[] = $id->id;
	}
	return $property_id ;	
}



	function _buildQuery1()
	{
	// Get the unsubmited rfp list
	//$where = $this->_buildContentWhere();
	$db= JFactory::getDBO();
	$user =& JFactory::getUser();
	$user_id = $user->get('id');
	$usertype = $user->get('user_type');
	//if($usertype ==13){
		$query = "SELECT id FROM #__cam_camfirminfo WHERE cust_id=".$user_id;
		$db->setQuery($query);
		$comp_id = $db->loadResult();

		$query_get = "SELECT cust_id FROM #__cam_customer_companyinfo WHERE comp_id=".$comp_id;
		$db->setQuery($query_get);
		$managers = $db->loadObjectList();

	//echo count($managers);
if($usertype ==13 && count($managers)!=0){
for($i=0; $i<count($managers);$i++){
$condition = $condition." OR U.cust_id='".$managers[$i]->cust_id."'";
$query1= "SELECT U.id,U.projectName,U.createdDate,V.property_name,U.publish,U.rfp_type,U.jobtype FROM #__cam_rfpinfo as U LEFT JOIN #__cam_property  as V ON U.property_id = V.id WHERE (U.rfp_type = 'draft' OR U.publish = 2) and
 (U.cust_id='".$user_id."' ".$condition.") ORDER BY U.createdDate DESC";
		}
		}
		else{
	$query1= "SELECT U.id,U.projectName,U.createdDate,V.property_name,U.publish,U.rfp_type,U.jobtype FROM #__cam_rfpinfo as U LEFT JOIN #__cam_property  as V ON U.property_id = V.id WHERE (U.rfp_type = 'draft' OR U.publish = 2) and U.cust_id='".$user_id."' ORDER BY U.createdDate DESC";
	}

	//If user district manager
		if($user->dmanager == 'yes'){
		$dmmanagers = "SELECT managerid FROM #__cam_invitemanagers WHERE dmanager=".$user->id;
		$db->setQuery($dmmanagers);
		$dm_managers = $db->loadObjectlist();
		for($i=0; $i<count($dm_managers);$i++){
$condition = $condition." OR U.cust_id='".$dm_managers[$i]->managerid."'";
$query1 = "SELECT U.id,U.projectName,U.proposalDueDate,U.proposalDueTime,V.property_name,U.cust_id,U.publish,U.createdDate,U.rfp_type,U.jobtype FROM #__cam_rfpinfo as U LEFT JOIN #__cam_property as V ON U.property_id = V.id WHERE (U.rfp_type = 'draft' OR U.publish = 2) and (U.cust_id='".$user_id."' ".$condition.") ORDER BY U.secondstime ASC";
//echo $query1; //exit;
		}
		}
//		Completed
		// To get the query for master account
	if($usertype ==13 && $user->accounttype == 'master')
		{$sql1 = "SELECT firmid from #__cam_masteraccounts where masterid=".$user->id." ";
			$db->Setquery($sql1);
			$subfirms = $db->loadObjectlist();
			//echo "<pre>"; print_r($subfirms); echo "</pre>";
	if($subfirms)
		{
			for( $a=0; $a<count($subfirms); $a++ )
				{
					$firmid1[] = $subfirms[$a]->firmid;
					$sql = "SELECT id from #__cam_camfirminfo where cust_id=".$subfirms[$a]->firmid." ";
					$db->Setquery($sql);
					$companyid[] = $db->loadResult();
											
				}
				//echo "<pre>"; print_r($firmid1); echo "</pre>";	
        }
			
	if($companyid)
		{
         	for( $c=0; $c<count($companyid); $c++ )
				{
					$sql_cid = "SELECT cust_id from #__cam_customer_companyinfo where comp_id=".$companyid[$c]." ";
					$db->Setquery($sql_cid);
					$managerids = $db->loadObjectList();
						if($managerids) {
							foreach( $managerids as $last_mans){
								$total_mangrs[] = $last_mans->cust_id ;
							}
						}
               }
        }
		
	if($firmid1 && $total_mangrs )
		{
            $total_mangrs = array_merge($total_mangrs,$firmid1); 
        }
	if($firmid1){
            for( $d=0; $d<count($firmid1); $d++ ){
        $query = "SELECT id FROM #__cam_camfirminfo WHERE cust_id=".$firmid1[$d];
	$db->setQuery($query);
	$comp_id = $db->loadResult();
	$userid=array($user->id);
	$query_mans = "SELECT cust_id from #__cam_customer_companyinfo where comp_id = ".$comp_id." ";
	$db->setQuery($query_mans);
        $Managers_list1 = $db->loadObjectList();
                if($Managers_list1) {
                        foreach( $Managers_list1 as $Managers_list2){
                                $Managers_list[] = $Managers_list2->cust_id ;
                        }
                }
            }
        if($Managers_list){
        $total_mangrs = array_merge($Managers_list,$firmid1);
            } else {
         $total_mangrs = $firmid1;        
            }
        }		
        $userid=array($user->id);
        if($total_mangrs){
        $total_mangrs = array_merge($userid,$total_mangrs); 
		}
		else{
		$total_mangrs[] = $user->id; 
		}
		$totalcust_id1_arr = implode($total_mangrs,',');
		$condition = " U.cust_id IN (".$totalcust_id1_arr.")";
		
$query1= "SELECT U.id,U.projectName,U.createdDate,V.property_name,U.publish,U.rfp_type,U.jobtype FROM #__cam_rfpinfo as U LEFT JOIN #__cam_property  as V ON U.property_id = V.id WHERE (U.rfp_type = 'draft' OR U.publish = 2) and ".$condition." ORDER BY U.createdDate DESC";
		
	}
	
	//echo $query; 
	//Completed

		return $query1;
	}

	function _buildQuery2()
	{

		//	 Get the closed rfp list
		//$where = $this->_buildContentWhere();
		$db= JFactory::getDBO();
		$user =& JFactory::getUser();
		$user_id = $user->get('id');

		$rfpquery = "SELECT  rfpid  FROM `#__cam_awardlist`";
		$db->setQuery($rfpquery);
	    $rfpids=$db->loadObjectList();
		for($l=0;$l<=count($rfpids);$l++){
		if($rfpids[$l]->rfpid)
		$rfp[]=$rfpids[$l]->rfpid;
		}
		//echo "<pre>"; print_r($rfp); exit;
		$today = date('m-d-Y');
		$time = date("h:i");
		$time = str_replace(' ','',$time);

/*		$query2 = "SELECT U.id,CA.rfpid,U.property_id,U.projectName,U.proposalDueDate,V.property_name,U.rfp_type FROM #__cam_rfpinfo as U
	 	LEFT JOIN #__cam_property  as V ON U.property_id = V.id LEFT JOIN #__cam_awardlist as CA ON CA.rfpid=U.id WHERE  U.rfp_type = 'rfp' and U.proposalDueDate < '$today' AND U.id NOT IN ('".implode(',', $rfp)."') AND U.cust_id='".$user_id."' ORDER BY U.id DESC";*/

	/*echo  $query2 = "SELECT U.id,U.property_id,U.projectName,U.proposalDueDate,V.property_name FROM #__cam_rfpinfo as U
	    LEFT JOIN #__cam_property  as V ON U.property_id = V.id LEFT JOIN #__cam_awardlist as CA ON U.id=CA.rfpid WHERE  CA.rfpid=U.id AND U.proposalDueDate < '$today'  AND U.cust_id='".$user_id."' ORDER BY U.id";*/
		$usertype = $user->get('user_type');
	//if($usertype ==13){
		$query = "SELECT id FROM #__cam_camfirminfo WHERE cust_id=".$user_id;
		$db->setQuery($query);
		$comp_id = $db->loadResult();

		$query_get = "SELECT cust_id FROM #__cam_customer_companyinfo WHERE comp_id=".$comp_id;
		$db->setQuery($query_get);
		$managers = $db->loadObjectList();
		//echo count($managers);
		if($usertype ==13 && count($managers)!=0){
for($i=0; $i<count($managers);$i++){
$condition = $condition." OR U.cust_id='".$managers[$i]->cust_id."'";
$query2 = "SELECT U.id,U.projectName,U.createdDate,U.proposalDueDate,U.unawardeddate,V.property_name,U.biddingcloseddate,U.jobtype,V.timezone FROM #__cam_rfpinfo as U LEFT JOIN #__cam_property  as V ON U.property_id = V.id WHERE U.rfp_type = 'closed' and U.publish ='1'  and (U.cust_id='".$user_id."' ".$condition.") ORDER BY str_to_date( U.biddingcloseddate, '%m-%d-%Y' ) DESC";
		}
		}
		else{

		$query2 = "SELECT U.id,U.projectName,U.createdDate,U.proposalDueDate,U.unawardeddate,V.property_name,U.biddingcloseddate,U.jobtype,V.timezone FROM #__cam_rfpinfo as U LEFT JOIN #__cam_property  as V ON U.property_id = V.id WHERE U.rfp_type = 'closed' and U.publish ='1'  and U.cust_id='".$user_id."' ORDER BY str_to_date( U.biddingcloseddate, '%m-%d-%Y' ) DESC";
		//return $query2;
		}

	//If user property owner

	if($usertype == 16 )
{
	$db =& JFactory::getDBO();
	$user=JFactory::getUser();
	$total_managers = $this->getallmanagerids(); 
	foreach( $total_managers as $last_mans){
		$managers_links[] = $last_mans->user_id ;
		$property_links[] = $last_mans->property_id ;
	}
	 $loggeduser[] = $user->id;
	
	$total_pids = $this->userallproperties();
    
	foreach( $total_pids as $last_pids){
	$property_total[] = $last_pids->id ;
	}
		

	if($managers_links)
		$final_mans = array_merge($loggeduser,$managers_links);
	else
		$final_mans = $loggeduser;
		
		if($property_links && $property_total)
		$final_pmans = array_merge($property_total,$property_links);
		else if($property_links)
		$final_pmans = $property_links;
	else
		$final_pmans = $property_total;
	
	
	$implode_mans = implode(',',$final_mans);
	$implode_ps = implode(',',$final_pmans);

	
 $condition = 'U.cust_id IN('.$implode_mans.') AND U.property_id IN('.$implode_ps.')' ;
 $query2 = "SELECT U.id,U.projectName,U.proposalDueDate,U.proposalDueTime,V.property_name,U.cust_id,U.publish,U.createdDate,U.biddingcloseddate,U.jobtype,V.timezone FROM #__cam_rfpinfo as U LEFT JOIN #__cam_property as V ON U.property_id = V.id WHERE U.rfp_type = 'closed' and U.publish='1' and  ".$condition." ORDER BY str_to_date( U.biddingcloseddate, '%m-%d-%Y' ) DESC";
 }	
		

		
		//If user district manager
		if($user->dmanager == 'yes'){
		$dmmanagers = "SELECT managerid FROM #__cam_invitemanagers WHERE dmanager=".$user->id;
		$db->setQuery($dmmanagers);
		$dm_managers = $db->loadObjectlist();
		for($i=0; $i<count($dm_managers);$i++){
$condition = $condition." OR U.cust_id='".$dm_managers[$i]->managerid."'";
$query2 = "SELECT U.id,U.projectName,U.proposalDueDate,U.proposalDueTime,V.property_name,U.cust_id,U.publish,U.createdDate,U.biddingcloseddate,U.jobtype,V.timezone FROM #__cam_rfpinfo as U LEFT JOIN #__cam_property as V ON U.property_id = V.id WHERE U.rfp_type = 'closed' and U.publish='1' and (U.cust_id='".$user_id."' ".$condition.") ORDER BY str_to_date( U.biddingcloseddate, '%m-%d-%Y' ) DESC";
		}
		}
//		Completed
// To get the query for master account
	if($usertype ==13 && $user->accounttype == 'master')
		{$sql1 = "SELECT firmid from #__cam_masteraccounts where masterid=".$user->id." ";
			$db->Setquery($sql1);
			$subfirms = $db->loadObjectlist();
			//echo "<pre>"; print_r($subfirms); echo "</pre>";
	if($subfirms)
		{
			for( $a=0; $a<count($subfirms); $a++ )
				{
					$firmid1[] = $subfirms[$a]->firmid;
					$sql = "SELECT id from #__cam_camfirminfo where cust_id=".$subfirms[$a]->firmid." ";
					$db->Setquery($sql);
					$companyid[] = $db->loadResult();
											
				}
				//echo "<pre>"; print_r($firmid1); echo "</pre>";	
        }
			
	if($companyid)
		{
         	for( $c=0; $c<count($companyid); $c++ )
				{
					$sql_cid = "SELECT cust_id from #__cam_customer_companyinfo where comp_id=".$companyid[$c]." ";
					$db->Setquery($sql_cid);
					$managerids = $db->loadObjectList();
						if($managerids) {
							foreach( $managerids as $last_mans){
								$total_mangrs[] = $last_mans->cust_id ;
							}
						}
               }
        }
		
	if($firmid1 && $total_mangrs )
		{
            $total_mangrs = array_merge($total_mangrs,$firmid1); 
        }
	if($firmid1){
            for( $d=0; $d<count($firmid1); $d++ ){
        $query = "SELECT id FROM #__cam_camfirminfo WHERE cust_id=".$firmid1[$d];
	$db->setQuery($query);
	$comp_id = $db->loadResult();
	$userid=array($user->id);
	$query_mans = "SELECT cust_id from #__cam_customer_companyinfo where comp_id = ".$comp_id." ";
	$db->setQuery($query_mans);
        $Managers_list1 = $db->loadObjectList();
                if($Managers_list1) {
                        foreach( $Managers_list1 as $Managers_list2){
                                $Managers_list[] = $Managers_list2->cust_id ;
                        }
                }
            }
        if($Managers_list){
        $total_mangrs = array_merge($Managers_list,$firmid1);
            } else {
         $total_mangrs = $firmid1;        
            }
        }		
        $userid=array($user->id);
        if($total_mangrs){
        $total_mangrs = array_merge($userid,$total_mangrs); 
		}
		else{
		$total_mangrs[] = $user->id; 
		}
		
		$totalcust_id1_arr = implode($total_mangrs,',');
		$condition = " U.cust_id IN (".$totalcust_id1_arr.")";
 $query2 = "SELECT U.id,U.projectName,U.proposalDueDate,U.proposalDueTime,V.property_name,U.cust_id,U.publish,U.createdDate,U.biddingcloseddate,U.jobtype,V.timezone FROM #__cam_rfpinfo as U LEFT JOIN #__cam_property as V ON U.property_id = V.id WHERE U.rfp_type = 'closed' and  ".$condition." ORDER BY str_to_date( U.biddingcloseddate, '%m-%d-%Y' ) DESC";
		
	}
	//Completed

		return $query2;
//print_r($query2); exit;


	}
	
	
	function _buildQuery4()
	{
		//Get the awardlist
		//$where = $this->_buildContentWhere();
		$db= JFactory::getDBO();
	$user =& JFactory::getUser();
	$user_id = $user->get('id');
	$usertype = $user->get('user_type');
	$rated = JRequest::getVar('rated','');
	if($rated == ''){
	$survey_c = " (U.rfp_type = 'Awarded' && U.apple = '0') " ; 
	} else {
	$survey_c = " (U.rfp_type = 'Awarded' && U.apple != '0') ";	
	}
	
	//if($usertype ==13){
		$query = "SELECT id FROM #__cam_camfirminfo WHERE cust_id=".$user_id;
		$db->setQuery($query);
		$comp_id = $db->loadResult();

		$query_get = "SELECT cust_id FROM #__cam_customer_companyinfo WHERE comp_id=".$comp_id;
		$db->setQuery($query_get);
		$managers = $db->loadObjectList();
		//echo count($managers);
		if($usertype ==13 && count($managers)!=0 && $user->accounttype != 'master'){
for($i=0; $i<count($managers);$i++){
$condition = $condition." OR U.cust_id='".$managers[$i]->cust_id."'";
$query4= "SELECT DISTINCT(U.id),U.projectName,U.createdDate,U.awardeddate,V.property_name,H.amount,H.awarded_vendor,U.jobtype FROM #__cam_rfpinfo as U LEFT JOIN  #__cam_property  as V ON U.property_id = V.id  LEFT JOIN  #__cam_outsidevendor  as H ON U.id = H.rfpid WHERE ".$survey_c." and (U.cust_id='".$user_id."' ".$condition.") and U.awardjobaproval !=1 and U.awardjobdecline !=2 ORDER BY U.id DESC";
		}
		}
		
		
		//If user property owner

else if($usertype == 16 )
{
	$db =& JFactory::getDBO();
	$user=JFactory::getUser();
	$total_managers = $this->getallmanagerids(); 
	foreach( $total_managers as $last_mans){
		$managers_links[] = $last_mans->user_id ;
		$property_links[] = $last_mans->property_id ;
	}
	 $loggeduser[] = $user->id;
	
	$total_pids = $this->userallproperties();
    
	foreach( $total_pids as $last_pids){
	$property_total[] = $last_pids->id ;
	}
		

	if($managers_links)
		$final_mans = array_merge($loggeduser,$managers_links);
	else
		$final_mans = $loggeduser;
		
		if($property_links && $property_total)
		$final_pmans = array_merge($property_total,$property_links);
		else if($property_links)
		$final_pmans = $property_links;
	    else
		$final_pmans = $property_total;
	
	
	$implode_mans = implode(',',$final_mans);
	$implode_ps = implode(',',$final_pmans);

	
 $condition = 'U.cust_id IN('.$implode_mans.') AND U.property_id IN('.$implode_ps.')' ;
$query4= "SELECT DISTINCT(U.id),U.projectName,U.createdDate,U.awardeddate,V.property_name,H.amount,H.awarded_vendor,U.jobtype FROM #__cam_rfpinfo as U LEFT JOIN  #__cam_property  as V ON U.property_id = V.id  LEFT JOIN  #__cam_outsidevendor  as H ON U.id = H.rfpid WHERE ".$survey_c." and ".$condition." and U.awardjobaproval !=1 and U.awardjobdecline !=2 ORDER BY U.id DESC";		
	}	
		// To get the query for master account
	else if($usertype ==13 && $user->accounttype == 'master')
		{
			$sql1 = "SELECT firmid from #__cam_masteraccounts where masterid=".$user->id." ";
			$db->Setquery($sql1);
			$subfirms = $db->loadObjectlist();
			//echo "<pre>"; print_r($subfirms); echo "</pre>";
	if($subfirms)
		{
			for( $a=0; $a<count($subfirms); $a++ )
				{
					$firmid1[] = $subfirms[$a]->firmid;
					$sql = "SELECT id from #__cam_camfirminfo where cust_id=".$subfirms[$a]->firmid." ";
					$db->Setquery($sql);
					$companyid[] = $db->loadResult();
											
				}
				//echo "<pre>"; print_r($firmid1); echo "</pre>";	
        }
			
	if($companyid)
		{
         	for( $c=0; $c<count($companyid); $c++ )
				{
					$sql_cid = "SELECT cust_id from #__cam_customer_companyinfo where comp_id=".$companyid[$c]." ";
					$db->Setquery($sql_cid);
					$managerids = $db->loadObjectList();
						if($managerids) {
							foreach( $managerids as $last_mans){
								$total_mangrs[] = $last_mans->cust_id ;
							}
						}
               }
        }
		
	if($firmid1 && $total_mangrs )
		{
            $total_mangrs = array_merge($total_mangrs,$firmid1); 
        }
	if($firmid1){
            for( $d=0; $d<count($firmid1); $d++ ){
        $query = "SELECT id FROM #__cam_camfirminfo WHERE cust_id=".$firmid1[$d];
	$db->setQuery($query);
	$comp_id = $db->loadResult();
	$userid=array($user->id);
	$query_mans = "SELECT cust_id from #__cam_customer_companyinfo where comp_id = ".$comp_id." ";
	$db->setQuery($query_mans);
        $Managers_list1 = $db->loadObjectList();
                if($Managers_list1) {
                        foreach( $Managers_list1 as $Managers_list2){
                                $Managers_list[] = $Managers_list2->cust_id ;
                        }
                }
            }
       if($Managers_list){
        $total_mangrs = array_merge($Managers_list,$firmid1);
            } else {
         $total_mangrs = $firmid1;        
            }
        }	
        $userid=array($user->id);
        if($total_mangrs){
        $total_mangrs = array_merge($userid,$total_mangrs); 
		}
		else{
		$total_mangrs[] = $user->id; 
		}
		$totalcust_id1_arr = implode($total_mangrs,',');
		
		$condition = " U.cust_id IN (".$totalcust_id1_arr.")";
		$query4 = "SELECT DISTINCT(U.id),U.projectName,U.createdDate,U.awardeddate,V.property_name,H.amount,H.awarded_vendor,U.jobtype FROM #__cam_rfpinfo as U LEFT JOIN  #__cam_property  as V ON U.property_id = V.id  LEFT JOIN  #__cam_outsidevendor  as H ON U.id = H.rfpid WHERE ".$survey_c." and ".$condition." and U.awardjobaproval !=1 and U.awardjobdecline !=2 ORDER BY U.id DESC";
	}
	//Completed
	
		else{
		$query4= "SELECT U.id,U.projectName,U.createdDate,U.awardeddate,V.property_name,H.amount,H.awarded_vendor,U.jobtype FROM #__cam_rfpinfo as U LEFT JOIN  #__cam_property  as V ON U.property_id = V.id  LEFT JOIN  #__cam_outsidevendor  as H ON U.id = H.rfpid WHERE ".$survey_c." and U.cust_id='".$user_id."' and U.awardjobaproval !=1 and U.awardjobdecline !=2  ORDER BY U.id DESC";
		}
		
		return $query4;
	}

	
	
	

	function _buildQuery5()
	{
		// Get the unawardlist
		//$where = $this->_buildContentWhere();
		$db= JFactory::getDBO();
	$user =& JFactory::getUser();
	$user_id = $user->get('id');
	$usertype = $user->get('user_type');
	//if($usertype ==13){
		$query = "SELECT id FROM #__cam_camfirminfo WHERE cust_id=".$user_id;
		$db->setQuery($query);
		$comp_id = $db->loadResult();
		$query_get = "SELECT cust_id FROM #__cam_customer_companyinfo WHERE comp_id=".$comp_id;
		$db->setQuery($query_get);
		$managers = $db->loadObjectList();
		//echo count($managers);
		if($usertype ==13 && count($managers)!=0){
for($i=0; $i<count($managers);$i++){
$condition = $condition." OR U.cust_id='".$managers[$i]->cust_id."'";
$query5= "SELECT U.id,U.projectName,U.createdDate,U.proposalDueDate, U.biddingcloseddate, U.unawardeddate,V.property_name,U.jobtype FROM #__cam_rfpinfo as U LEFT JOIN #__cam_property  as V ON U.property_id = V.id WHERE U.rfp_type = 'Unawarded' and (U.cust_id='".$user_id."' ".$condition.") ORDER BY U.id DESC";
		}
		}
		else{
	$query5= "SELECT U.id,U.projectName,U.createdDate,U.proposalDueDate,U.biddingcloseddate,U.unawardeddate,V.property_name,U.jobtype FROM #__cam_rfpinfo as U LEFT JOIN #__cam_property  as V ON U.property_id = V.id WHERE U.rfp_type = 'Unawarded' and U.cust_id='".$user_id."' ORDER BY U.id DESC";
		}
		//If user district manager
		if($user->dmanager == 'yes'){
		$dmmanagers = "SELECT managerid FROM #__cam_invitemanagers WHERE dmanager=".$user->id;
		$db->setQuery($dmmanagers);
		$dm_managers = $db->loadObjectlist();
		for($i=0; $i<count($dm_managers);$i++){
$condition = $condition." OR U.cust_id='".$dm_managers[$i]->managerid."'";
$query5 = "SELECT U.id,U.projectName,U.proposalDueDate,U.biddingcloseddate,U.proposalDueTime,U.unawardeddate,V.property_name,U.cust_id,U.publish,U.createdDate,U.jobtype FROM #__cam_rfpinfo as U LEFT JOIN #__cam_property as V ON U.property_id = V.id WHERE U.rfp_type = 'Unawarded' and U.publish='1' and (U.cust_id='".$user_id."' ".$condition.") ORDER BY U.secondstime ASC";
		}
		}
//		Completed

		// To get the query for master account
	if($usertype ==13 && $user->accounttype == 'master')
		{
			$sql1 = "SELECT firmid from #__cam_masteraccounts where masterid=".$user->id." ";
			$db->Setquery($sql1);
			$subfirms = $db->loadObjectlist();
			//echo "<pre>"; print_r($subfirms); echo "</pre>";
	if($subfirms)
		{
			for( $a=0; $a<count($subfirms); $a++ )
				{
					$firmid1[] = $subfirms[$a]->firmid;
					$sql = "SELECT id from #__cam_camfirminfo where cust_id=".$subfirms[$a]->firmid." ";
					$db->Setquery($sql);
					$companyid[] = $db->loadResult();
											
				}
				//echo "<pre>"; print_r($firmid1); echo "</pre>";	
        }
			
	if($companyid)
		{
         	for( $c=0; $c<count($companyid); $c++ )
				{
					$sql_cid = "SELECT cust_id from #__cam_customer_companyinfo where comp_id=".$companyid[$c]." ";
					$db->Setquery($sql_cid);
					$managerids = $db->loadObjectList();
						if($managerids) {
							foreach( $managerids as $last_mans){
								$total_mangrs[] = $last_mans->cust_id ;
							}
						}
               }
        }
		
	if($firmid1 && $total_mangrs )
		{
            $total_mangrs = array_merge($total_mangrs,$firmid1); 
        }
	if($firmid1){
            for( $d=0; $d<count($firmid1); $d++ ){
        $query = "SELECT id FROM #__cam_camfirminfo WHERE cust_id=".$firmid1[$d];
	$db->setQuery($query);
	$comp_id = $db->loadResult();
	$userid=array($user->id);
	$query_mans = "SELECT cust_id from #__cam_customer_companyinfo where comp_id = ".$comp_id." ";
	$db->setQuery($query_mans);
        $Managers_list1 = $db->loadObjectList();
                if($Managers_list1) {
                        foreach( $Managers_list1 as $Managers_list2){
                                $Managers_list[] = $Managers_list2->cust_id ;
                        }
                }
            }
        if($Managers_list){
        $total_mangrs = array_merge($Managers_list,$firmid1);
            } else {
         $total_mangrs = $firmid1;        
            }
        }		
        $userid=array($user->id);
        if($total_mangrs){
        $total_mangrs = array_merge($userid,$total_mangrs); 
		}
		else{
		$total_mangrs[] = $user->id; 
		}
		$totalcust_id1_arr = implode($total_mangrs,',');
		$condition = " U.cust_id IN (".$totalcust_id1_arr.")";
		//$query4 = "SELECT DISTINCT(U.id),U.projectName,U.createdDate,U.awardeddate,V.property_name,H.amount,H.awarded_vendor FROM #__cam_rfpinfo as U LEFT JOIN  #__cam_property  as V ON U.property_id = V.id  LEFT JOIN  #__cam_outsidevendor  as H ON U.id = H.rfpid WHERE ".$survey_c." and ".$condition." ORDER BY U.id DESC";
		$query5 = "SELECT U.id,U.projectName,U.proposalDueDate,U.biddingcloseddate,U.proposalDueTime,U.unawardeddate,V.property_name,U.cust_id,U.publish,U.createdDate,U.jobtype FROM #__cam_rfpinfo as U LEFT JOIN #__cam_property as V ON U.property_id = V.id WHERE U.rfp_type = 'Unawarded' and U.publish='1' and ".$condition." ORDER BY U.secondstime ASC";

	}
	//Completed
		return $query5;
	}

	function overviewrfpsubmitedrfp()
	{
		if (empty($submitedrfp))
		{
			$query = $this->_buildQuery();
			$submitedrfp = $this->_getList($query,$this->getState("limitstart"),$this->getState("limit"));
			// echo "<pre>"; print_r($submitedrfp);
		}
		return $submitedrfp;
	}

	function _buildQuery3()
	{
	$rid = JRequest::getVar('rid','');
	//$query3 = "select U.id,U.rfpno,V.name,V.email,V.lastname,U.Alt_bid,U.proposal_total_price,U.proposedvendorid,U.proposaltype from #__cam_vendor_proposals as U LEFT JOIN #__users  as V ON U.proposedvendorid = V.id  where (U.proposaltype='Submit' or U.proposaltype='resubmit') and U.rfpno=".$rid;
	//$query3 = "select U.id,U.rfpno,V.name,V.email,V.lastname,U.Alt_bid,cv.company_name,U.proposal_total_price,U.proposedvendorid,U.proposaltype from #__cam_vendor_proposals as U LEFT JOIN #__users  as V ON U.proposedvendorid = V.id LEFT JOIN #__cam_vendor_company as cv ON cv.user_id=U.proposedvendorid where (U.proposaltype='Submit' or U.proposaltype='resubmit') and U.Alt_bid!='yes' and publish!='2' and V.id!='' and U.rfpno=".$rid;
	$query3 = "select U.id,U.rfpno,V.name,V.email,V.ccemail,V.lastname,U.Alt_bid,cv.company_name,U.proposal_total_price,U.proposedvendorid,U.proposaltype,cv.city, cv.state,cv.company_phone, cv.phone_ext, V.subscribe_type from #__cam_vendor_proposals as U LEFT JOIN #__users  as V ON U.proposedvendorid = V.id LEFT JOIN #__cam_vendor_company as cv ON cv.user_id=U.proposedvendorid where (U.proposaltype='Submit' or U.proposaltype='resubmit') and U.Alt_bid!='yes' and publish!='2' and V.id!='' and U.rfpno=".$rid;
		return $query3 ;
	}
	function getaltproposals()
	{
	$db= JFactory::getDBO();
	$rid = JRequest::getVar('rid','');
	$alt_proposals = "select U.id,U.rfpno,V.name,V.email,V.lastname,U.Alt_bid,cv.company_name,U.proposal_total_price,U.proposedvendorid,U.proposaltype,cv.city, cv.state,cv.company_phone, cv.phone_ext, V.subscribe_type from #__cam_vendor_proposals as U LEFT JOIN #__users  as V ON U.proposedvendorid = V.id LEFT JOIN #__cam_vendor_company as cv ON cv.user_id=U.proposedvendorid where (U.proposaltype='Submit' or U.proposaltype='resubmit') and V.id!='' and U.Alt_bid='yes' and U.rfpno=".$rid;
		$db->setQuery($alt_proposals);
		$alt_proposals1 = $db->loadObjectList();
		
		// To get the compliance documents and new formatt
			for( $sp=0; $sp<count($alt_proposals1); $sp++ ){
	$totalprefers_new_w9	=	$this->checknewspecialrequirements_w9($alt_proposals1[$sp]->proposedvendorid,$rid);		
	$totalprefers_new_gli	=	$this->checknewspecialrequirements_gli($alt_proposals1[$sp]->proposedvendorid,$rid);
	$totalprefers_new_aip	=	$this->checknewspecialrequirements_aip($alt_proposals1[$sp]->proposedvendorid,$rid);
	$totalprefers_new_wci	=	$this->checknewspecialrequirements_wci($alt_proposals1[$sp]->proposedvendorid,$rid);
	$totalprefers_new_umb	=	$this->checknewspecialrequirements_umb($alt_proposals1[$sp]->proposedvendorid,$rid);
	$totalprefers_new_pln	=	$this->checknewspecialrequirements_pln($alt_proposals1[$sp]->proposedvendorid,$rid);
	$totalprefers_new_omi	=	$this->checknewspecialrequirements_omi($alt_proposals1[$sp]->proposedvendorid,$rid);
	
		if($totalprefers_new_gli == 'success' && $totalprefers_new_aip == 'success' && $totalprefers_new_wci == 'success' && $totalprefers_new_umb == 'success' && $totalprefers_new_pln == 'success' && $totalprefers_new_omi == 'success'){
			$alt_proposals1[$sp]->special_requirements = 'success' ;
			$masteraccount = $this->getmasterfirmaccount();
			$sql_terms = "SELECT termsconditions FROM #__cam_vendor_aboutus WHERE vendorid=".$masteraccount." "; 
			$db->setQuery($sql_terms);
			$terms_exist = $db->loadResult();
			if($terms_exist == '1'){
			$sql = "SELECT accepted FROM #__cam_vendor_terms WHERE vendorid=".$alt_proposals1[$sp]->proposedvendorid." and masterid=".$masteraccount." "; 
			$db->setQuery($sql);
			$terms = $db->loadResult();
				if($terms == '1'){
				$alt_proposals1[$sp]->special_requirements = 'success' ;
				}
				else{
				$alt_proposals1[$sp]->special_requirements = 'fail' ;
				}
			}
			else{
			
			}
		}
		else{
			$alt_proposals1[$sp]->special_requirements = 'fail' ;
		}
		//Function to get apple rating
		$rating = $this->getrating($alt_proposals1[$sp]->proposedvendorid);
		$alt_proposals1[$sp]->applerating = $rating ;
		//Function to get state and county
		$statecode  = "SELECT code from #__cam_vendor_states where id=".$alt_proposals1[$sp]->state." " ; 
		$db->setQuery($statecode);
		$statea = $db->loadResult();
		$awardjob[$sp]->statename = $statea ;
		//Function to get JOB type
		$jobtype  = "SELECT jobtype from #__cam_rfpinfo where id=".$rid." " ; 
		$db->setQuery($jobtype);
		$job_type = $db->loadResult();
		$alt_proposals1[$sp]->jobtype = $job_type ;
		//Completed
		// In case of basic request
		if( $job_type == 'yes' ){
			$c_status =	$this->checkcompliancestatus($alt_proposals1[$sp]->proposedvendorid);
			$alt_proposals1[$sp]->special_requirements = $c_status ;
		}
		//Completed
	}
			
			//Completed
			
		return $alt_proposals1;
	}
	
	
	function getaltproposalsids()
	{
	$db= JFactory::getDBO();
	$rid = JRequest::getVar('rid','');
	 $alt_proposals = "select U.id,U.rfpno,V.name,V.email,V.lastname,U.Alt_bid,cv.company_name,U.proposal_total_price,U.proposedvendorid,U.proposaltype,cv.city, cv.state,cv.company_phone, cv.phone_ext, V.subscribe_type from #__cam_vendor_proposals as U LEFT JOIN #__users  as V ON U.proposedvendorid = V.id LEFT JOIN #__cam_vendor_company as cv ON cv.user_id=U.proposedvendorid where (U.proposaltype='Awarded' or U.proposaltype='resubmit') and V.id!='' and U.rfpno=".$rid;
		$db->setQuery($alt_proposals);
		$alt_proposals1 = $db->loadObjectList();
	
		return $alt_proposals1;
	}
	
	
	
	function _unawardingjob(){
	  $aid = JRequest::getVar('aid','');
	  $unaward="SELECT * FROM #__cam_vendor_proposals WHERE id=".$aid;
	  return $unaward;
	}
	function overviewrfpunsubmitedrfp()
	{
		if (empty($unsubmittedrfp))
		{
			$query1 = $this->_buildQuery1();
			$unsubmittedrfp = $this->_getList($query1,$this->getState("limitstart"),$this->getState("limit"));
			// echo "<pre>"; print_r($unsubmitedrfp);
		}

		return $unsubmittedrfp;
	}

	function overviewrfpclosedrfp()
	{
		if (empty($closedrfp))
		{
			$query2 = $this->_buildQuery2();
			$closedrfp = $this->_getList($query2,$this->getState("limitstart"),$this->getState("limit"));
		}
		return $closedrfp;
	}
	function _announcement(){
		$user =& JFactory::getUser();
 		$id = $user->get('id');

		$user_type = $user->get('user_type');
		//print_r($user);
		$db = & JFactory::getDBO();
		$query = "SELECT comp_state FROM #__cam_customer_companyinfo  WHERE `cust_id` =".$id;
		$db->setQuery($query);
		$statename = $db->loadResult();

		if ($user_type){
		$where[] ='user_type='.$user_type;
		}
		if($statename)
		{
		$where[] ='state_name='.$statename;
		}

		//$where=implode(' and ',$where);
		if(count($where)>0)
		{
		$where=implode(' and ',$where);
		$where.=' WHERE '.$where;
		} else
		$where='';

	 	 $announcement = "SELECT announcement from #__cam_announcement ".$where." order by id";
		//}
		//} else if () {
		//$announcement = "SELECT announcement from #__cam_announcement where industry_name='0' AND state_name='0' AND user_type=".$user_type;
		//$db->Setquery($sql);
		//$states = $db->loadObjectlist();
		//echo "<pre>"; print_r($states);

		return $announcement;
	}

	function store_unaward($data)
	{
	//print_r($data); exit;
	 	// give me JTable object
		$row = & $this->getTable('unawarding');
	//echo "<pre>"; print_r($row); exit;
		// Bind the form fields to the  table
		if (!$row->bind($data)) {

			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		// Create the timestamp for the date field
		// Store the  detail record into the database

		if (!$row->store()) {
				//echo "<pre>"; print_r($row); exit;
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		return true;
	}
	function store_outsidevendor($data)
	{
	//print_r($data); exit;
	 	// give me JTable object
		$row = & $this->getTable('outsidevendor');

		// Bind the form fields to the  table
		if (!$row->bind($data)) {

			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		// Create the timestamp for the date field
		// Store the  detail record into the database

		if (!$row->store()) {
				//echo "<pre>"; print_r($row); exit;
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		return true;
	}

	function store_rfp($data)
	{

	 	// give me JTable object
		$row = & $this->getTable('rfp');
	//echo "<pre>"; print_r($row); exit;
		// Bind the form fields to the  table
		if (!$row->bind($data)) {

			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		// Create the timestamp for the date field
		// Store the  detail record into the database

		if (!$row->store()) {
				//echo "<pre>"; print_r($row); exit;
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		return true;
	}

	function updateunsubmited()
	{
		$id = JRequest::getVar('id');
		$db = & JFactory::getDBO();
		$query = "UPDATE #__cam_rfpinfo SET `rfp_type` = 'rfp' WHERE `id` =".id;
		$db->setQuery($query);
		$result = $db->query();
		return $result;
	}
	//To get the survey rfps
	function surveyrfps(){
        $user =& JFactory::getUser();
 		$id = $user->get('id');
 		$usertype = $user->get('user_type');		
        $db = & JFactory::getDBO();
        $survey =$db->setQuery("SELECT survey_days FROM #__cam_configuration");
        $res_survey = $db->loadResult();
		//To get all managers
		$query = "SELECT id FROM #__cam_camfirminfo WHERE cust_id=".$id;
		$db->setQuery($query);
		$comp_id = $db->loadResult();
		$query_get = "SELECT cust_id FROM #__cam_customer_companyinfo WHERE comp_id=".$comp_id;
		$db->setQuery($query_get);
		$managers = $db->loadObjectList();
		
		if($usertype ==13 && count($managers)!=0){
for($i=0; $i<count($managers);$i++){
$condition = $condition." OR cust_id='".$managers[$i]->cust_id."'";
$sql_award= "SELECT awardeddate,id FROM #__cam_rfpinfo WHERE rfp_type='Awarded' AND survey=0 AND (cust_id='".$id."' ".$condition.")";
		}
		}
		else{
		$sql_award= "SELECT awardeddate,id FROM #__cam_rfpinfo WHERE rfp_type='Awarded' AND survey=0 AND cust_id=".$id;
		}
//		echo $sql_award; exit;
		//Completed
//		$sql_award = "SELECT awardeddate,id FROM #__cam_rfpinfo WHERE rfp_type='Awarded' AND survey=0 AND cust_id=".$id ; 
        $award_rfp =$db->setQuery($sql_award);
        $award_rfp = $db->loadObjectList();
        for($r=0; $r<count($award_rfp); $r++){   ///To get the download links
		$fdate =  $award_rfp[$r]->awardeddate;
        $date2= explode('-',$fdate);
		$date= $date2[1];
		$month= $date2[0];
		$year= $date2[2];
		$rfpdate = $year.'-'.$month.'-'.$date;
		$award_date = strtotime($rfpdate);

		$today = date('Y-m-d');
		$today_date = strtotime($today);

		$minus = 86400 * $res_survey;
        $intr_survey =$db->setQuery("SELECT introtext FROM #__content WHERE id=224");
        $intr_survey = $db->loadResult();
		$surveyrfps[0] = $intr_survey;
		if($today_date-$award_date >= $minus){
			$surveyrfps[] = $award_rfp[$r]->id;
			}
        }
		
		return $surveyrfps;
        }
	//Completed	
	function getcompanies(){
		$db= JFactory::getDBO();
		$companies = $db->setQuery("SELECT user_id, company_name FROM #__cam_vendor_company order by company_name");
		$coms = $db->loadObjectList();
		return $coms;
		}  
	function store_invitation($post) {
		//echo "In model"; echo "<pre>"; print_r($post); exit;
		$row = & $this->getTable('managerinvitation');
		if (!$row->bind($post)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
		}
		
		function get_RFPinfo()
	{
		$rfp_id = JRequest::getVar('rfp_id','');
		$Prp_id = JRequest::getVar('Prp_id','');
	    $db = JFactory::getDBO();
		$sql = 'SELECT I.industry_name, U.name, U.showphone,U.showfax,U.showaddress,U.showcompany,U.showemail,U.lastname,U.user_type, U.email, U.extension, U.phone, C.comp_name, C.comp_city, C.comp_state, C.comp_phno, C.comp_extnno, C.comp_alt_phno, C.comp_alt_extnno, C.comp_website, C.mailaddress, P.street, P.property_name, P.state, P.city, P.zip, P.units,P.divcounty, R.id, R.startDate, R.endDate, R.projectName,R.work_perform,R.bidders_info,R.site_visit, R.frequency, R.proposalDueDate, R.proposalDueTime, R.work_perform_other, R.jobnotes, R.cust_id FROM #__cam_rfpinfo as R
		LEFT JOIN  #__cam_customer_companyinfo as C ON R.cust_id = C.cust_id
		LEFT JOIN  #__cam_industries  as I ON R.industry_id = I.id
		LEFT JOIN  #__cam_property as P ON R.property_id = P.id
		LEFT JOIN  #__users as U ON R.cust_id = U.id WHERE R.id = '.$rfp_id;
		$db->Setquery($sql);
		$RFP_details = $db->loadObjectList();
		$state_name = $this->getstatename($RFP_details[0]->comp_state);
		$RFP_details[0]->comp_state = $state_name;
		if ($RFP_details[0]->units < 200) {
		$RFP_details[0]->units_text = '200 or Less';
		} elseif ($RFP_details[0]->units > 200 && $RFP_details[0]->units <= 300) {
		$RFP_details[0]->units_text = '200 to 300';
		}  elseif ($RFP_details[0]->units > 300 && $RFP_details[0]->units <= 400) {
		$RFP_details[0]->units_text = '300 to 400';
		} elseif ($RFP_details[0]->units > 400 && $RFP_details[0]->units <= 500) {
		$RFP_details[0]->units_text = '400 to 500';
		} elseif ($RFP_details[0]->units > 500 && $RFP_details[0]->units <= 600) {
		$RFP_details[0]->units_text = '500 to 600';
		} elseif ($RFP_details[0]->units > 600 && $RFP_details[0]->units <= 700) {
		$RFP_details[0]->units_text = '600 to 700';
		} elseif ($RFP_details[0]->units > 700 && $RFP_details[0]->units <= 800) {
		$RFP_details[0]->units_text = '700 to 800';
		} elseif ($RFP_details[0]->units > 800 && $RFP_details[0]->units <= 900) {
		$RFP_details[0]->units_text = '800 to 900';
		} elseif ($RFP_details[0]->units > 900 && $RFP_details[0]->units <= 1000) {
		$RFP_details[0]->units_text = '900 to 1000';
		} elseif ($RFP_details[0]->units > 1000 ) {
		$RFP_details[0]->units_text = 'Over 1,000';
		}
		return $RFP_details;
	}
	function getstatename($stateid)
	{
		//echo '<pre>'; print_r($stateid);
		$db = JFactory::getDBO();
		//$query ="select state_name from #__state Where state_id ='".$stateid."'";
		$query ="select state_name from #__state Where id ='".$stateid."'";
		$db->setQuery($query);
		$results = $db->loadResult();
		//echo "<pre>"; print_r($results);
		return $results;
	}
	function get_TASKSinfo_preview($act,$Alt_Prp,$vendorid)
	{
	    $db = JFactory::getDBO();
		$rfp_id = JRequest::getVar('rfp_id','');
		
		$sql = 'SELECT * FROM #__cam_rfpsow_linetask WHERE rfp_id = '.$rfp_id ;
		$db->Setquery($sql);
		$TASK_details = $db->loadObjectList();
		//echo "<pre>"; print_r($_REQUEST);
		if($act == 'Preview')
		{
		  for($p=0; $p<count($TASK_details); $p++) //to get task price
		  {
		  $price_sql = 'SELECT item_price FROM #__cam_rfpsow_docs_lineitems_prices  WHERE item_type="task" AND item_id = '.$TASK_details[$p]->task_id.' AND vendor_id = '.$vendorid.' AND Alt_bid="'.$Alt_Prp.'"' ;
		  $db->Setquery($price_sql);
		  $price = $db->loadResult();
		  $TASK_details[$p]->price = $price;
		  }
		  for($u=0; $u<count($TASK_details); $u++)//to get task related uploaded files
		  {
		   $upld_sql = 'SELECT upload_doc FROM #__cam_rfpsow_uploadfiles  WHERE spl_req = "No" AND task_id = '.$TASK_details[$u]->task_id.' AND rfp_id ='.$rfp_id.' AND vendor_id='.$vendorid.' AND Alt_bid="'.$Alt_Prp.'"'  ;
		  $db->Setquery($upld_sql);
		  $upld_file = $db->loadResultArray();
		  $TASK_details[$u]->uploaded_file = $upld_file;
		  $upld_sql = 'SELECT id FROM #__cam_rfpsow_uploadfiles  WHERE spl_req = "No" AND task_id = '.$TASK_details[$u]->task_id.' AND rfp_id ='.$rfp_id.' AND vendor_id='.$vendorid.' AND Alt_bid="'.$Alt_Prp.'"'  ;
		  $db->Setquery($upld_sql);
		  $upld_doc_ids = $db->loadResultArray();
		  $TASK_details[$u]->uploaded_doc_ids = $upld_doc_ids;
		  $upld_title = array();
		   for($i=0; $i<count($upld_file); $i++)
			{
		 		$arr = explode('/',$upld_file[$i]);
 		 		$cnt = count($arr);
		 		$upld_title[$i] = $arr[$cnt-1];
			}
			$TASK_details[$u]->uploadfile_title = $upld_title;
			$db = JFactory::getDBO();
			$spl_req = 'No';
			$task_id = $TASK_details[$u]->task_id;
			$vendor_id = JRequest::getVar('vendor_id','');
			$sql = 'SELECT add_notes FROM #__cam_rfpsow_addnotes  WHERE status = "active" AND spl_req = "'.$spl_req.'" AND rfp_id = '.$rfp_id.' AND vendor_id ='.$vendorid.' AND task_id='.$task_id.' AND Alt_bid="'.$Alt_Prp.'"' ;
			$db->Setquery($sql);
			$db->query();
		  	$TASK_details[$u]->addnotes_desc = $db->loadResultArray();
			$sql = 'SELECT add_exception,check_exception FROM #__cam_rfpsow_addexception  WHERE status = "active" AND spl_req = "'.$spl_req.'" AND rfp_id = '.$rfp_id.' AND vendor_id ='.$vendorid.' AND task_id='.$task_id.' AND Alt_bid="'.$Alt_Prp.'"' ;
			$db->Setquery($sql);
			$db->query();
                        $result_exception=$db->loadObjectList();
                         $TASK_details[$u]->exception_desc = $result_exception[0]->add_exception;
                         $TASK_details[$u]->check_exception = $result_exception[0]->check_exception;
		  }


		}
		 //echo "<pre>"; print_r($TASK_details); exit;
		return $TASK_details;
	}
	//function to get DOCS info in vendor_proposal_form
	function get_Tasks_DOCSinfo()
	{
	    $db = JFactory::getDBO();
		$rfp_id = JRequest::getVar('rfp_id','');
		$sql = 'SELECT task_id, taskuploads FROM #__cam_rfpsow_linetask  WHERE rfp_id = '.$rfp_id  ;
		$db->Setquery($sql);
		$Tasks_DOCS_details = $db->loadObjectList();
		for($i=0; $i<count($Tasks_DOCS_details); $i++)
		{
		 $arr = explode('/',$Tasks_DOCS_details[$i]->taskuploads);
 		 $cnt = count($arr);
		 $Tasks_DOCS_details[$i]->title = $arr[$cnt-1];
		}
		return $Tasks_DOCS_details;
	}
	//function to get uploaded DOCS in vendor_proposal_edit_form
	function get_Edit_DOCSinfo($Alt_Prp,$vendorid)
	{
	    $db = JFactory::getDBO();
		
		$rfp_id = JRequest::getVar('rfp_id','');
		$sql = 'SELECT * FROM #__cam_rfpsow_uploadfiles  WHERE rfp_id ='.$rfp_id.' AND vendor_id='.$vendorid.' AND Alt_bid = "'.$Alt_Prp.'"' ;
		$db->Setquery($sql);
		$Edit_DOCS_details = $db->loadObjectList();
		return $Edit_DOCS_details;
	}
	function get_SPLReq_Category()
	 {
	  $db = JFactory::getDBO();
	  $rfp_id = JRequest::getVar('rfp_id','');
	  $sql = " SELECT * FROM jos_cam_rfpreq_categories where req_parentid=0";
	  $db->Setquery($sql);
	  $categories = $db->loadObjectList();
	  return $categories;
	 }

	function get_SPLRequirements($act)
	 {
	 global $mainframe;
		$db=&JFactory::getDBO();
	    $rfp_id = JRequest::getVar('rfp_id','');
	    $user = JFactory::getUser();
		$sql = " SELECT b.req_parentid as main_id, a.req_title as main_title FROM jos_cam_rfpreq_categories as a , jos_cam_rfpreq_info as b  WHERE a.req_id = b.req_parentid 	 and b.rfp_id = ".$rfp_id."   group by b.req_parentid order by b.req_parentid ";
		$db->Setquery($sql);
		$main_cat = $db->loadObjectList();
		$SPLRequirements_details['main'] = $main_cat;
		$sql = " SELECT DISTINCT b.req_parentid as main_id,b.price, b.req_subparentid as sub_id, a.req_title as sub_title FROM jos_cam_rfpreq_categories as a , jos_cam_rfpreq_info as b  WHERE a.req_id = b.req_subparentid and b.rfp_id = ".$rfp_id." AND  b.req_subparentid != 0  order by b.req_parentid ";
		$db->Setquery($sql);
		$sub_cat = $db->loadObjectList();
		$SPLRequirements_details['sub'] = $sub_cat;
		$sql = " SELECT b.req_parentid as main_id,b.price, b.req_subparentid as sub_id, b.req_id as child_id, a.req_title as child_title FROM jos_cam_rfpreq_categories as a , jos_cam_rfpreq_info as b  WHERE a.req_id = b.req_id and b.rfp_id = ".$rfp_id." AND b.req_parentid != 0 AND req_subparentid != 0  order by b.req_parentid ";
		$db->Setquery($sql);
		$SPLRequirements_details['child'] = $db->loadObjectList();
	 /*  $db = JFactory::getDBO();
	   $rfp_id = JRequest::getVar('rfp_id','');
	   $user = JFactory::getUser();
	 // $sql = " SELECT a.*, b.price FROM jos_cam_rfpreq_categories as a , jos_cam_rfpreq_info as b  WHERE a.req_id = b.req_id and b.rfp_id = ".$rfp_id."  order by b.req_parentid ";
	 // $sql = " SELECT * FROM jos_cam_rfpreq_info WHERE rfp_id = ".$rfp_id;
	  $sql = " SELECT b.req_parentid as main_id, a.req_title as main_title FROM jos_cam_rfpreq_categories as a , jos_cam_rfpreq_info as b  WHERE a.req_id = b.req_parentid 	 and b.rfp_id = ".$rfp_id."   group by b.req_parentid order by b.req_parentid ";
	  $db->Setquery($sql);
	  $main_cat = $db->loadObjectList();
	  $SPLRequirements_details['main'] = $main_cat;
	   $sql = " SELECT b.req_parentid as main_id, b.req_subparentid as sub_id, a.req_title as sub_title FROM jos_cam_rfpreq_categories as a , jos_cam_rfpreq_info as b  WHERE a.req_id = b.req_subparentid and b.rfp_id = ".$rfp_id." AND  req_subparentid != 0  order by b.req_parentid ";
	  $db->Setquery($sql);
	  $sub_cat = $db->loadObjectList();
	  $SPLRequirements_details['sub'] = $sub_cat;
	  $sql = " SELECT b.req_parentid as main_id, b.req_subparentid as sub_id, b.req_id as child_id, a.req_title as child_title FROM jos_cam_rfpreq_categories as a , jos_cam_rfpreq_info as b  WHERE a.req_id = b.req_id and b.rfp_id = ".$rfp_id." AND b.req_parentid != 0 AND req_subparentid != 0  order by b.req_parentid ";
	  $db->Setquery($sql);
	  $child = $db->loadObjectList();*/
	   //echo "<pre>"; print_r($SPLRequirements_details); exit;
	 /* if($act == 'Edit')
	  {
	  //$sql = " SELECT b.req_parentid as main_id, b.req_subparentid as sub_id, b.req_id as child_id, a.req_title as child_title,c.amount FROM jos_cam_rfpreq_categories as a LEFT JOIN jos_cam_rfpreq_info as b ON a.req_id = b.req_id LEFT JOIN #__cam_rfpsow_splreq_price c ON a.req_id = c.req_id WHERE a.req_id = b.req_id and b.rfp_id = ".$rfp_id." AND b.req_parentid != 0 AND req_subparentid != 0 AND c.vendor_id = ".$user->id."  order by b.req_parentid ";
		  for($x=0; $x<count($child); $x++)
		  {
		  $sql = "SELECT amount FROM  #__cam_rfpsow_splreq_price WHERE req_id = ".$child[$x]->sub_id." AND rfp_id = ".$rfp_id." AND vendor_id = ".$user->id ;
		  $db->Setquery($sql);
		  $amount = $db->loadResult();
		  $child[$x]->amount = $amount;
		  }
	  }*/
	   //$SPLRequirements_details['child'] = $child;
	//echo "<pre>"; print_r($SPLRequirements_details); exit;
	  return $SPLRequirements_details;
	 }
	 //function to get DOCS info in vendor_proposal_form
	function get_DOCSinfo($Act,$Alt_Prp,$vendorid)
	{
	    $db = JFactory::getDBO();
		$rfp_id = JRequest::getVar('rfp_id','');
		$sql = 'SELECT * FROM #__cam_rfpsow_docs WHERE rfp_id = '.$rfp_id ;
		$db->Setquery($sql);
		$DOCS_details = $db->loadObjectList();
		if($Act == 'Edit')
		{
			for($i=0; $i<count($DOCS_details); $i++)
			{
			 $arr = explode('/',$DOCS_details[$i]->doc_path);
			 $cnt = count($arr);
			 $DOCS_details[$i]->title = $arr[$cnt-1];
			 $sql = 'SELECT item_price FROM #__cam_rfpsow_docs_lineitems_prices WHERE rfp_id = '.$rfp_id.' AND vendor_id ='.$vendorid.' AND item_type="doc" AND item_id='.$DOCS_details[$i]->doc_id.' AND Alt_bid="'.$Alt_Prp.'"' ;
			$db->Setquery($sql);
			$price = $db->loadResult();
			$DOCS_details[$i]->price = $price;
			}
		}
		//echo "<pre>"; print_r($DOCS_details);
		for($i=0; $i<count($DOCS_details); $i++)
		{
		 $arr = explode('/',$DOCS_details[$i]->doc_path);
 		 $cnt = count($arr);
		 $DOCS_details[$i]->title = $arr[$cnt-1];
		}
		return $DOCS_details;
	}
	//function to get Proposal Price details in Proposal edit form
	function get_Proposal_price_details($Alt_Prp,$vendorid)
	{
	    $db = JFactory::getDBO();
		$Proposal_id = JRequest::getVar('Proposal_id','');
		$rfp_id = JRequest::getVar('rfp_id','');
		$sql = 'SELECT id,warranty_filepath,warranty_file_text,warranty_file_area,Alt_bid,price_other_items,proposal_total_price,commission,(proposal_total_price-price_other_items) as tasks_total_price FROM #__cam_vendor_proposals  WHERE rfpno = '.$rfp_id.' AND proposedvendorid ='.$vendorid.' AND id='.$Proposal_id.' AND Alt_bid="'.$Alt_Prp.'"' ;
		$db->Setquery($sql);
		$db->query();
		$Proposal_price_details = $db->loadObjectList();
               // echo '<pre>'; print_r($Proposal_price_details); //exit;
		return $Proposal_price_details;
	}
	
	function get_SPLreq_amount($vendorid)
	 {
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$rfp_id = JRequest::getVar('rfp_id','');
		$sql = "SELECT * FROM #__cam_rfpsow_splreq_price where rfp_id=".$rfp_id." AND vendor_id =".$vendorid;
		$db->Setquery($sql);
		$result = $db->loadObjectList();
		return $result;
	 }
	 //function to get RFP special requirements tabs Addnotes, Uploadfile, Addexception links
	function get_SPLRequirements_Preview($act,$Alt_Prp,$vendorid)
	{
		$rfp_id = JRequest::getVar('rfp_id','');
		$db = JFactory::getDBO();
		$upld_sql = 'SELECT upload_doc FROM #__cam_rfpsow_uploadfiles  WHERE (status="active" OR status="") AND spl_req = "Yes" AND task_id = 0 AND rfp_id ='.$rfp_id.' AND vendor_id='.$vendorid.' AND Alt_bid="'.$Alt_Prp .'"' ;
		$db->Setquery($upld_sql);
		$upld_file = $db->loadResultArray();
		$SPL_REQ_tabs[0]->uploaded_file = $upld_file;
		$upld_sql = 'SELECT id FROM #__cam_rfpsow_uploadfiles  WHERE (status="active" OR status="") AND spl_req = "Yes" AND task_id = 0 AND rfp_id ='.$rfp_id.' AND vendor_id='.$vendorid.' AND Alt_bid="'.$Alt_Prp.'"'   ;
		$db->Setquery($upld_sql);
		$upld_ids = $db->loadResultArray();
		$SPL_REQ_tabs[1]->uploaded_doc_ids = $upld_ids;
		$upld_title = array();
		for($i=0; $i<count($upld_file); $i++)
		{
		$arr = explode('/',$upld_file[$i]);
		$cnt = count($arr);
		$upld_title[$i] = $arr[$cnt-1];
		}
		$SPL_REQ_tabs[2]->uploadfile_title = $upld_title;

		$db = JFactory::getDBO();
		$spl_req = 'Yes';
		$task_id = 0;
		
		$sql = 'SELECT add_notes FROM #__cam_rfpsow_addnotes  WHERE (status="active" OR status="") AND spl_req = "'.$spl_req.'" AND rfp_id = '.$rfp_id.' AND vendor_id ='.$vendorid.' AND task_id='.$task_id.' AND Alt_bid="'.$Alt_Prp.'"' ;
		$db->Setquery($sql);
		$db->query();
		$SPL_REQ_tabs[3]->addnotes_desc = $db->loadResultArray();
		$sql = 'SELECT add_exception FROM #__cam_rfpsow_addexception  WHERE (status="active" OR status="") AND spl_req = "'.$spl_req.'" AND rfp_id = '.$rfp_id.' AND vendor_id ='.$vendorid.' AND task_id='.$task_id.' AND Alt_bid="'.$Alt_Prp.'"' ;
		$db->Setquery($sql);
		$db->query();
		$SPL_REQ_tabs[4]->exception_desc = $db->loadResultArray();
		//echo "<pre>"; print_r($SPL_REQ_tabs);
		return $SPL_REQ_tabs;
	}
	 function get_Form_status($vendorid)
	 {
	 	$db = JFactory::getDBO();
		$post	= JRequest::get('post');
		$rfp_id = JRequest::getVar('rfp_id','');
		$sql2 = "SELECT proposaltype,proposeddate FROM #__cam_vendor_proposals  where rfpno=".$rfp_id." AND proposedvendorid =".$vendorid;
		$db->Setquery($sql2);
		$result = $db->loadObjectList();
		return $result;
	 }
	 //Function to get all industries
	 function allindustries(){
	 	$db=&JFactory::getDBO();
		$query = "SELECT id as value,industry_name as text FROM #__cam_industries where published ='1' ORDER BY industry_name ASC";
		$db->setQuery($query);
		$industryList = $db->loadObjectList();
		return $industryList;
	 }
	 //Completed
	 function getSplRequiremntCats($pid) 
	{
		global $mainframe;
		$db=&JFactory::getDBO();
		$query = "SELECT req_id as id,req_title FROM #__cam_rfpreq_categories WHERE req_parentid=".$pid." ORDER BY req_id ASC";
		$db->setQuery($query);
		$reqCatList = $db->loadAssocList();
		return $reqCatList;
	}
	//To save the special requirement
	function savew9insurance($data)
	{
		$row = & $this->getTable('savew9insurance');
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
	}
	//Completed
	//To save the special requirement
	function saveinsurance($data)
	{
		$row = & $this->getTable('savegeneralinsurance');
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
	}
	//Completed
	//To save the special requirement
	function saveautoinsurance($data)
	{
		$row = & $this->getTable('saveautoinsurance');
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
	}
	//Completed
	//To save the special requirement
	function saveworkinsurance($data)
	{
		$row = & $this->getTable('saveworkinsurance');
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
	}
	//Completed
	//To save the special requirement
	function saveumbinsurance($data)
	{
		$row = & $this->getTable('saveumbinsurance');
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
	}
	//Completed
	//To save the special requirement
	function savelicinsurance($data)
	{
		$row = & $this->getTable('savelicinsurance');
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
	}
	//Completed
	//To save the special requirement
	function saveomiinsurance($data)
	{
		$row = & $this->getTable('saveomiinsurance');
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
	}
	//Completed


	//To find the manager is existing or not
	function getcheckautoinc($indus) 
	{
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$query = "SELECT id FROM #__cam_master_autoinsurance_standards WHERE masterid=".$user->id." and industryid=".$indus."  ";
		$db->setQuery($query);
		$id = $db->loadResult();
		return $id;
	}
	//Completed
	
	//To find the manager is existing or not
	function getcheckworkinc($indus) 
	{
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$query = "SELECT id FROM #__cam_master_workers_standards WHERE masterid=".$user->id." and industryid=".$indus."  ";
		$db->setQuery($query);
		$id = $db->loadResult();
		return $id;
	}
	//Completed
	//To find the manager is existing or not
	function getcheckumbinc($indus) 
	{
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$query = "SELECT id FROM #__cam_master_umbrellainsurance_standards WHERE masterid=".$user->id." and industryid=".$indus."  ";
		$db->setQuery($query);
		$id = $db->loadResult();
		return $id;
	}
	//Completed
	
	//To find the manager is existing or not
	function getchecklicinc($indus) 
	{
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$query = "SELECT id FROM #__cam_master_licinsurance_standards WHERE masterid=".$user->id." and industryid=".$indus."  ";
		$db->setQuery($query);
		$id = $db->loadResult();
		return $id;
	}
	//Completed
	
	//To find the manager is existing or not
	function getcheckomiinc($indus) 
	{
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$query = "SELECT id FROM #__cam_master_errors_omissions WHERE masterid=".$user->id." and industryid=".$indus."  ";
		$db->setQuery($query);
		$id = $db->loadResult();
		return $id;
	}
	//Completed
	
	//To get all industries
	function getallindustriesdef() 
	{
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$query = "SELECT id as value,industry_name as text FROM #__cam_industries where published ='1' ORDER BY industry_name ASC";
		$db->setQuery($query);
		$industryList = $db->loadObjectList();
		return $industryList;
	}
	//Completed
	function getcheckw9industryinc($indus) 
	{
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$query = "SELECT id FROM #__cam_master_w9_standards WHERE masterid=".$user->id." and industry_id=".$indus."  ";
		$db->setQuery($query);
		$id = $db->loadResult();
		return $id;
	}
	//To find the manager is existing or not
	function getcheckindustryinc($indus) 
	{
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$query = "SELECT id FROM #__cam_master_generalinsurance_standards WHERE masterid=".$user->id." and industry_id=".$indus."  ";
		$db->setQuery($query);
		$id = $db->loadResult();
		return $id;
	}
	
	
	
	//Completed
	//To get the general pre results
	function getw9insdata($indus) 
	{
		$user =& JFactory::getUser();
		$master =	$this->getmasterfirmaccount();
		$db=&JFactory::getDBO();
		$query = "SELECT * FROM #__cam_master_w9_standards WHERE masterid=".$master." and industry_id=".$indus."  ";
		$db->setQuery($query);
		$data_pre = $db->loadObject();
		return $data_pre;
	}
	
	
	//Completed
	//To get the general pre results
	function getgeneralinsdata($indus) 
	{
		$user =& JFactory::getUser();
		$master =	$this->getmasterfirmaccount();
		$db=&JFactory::getDBO();
		$query = "SELECT * FROM #__cam_master_generalinsurance_standards WHERE masterid=".$master." and industry_id=".$indus."  ";
		$db->setQuery($query);
		$data_pre = $db->loadObject();
		return $data_pre;
	}
	//Completed
	//To get the general pre results
	function getautoinsdata($indus) 
	{
		$user =& JFactory::getUser();
		$master =	$this->getmasterfirmaccount();
		$db=&JFactory::getDBO();
		$query = "SELECT * FROM #__cam_master_autoinsurance_standards WHERE masterid=".$master." and industryid=".$indus."  ";
		$db->setQuery($query);
		$data_auto = $db->loadObject();
		return $data_auto;
	}
	//Completed
	//To get the workers insurance pre results
	function getworkinsdata($indus) 
	{
		$user =& JFactory::getUser();
		$master =	$this->getmasterfirmaccount();
		$db=&JFactory::getDBO();
		$query = "SELECT * FROM #__cam_master_workers_standards WHERE masterid=".$master." and industryid=".$indus."  ";
		$db->setQuery($query);
		$data_work = $db->loadObject();
		return $data_work;
	}
	//Completed
	//To get the workers insurance pre results
	function getumbrellainsdata($indus) 
	{
		$user =& JFactory::getUser();
		$master =	$this->getmasterfirmaccount();
		$db=&JFactory::getDBO();
		$query = "SELECT * FROM #__cam_master_umbrellainsurance_standards WHERE masterid=".$master." and industryid=".$indus."  ";
		$db->setQuery($query);
		$data_umbrella = $db->loadObject();
		return $data_umbrella;
	}
	//Completed
	//To get the workers insurance pre results
	function getlicinsdata($indus) 
	{
		$user =& JFactory::getUser();
		$master =	$this->getmasterfirmaccount();
		$db=&JFactory::getDBO();
		$query = "SELECT * FROM #__cam_master_licinsurance_standards WHERE masterid=".$master." and industryid=".$indus."  ";
		$db->setQuery($query);
		$data_lic = $db->loadObject();
		return $data_lic;
	}
	//Completed
	//To get the omissions insurance data
	function getomiinsdata($indus) 
	{
		$user =& JFactory::getUser();
		$master =	$this->getmasterfirmaccount();
		$db=&JFactory::getDBO();
		$query = "SELECT * FROM #__cam_master_errors_omissions WHERE masterid=".$master." and industryid=".$indus."  ";
		$db->setQuery($query);
		$data_omi = $db->loadObject();
		return $data_omi;
	}
	//Function to check the master updated any industry or not
	function getallinsdataforindus() 
	{
		//To get the master account of loggedin manager
		$master =	$this->getmasterfirmaccount();
		//Completed
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$query_w9 = "SELECT id FROM #__cam_master_w9_standards WHERE masterid=".$master." ";
		$db->setQuery($query_w9);
		$data_w9 = $db->loadResult();
		
		$query_gene = "SELECT id FROM #__cam_master_generalinsurance_standards WHERE masterid=".$master." ";
		$db->setQuery($query_gene);
		$data_geme = $db->loadResult();
		$query_autoi = "SELECT id FROM #__cam_master_autoinsurance_standards WHERE masterid=".$master." ";
		$db->setQuery($query_autoi);
		$data_autoins = $db->loadResult();
		$query_worke = "SELECT id FROM #__cam_master_workers_standards WHERE masterid=".$master." ";
		$db->setQuery($query_worke);
		$data_worke = $db->loadResult();
		$query_umber = "SELECT id FROM #__cam_master_umbrellainsurance_standards WHERE masterid=".$master." ";
		$db->setQuery($query_umber);
		$data_umbrellas = $db->loadResult();
		$query_lici = "SELECT id FROM #__cam_master_licinsurance_standards WHERE masterid=".$master." ";
		$db->setQuery($query_lici);
		$data_lici = $db->loadResult();
		
		$query_omi = "SELECT id FROM #__cam_master_errors_omissions WHERE masterid=".$master." ";
		$db->setQuery($query_omi);
		$data_omi = $db->loadResult();
		
		if($data_w9 || $data_geme || $data_autoins || $data_worke || $data_umbrellas || $data_lici || $data_omi ){
		$result = 'yes';
		}
		else{
		$result = 'no';
		}
		return $result ;
	}
	//COmpleted
	//Function to get master firm userid when manager, firm, district manager loggedin
	function getmasterfirmaccount(){
	$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
			if($user->user_type == '12'){
				$query_c = "SELECT comp_id FROM #__cam_customer_companyinfo WHERE cust_id=".$user->id." ";
				$db->setQuery($query_c);
				$cid = $db->loadResult();	
				$camfirmid = "SELECT cust_id FROM #__cam_camfirminfo WHERE id=".$cid." ";
				$db->setQuery($camfirmid);
				$camfirm = $db->loadResult();
				$masterid = "SELECT masterid FROM #__cam_masteraccounts WHERE firmid=".$camfirm." ";
				$db->setQuery($masterid);
				$master = $db->loadResult();
				}
			elseif($user->user_type == '13' && $user->accounttype!='master'){
				$masterid = "SELECT masterid FROM #__cam_masteraccounts WHERE firmid=".$user->id." "; 
				$db->setQuery($masterid);
				$master = $db->loadResult();
			}
			else{
			$master = $user->id;
			}	
			return $master ;
	}
	//COmpleted
	
	function store_addabout($data){

	$row =& $this->getTable('aboutus');
	//echo "<pre>"; print_r($row);print_r($post); exit;
		jimport('joomla.user.helper');
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		return true;
	}
	
	function getaboutus(){
	$user =& JFactory::getUser();
	$db =& JFactory::getDBO();
	$master =	$this->getmasterfirmaccount();
	$aboutus = "SELECT aboutus,id,termsconditions  FROM #__cam_vendor_aboutus where vendorid=".$master." ";
		$db->Setquery($aboutus);
		$about_us = $db->loadObject();
		return $about_us ;
	}
	
	//To save the special requirement
	function savecertifcates($data)
	{
		$row = & $this->getTable('savecertificates');
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
	}
	//Completed
	function getcertificates($indusid){
		$master =	$this->getmasterfirmaccount();
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$query_cert = "SELECT * FROM #__cam_master_certificates WHERE masterid=".$master." and industryid=".$indusid." ";
		$db->setQuery($query_cert);
		$data_cert = $db->loadObjectList();
		return $data_cert;
	}
	function getpermissions(){
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$query_permissions = "SELECT * FROM #__cam_master_compliancereport WHERE masterid=".$user->id." ";
		$db->setQuery($query_permissions);
		$permissions = $db->loadObject();
		return $permissions;
	}
	function getvendordata($vendorid){
		$db=&JFactory::getDBO();
		$vendor_info = "SELECT U.company_name, V.name, V.lastname, V.email, U.company_phone, U.phone_ext FROM jos_users as V, jos_cam_vendor_company as U WHERE U.user_id=".$vendorid." and V.id=".$vendorid." ";
		$db->setQuery($vendor_info);
		$vendordata = $db->loadObject();
		return $vendordata;
	} 
	function saveapplerating($data){
		$row = & $this->getTable('applerating');
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
	}
	function getexistreview($id){
		$db=&JFactory::getDBO();
		$exit_info = "SELECT id, comment, apples FROM #__cam_rfp_ratings WHERE id=".$id." ";
		$db->setQuery($exit_info);
		$ext = $db->loadObject();
		return $ext;
	}
	
	function getpermission($masterid){
		$db = JFactory::getDBO();
		$permission = "SELECT permission FROM #__cam_master_email_compliance_status WHERE masterid=".$masterid;
		$db->setQuery($permission);
		$perms = $db->loadResult();
		return $perms ;
	}	
	
	function checkcompliancestatus($vendorid){
		$db=&JFactory::getDBO();
		$user =& JFactory::getUser();
		$master =	$this->getmasterfirmaccount();
		$vendorindustrieslist = $this->vendorallindustries($vendorid);
		$permission = $this->getpermission($master) ;
		$global_standards = $this->checkglobalstandards_master($master);
		
			for( $vi=0; $vi<count($vendorindustrieslist); $vi++ )
				{
					$totalprefers_new_w9	=	$this->checknewspecialrequirements_w9_indus($vendorid,$vendorindustrieslist[$vi]->value,$master);
					$totalprefers_new_gli	=	$this->checknewspecialrequirements_gli_indus($vendorid,$vendorindustrieslist[$vi]->value,$master);
					$totalprefers_new_aip	=	$this->checknewspecialrequirements_aip_indus($vendorid,$vendorindustrieslist[$vi]->value,$master);
					$totalprefers_new_wci	=	$this->checknewspecialrequirements_wci_indus($vendorid,$vendorindustrieslist[$vi]->value,$master);
					$totalprefers_new_umb	=	$this->checknewspecialrequirements_umb_indus($vendorid,$vendorindustrieslist[$vi]->value,$master);
					$totalprefers_new_pln	=	$this->checknewspecialrequirements_pln_indus($vendorid,$vendorindustrieslist[$vi]->value,$master);
					$totalprefers_new_occ	=	$this->checknewspecialrequirements_occ_indus($vendorid,$vendorindustrieslist[$vi]->value,$master);
					$totalprefers_new_omi	=	$this->checknewspecialrequirements_omi_indus($vendorid,$vendorindustrieslist[$vi]->value,$master);
					
					$vendorindustrieslist[$vi]->status = '' ;
					if($totalprefers_new_w9 == 'success' && $totalprefers_new_gli == 'success' && $totalprefers_new_aip == 'success' && $totalprefers_new_wci == 'success' && $totalprefers_new_umb == 'success' && $totalprefers_new_pln == 'success' && $totalprefers_new_occ == 'success'  && $totalprefers_new_omi == 'success' ){
							$vendorindustrieslist[$vi]->status = 'success' ;
						}
						else{
							$vendorindustrieslist[$vi]->status = 'fail' ;
						}
		
				}	
				if($vendorindustrieslist){
					foreach($vendorindustrieslist as $statues){
						$final_state[] = $statues->status;
						$med_fina_state = '';
						$med_fina_state = array_unique($final_state);
							if( count($med_fina_state) == 2 ) {
								$final_status = 'medium' ;
							}
							if( count($med_fina_state) == 1 &&  $med_fina_state[0] == 'fail') {
								$final_status = 'fail' ;
							}
							if( count($med_fina_state) == 1 &&  $med_fina_state[0] == 'success' ){
					
										$final_status = 'success' ;
										$masteraccount = $this->getmasterfirmaccount();
										$sql_terms = "SELECT termsconditions FROM #__cam_vendor_aboutus WHERE vendorid=".$masteraccount." "; 
										$db->setQuery($sql_terms);
										$terms_exist = $db->loadResult();
										if($terms_exist == '1'){
										$sql = "SELECT accepted FROM #__cam_vendor_terms WHERE vendorid=".$vendorid." and masterid=".$masteraccount." "; 
										$db->setQuery($sql);
										$terms = $db->loadResult();
											if($terms == '1'){
											$final_status = 'success' ;
											}
											else{
											$final_status = 'fail' ;
											}
										}
										else{
										
										}
					
						}
					
					}
						$final_state = '';
						$med_fina_state = '';	
				}
				
				if($permission == 'yes' || $global_standards == 'fail'){
				$final_status = 'nostandards';
				}
				else{
				$final_status = $final_status ;
				}
		return  $final_status;
		
	}
	
	function vendorallindustries($vendorid){
	 	$db=&JFactory::getDBO();
		$user =& JFactory::getUser();
		$master =	$this->getmasterfirmaccount();
		// To get industries by master
		$gli_indus ="SELECT industry_id from #__cam_master_generalinsurance_standards WHERE masterid=".$master."";
		$db->Setquery($gli_indus);
		$gli = $db->loadResultArray();
		
		$aip_indus ="SELECT industryid from #__cam_master_autoinsurance_standards WHERE masterid=".$master."";
		$db->Setquery($aip_indus);
		$aip = $db->loadResultArray();
		
		$wci_indus ="SELECT industryid from #__cam_master_workers_standards WHERE masterid=".$master."";
		$db->Setquery($wci_indus);
		$wci = $db->loadResultArray();
		
		$umb_indus ="SELECT industryid from #__cam_master_umbrellainsurance_standards WHERE masterid=".$master."";
		$db->Setquery($umb_indus);
		$umb = $db->loadResultArray();
		
		$lic_indus ="SELECT industryid from #__cam_master_licinsurance_standards WHERE masterid=".$master."";
		$db->Setquery($lic_indus);
		$lic = $db->loadResultArray();
		
		$omi_indus ="SELECT industryid from #__cam_master_errors_omissions WHERE masterid=".$master."";
		$db->Setquery($omi_indus);
		$omi = $db->loadResultArray();
		
		if( $gli || $aip || $wci || $umb || $lic || $omi){
		$finalarray = array_merge($gli, $aip, $wci, $umb, $lic, $omi);
		$existing_indus = implode(',',$finalarray);
		}
		else{
		$existing_indus = "''";
		}
		
		$query = "SELECT U.industry_id as value, V.industry_name FROM #__cam_vendor_industries as U, #__cam_industries as V where U.industry_id=V.id and U.user_id = ".$vendorid." and V.published='1' and U.industry_id IN(".$existing_indus.") ";
		$db->setQuery($query);
		$industryList = $db->loadObjectList();
		return $industryList;
	 }
	 
	 function checknewspecialrequirements_w9_indus($vendorid,$industryid,$managerid){
	
	 	$db = & JFactory::getDBO();
		$w9_data ="SELECT * from #__cam_vendor_compliance_w9docs  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($w9_data);
		$vendor_w9_data = $db->loadObjectList();

		$rfp_w9_data ="SELECT * from #__cam_master_w9_standards  WHERE masterid=".$managerid." and industry_id=".$industryid;
		$db->Setquery($rfp_w9_data);
		$rfp_w9_data = $db->loadObject();
		$occur_w9 = '';
		
		if($rfp_w9_data){
			if( !$vendor_w9_data[0]->w9_upld_cert || $vendor_w9_data[0]->w9_status == '-1') {
				$occur_w9[] = 'no' ;
			}
			else{
				$occur_w9[] = 'yes' ;
			}
		}
		
		if( in_array("no", $occur_w9) ){
			$cabins_w9[] = "no";
		}
			else{
			$cabins_w9[] = "yes";
		}
			$occur_w9 = '';
				
		if($cabins_w9){
			if( in_array("yes", $cabins_w9) ){
			$special_w9 = "success";
			}
			else{
			$special_w9 = "fail";
			}
		}
		else{
				if($rfp_w9_data)
				$special_w9 = "fail";
				else
				$special_w9 = "success";
		}
			
		$cabins_w9[] = '';
		return $special_w9 ;		
	 }
	 
	 
	 function checknewspecialrequirements_gli_indus($vendorid,$industryid,$managerid){
		$totalprefers_new_gli = '';
		$db = & JFactory::getDBO();
		$gli_data ="SELECT * from #__cam_vendor_liability_insurence  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($gli_data);
		$vendor_gli_data = $db->loadObjectList();
		//Get RFP data
		$rfp_gli_data ="SELECT * from #__cam_master_generalinsurance_standards WHERE masterid=".$managerid." and industry_id=".$industryid; //validation to status of docs
		$db->Setquery($rfp_gli_data);
		$rfp_gli_data = $db->loadObject();
		//echo "<br />";
		//echo "<pre>"; print_r($vendor_gli_data); echo "</pre>";
		//echo "<pre>"; print_r($rfp_gli_data); echo "</pre>";
		
		$occur = '';
		for( $gl=0; $gl<count($vendor_gli_data); $gl++ ){
			if($rfp_gli_data->occur ==  'yes'){
				if( $vendor_gli_data[$gl]->GLI_occur == 'occur' ){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			
			if($rfp_gli_data->each_occurrence >  '0'){
				if($rfp_gli_data->each_occurrence <= $vendor_gli_data[$gl]->GLI_policy_occurence){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->damage_retend > '0'){
				if($rfp_gli_data->damage_retend <= $vendor_gli_data[$gl]->GLI_damage){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->med_expenses > '0'){
				if($rfp_gli_data->med_expenses <= $vendor_gli_data[$gl]->GLI_med){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}	
			if($rfp_gli_data->personal_inj > '0'){
				if($rfp_gli_data->personal_inj <= $vendor_gli_data[$gl]->GLI_injury){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->general_aggr > '0'){	
				if($rfp_gli_data->general_aggr <= $vendor_gli_data[$gl]->GLI_policy_aggregate){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}

			if($rfp_gli_data->applies_to == 'pol'){
				if($vendor_gli_data[$gl]->GLI_applies == 'pol'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->applies_to == 'proj'){
				if($vendor_gli_data[$gl]->GLI_applies == 'proj'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->applies_to == 'loc'){
				if($vendor_gli_data[$gl]->GLI_applies == 'loc'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->products_aggr >  '0'){
				if($rfp_gli_data->products_aggr <= $vendor_gli_data[$gl]->GLI_products){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}	
			if($rfp_gli_data->waiver_sub == 'yes') {
				if($vendor_gli_data[$gl]->GLI_waiver == 'waiver'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->primary_noncontr == 'yes') {
				if($vendor_gli_data[$gl]->GLI_primary == 'primary'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->additional_insured == 'yes') {
				if($vendor_gli_data[$gl]->GLI_additional){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->cert_holder == 'yes') {
				if($vendor_gli_data[$gl]->GLI_certholder == 'yes'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
				if($rfp_gli_data){
					if($vendor_gli_data[$gl]->GLI_end_date < date('Y-m-d') || !$vendor_gli_data[$gl]->GLI_upld_cert || !$vendor_gli_data[$gl]->GLI_policy_occurence || !$vendor_gli_data[$gl]->GLI_policy_aggregate || $vendor_gli_data[$gl]->GLI_status == '-1') {
						$occur[] = 'no' ;
					}
					else{
						$occur[] = 'yes' ;
					}
				}
		
			if($occur){
				if( in_array("no", $occur) ){
				$cabins_gli[] = "no";
				}
				else{
				$cabins_gli[] = "yes";
				}
			}
			$occur = '';
		}
		
		if($cabins_gli){
			if( in_array("yes", $cabins_gli) ){
			$special = "success";
			}
			else{
			$special = "fail";
			}
			
		}
		else{
				if($rfp_gli_data)
				$special = "fail";
				else
				$special = "success";
		}
			
		$cabins_gli = '';
		return $special ;
		
	}
//Completed
	
	function checknewspecialrequirements_aip_indus($vendorid,$industryid,$managerid){
		$db = & JFactory::getDBO();
		$aip_data ="SELECT * from #__cam_vendor_auto_insurance  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($aip_data);
		$vendor_aip_data = $db->loadObjectList();
		//Get RFP data
		$rfp_aip_data ="SELECT * from #__cam_master_autoinsurance_standards WHERE masterid=".$managerid." and industryid=".$industryid; //validation to status of docs
		$db->Setquery($rfp_aip_data);
		$rfp_aip_data = $db->loadObject();
		
			for( $ai=0; $ai<count($vendor_aip_data); $ai++ ){
				if($rfp_aip_data->applies_to_any == 'any'){
					if($rfp_aip_data->applies_to_any == $vendor_aip_data[$ai]->aip_applies_any){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}

				if($rfp_aip_data->applies_to_owned == 'owned'){
					if($rfp_aip_data->applies_to_owned == $vendor_aip_data[$ai]->aip_applies_owned){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}

				if($rfp_aip_data->applies_to_nonowned == 'nonowned'){
					if($rfp_aip_data->applies_to_nonowned == $vendor_aip_data[$ai]->aip_applies_nonowned){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}

				if($rfp_aip_data->applies_to_hired == 'hired'){
					if($rfp_aip_data->applies_to_hired == $vendor_aip_data[$ai]->aip_applies_hired){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}

				if($rfp_aip_data->applies_to_scheduled == 'scheduled'){
					if($vendor_aip_data[$ai]->aip_applies_scheduled == 'sch'){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->combined_single > '0'){	
					if($rfp_aip_data->combined_single <= $vendor_aip_data[$ai]->aip_combined){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->bodily_injusy_person > '0'){	
					if($rfp_aip_data->bodily_injusy_person <= $vendor_aip_data[$ai]->aip_bodily){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->bodily_injusy_accident > '0'){	
					if($rfp_aip_data->bodily_injusy_accident <= $vendor_aip_data[$ai]->aip_body_injury){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->property_damage > '0'){	
					if($rfp_aip_data->property_damage <= $vendor_aip_data[$ai]->aip_property){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->waiver == 'yes'){
					if($vendor_aip_data[$ai]->aip_waiver == 'waiver'){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->primary == 'yes'){
					if($vendor_aip_data[$ai]->aip_primary == 'primary'){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->additional_ins == 'yes'){
					if($vendor_aip_data[$ai]->aip_addition != ''){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->cert_holder == 'yes'){
					if($vendor_aip_data[$ai]->aip_cert == 'yes'){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data){
					if($vendor_aip_data[$ai]->aip_end_date < date('Y-m-d') || $vendor_aip_data[$ai]->aip_upld_cert=='' || $vendor_aip_data[$ai]->aip_status == '-1' || !$vendor_aip_data[$ai]->aip_combined ) 		{
						$occur_aip[] = 'no' ;
						}
					else
						{
						$occur_aip[] = 'yes' ;
						}
				}
				if($occur_aip){
					if( in_array("no", $occur_aip) ){
						$cabins_aip[] = "no";
					}
					else{
						$cabins_aip[] = "yes";
					}
				}
				$occur_aip = '';
			}	
			if($cabins_aip){
				if( in_array("yes", $cabins_aip) ){
					$special_aip = "success";
				}
				else{
					$special_aip = "fail";
				}
			}
			else{
				if($rfp_aip_data)
				$special_aip = "fail";
				else
				$special_aip = "success";
			}
			
				$cabins_aip = '';
		
		return $special_aip ;
		
		
	}
	
		//Function to check WCI documents
	function checknewspecialrequirements_wci_indus($vendorid,$industryid,$managerid){
		
		$db = & JFactory::getDBO();
		$wci_data ="SELECT * from #__cam_vendor_workers_companies_insurance  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($wci_data);
		$vendor_wci_data = $db->loadObjectList();
		//Get RFP data
		$rfp_wci_data ="SELECT * from #__cam_master_workers_standards WHERE masterid=".$managerid." and industryid=".$industryid; //validation to status of docs
		$db->Setquery($rfp_wci_data);
		$rfp_wci_data = $db->loadObject();

			for( $wci=0; $wci<count($vendor_wci_data); $wci++ ){
				
				if($rfp_wci_data->disease_policy > '0'){	
					if($rfp_wci_data->disease_policy <= $vendor_wci_data[$wci]->WCI_disease_policy){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}	
					
				if($rfp_wci_data->disease_eachemp > '0'){
					if($rfp_wci_data->disease_eachemp <= $vendor_wci_data[$wci]->WCI_disease){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}
				
				if($rfp_wci_data->waiver_work == 'yes'){
					if($vendor_wci_data[$wci]->WCI_waiver == 'waiver'){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}
				
				if($rfp_wci_data->each_accident > '0'){
					if($rfp_wci_data->each_accident <= $vendor_wci_data[$wci]->WCI_each_accident){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}
				
				if($rfp_wci_data->certholder_work == 'yes'){
					if($vendor_wci_data[$wci]->WCI_cert == 'yes'){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}
				if($rfp_wci_data){
					if($vendor_wci_data[$wci]->WCI_end_date < date('Y-m-d') || $vendor_wci_data[$wci]->WCI_upld_cert=='' || $vendor_wci_data[$wci]->WCI_status == '-1') {
							$occur_wci[] = 'no' ;
					}
					else{
							$occur_wci[] = 'yes' ;
					}
				}	
				if($occur_wci){
					if( in_array("no", $occur_wci) ){
						$cabins_wci[] = "no";
					}
					else{
						$cabins_wci[] = "yes";
					}
				}
				$occur_wci = '';
			}
			
			if($cabins_wci){
				if( in_array("yes", $cabins_wci) ){
					$special_wci = "success";
				}
				else{
					$special_wci = "fail";
				}
			}
			else{
				if($rfp_wci_data)
				$special_wci = "fail";
				else
				$special_wci = "success";
			}
			
				$cabins_wci = '';
		
		return $special_wci ;
	}
	
	//COmpleted
	
	//function to check umbrella liability documents
	 function checknewspecialrequirements_umb_indus($vendorid,$industryid,$managerid){
		$db = & JFactory::getDBO();
		$umb_data ="SELECT * from #__cam_vendor_umbrella_license  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($umb_data);
		$vendor_umb_data = $db->loadObjectList();
		//Get RFP data
		$rfp_umb_data ="SELECT * from #__cam_master_umbrellainsurance_standards WHERE masterid=".$managerid." and industryid=".$industryid; //validation to status of docs
		$db->Setquery($rfp_umb_data);
		$rfp_umb_data = $db->loadObject();
		
			for( $umb=0; $umb<count($vendor_umb_data); $umb++ ){
				
				if($rfp_umb_data->each_occur > '0'){	
					if($rfp_umb_data->each_occur <= $vendor_umb_data[$umb]->UMB_occur){
						$occur_umb[] = 'yes' ;
					}
					else{
						$occur_umb[] = 'no' ;
					}
				}	
				if($rfp_umb_data->aggregate > '0'){	
					if($rfp_umb_data->aggregate <= $vendor_umb_data[$umb]->UMB_aggregate){
						$occur_umb[] = 'yes' ;
					}
					else{
						$occur_umb[] = 'no' ;
					}
				}	
				if($rfp_umb_data->certholder_umbrella == 'yes'){
					if($vendor_umb_data[$umb]->UMB_certholder == 'yes'){
						$occur_umb[] = 'yes' ;
					}
					else{
						$occur_umb[] = 'no' ;
					}
				}
				if($rfp_umb_data){
				if($vendor_umb_data[$umb]->UMB_expdate < date('Y-m-d') || !$vendor_umb_data[$umb]->UMB_upld_cert || $vendor_umb_data[$umb]->UMB_status == '-1' || !$vendor_umb_data[$umb]->UMB_aggregate || !$vendor_umb_data[$umb]->UMB_occur) {
						$occur_umb[] = 'no' ;
				}
				else{
						$occur_umb[] = 'yes' ;
				}
				}
				
				if($occur_umb){
					if( in_array("no", $occur_umb) ){
						$cabins_umb[] = "no";
					}
					else{
						$cabins_umb[] = "yes";
					}
				}
				$occur_umb = '';
			}	 
				
				if($cabins_umb){
					if( in_array("yes", $cabins_umb) ){
						$special_umb = "success";
					}
					else{
						$special_umb = "fail";
					}
				}
				else{
					if($rfp_umb_data)
					$special_umb = "fail";
					else
					$special_umb = "success";
				}
		
				$cabins_umb = '';
				return $special_umb ;
	 }
	//Completed
	
	//Funcion to check professional licensw
	function checknewspecialrequirements_pln_indus($vendorid,$industryid,$managerid){

		$db = & JFactory::getDBO();
		$pln_data ="SELECT * from #__cam_vendor_professional_license  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($pln_data);
		$vendor_pln_data = $db->loadObjectList();
		//Get RFP data
		$rfp_pln_data ="SELECT * from #__cam_master_licinsurance_standards WHERE masterid=".$managerid." and industryid=".$industryid; //validation to status of docs
		$db->Setquery($rfp_pln_data);
		$rfp_pln_data = $db->loadObject();
		
			for( $pln=0; $pln<count($vendor_pln_data); $pln++ ){
			
				if($rfp_pln_data->professional == 'yes'){
					if($vendor_pln_data[$pln]->PLN_expdate < date('Y-m-d') || !$vendor_pln_data[$pln]->PLN_upld_cert || $vendor_pln_data[$pln]->PLN_status == '-1') {
						$occur_pln[] = 'no' ;
					}
					else{
						$occur_pln[] = 'yes' ;
					}
				}
				if( $occur_pln ){
					if( in_array("no", $occur_pln) ){
						$cabins_pln[] = "no";
					}
					else{
						$cabins_pln[] = "yes";
					}
				}	
			}	
			
			if($cabins_pln){
				if( in_array("yes", $cabins_pln) ){
					$special_pln = "success";
				}
				else{
					$special_pln = "fail";
				}
				$cabins_pln = '';
			}
			
			else{
					if($rfp_pln_data->professional)
					$special_pln = "fail";
					else
					$special_pln = "success";
			}
			
				$cabins_pln = '';
				return $special_pln ;
	}
	//Completed	
	
	function checknewspecialrequirements_occ_indus($vendorid,$industryid,$managerid){

		$db = & JFactory::getDBO();
		$occ_data ="SELECT * from #__cam_vendor_occupational_license  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($occ_data);
		$vendor_occ_data = $db->loadObjectList();
		//Get RFP data
		$rfp_occ_data ="SELECT * from #__cam_master_licinsurance_standards WHERE masterid=".$managerid." and industryid=".$industryid; //validation to status of docs
		$db->Setquery($rfp_occ_data);
		$rfp_occ_data = $db->loadObject();
		
			for( $occ=0; $occ<count($vendor_occ_data); $occ++ ){
			
				if($rfp_occ_data->occupational == 'yes'){
					if($vendor_occ_data[$occ]->OLN_expdate < date('Y-m-d') || !$vendor_occ_data[$occ]->OLN_upld_cert || $vendor_occ_data[$pln]->OLN_status == '-1') {
						$occur_occ[] = 'no' ;
					}
					else{
						$occur_occ[] = 'yes' ;
					}
				}
				if( $occur_occ ){
					if( in_array("no", $occur_occ) ){
						$cabins_occ[] = "no";
					}
					else{
						$cabins_occ[] = "yes";
					}
				}	
			}	
			
			if($cabins_occ){
				if( in_array("yes", $cabins_occ) ){
					$special_occ = "success";
				}
				else{
					$special_occ = "fail";
				}
				$cabins_occ = '';
			}
			
			else{
					if($rfp_occ_data->occupational)
					$special_occ = "fail";
					else
					$special_occ = "success";
			}
			
				$cabins_occ = '';
				return $special_occ ;
	}
	//Completed
	
	function checknewspecialrequirements_omi_indus($vendorid,$industryid,$managerid){

		$db = & JFactory::getDBO();
		$omi_data ="SELECT * from #__cam_vendor_errors_omissions_insurance  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($omi_data);
		$vendor_omi_data = $db->loadObjectList();
		//Get RFP data
		$rfp_omi_data ="SELECT * from #__cam_master_errors_omissions WHERE masterid=".$managerid." and industryid=".$industryid; //validation to status of docs
		$db->Setquery($rfp_omi_data);
		$rfp_omi_data = $db->loadObject();
		
		
		
			for( $omi=0; $omi<count($rfp_omi_data); $omi++ ){
				
				if($rfp_omi_data->each_claim > '0'){	
					if($rfp_omi_data->each_claim <= $vendor_omi_data[$omi]->OMI_each_claim){
						$occur_omi[] = 'yes' ;
					}
					else{
						$occur_omi[] = 'no' ;
					}
				}	
				if($rfp_omi_data->aggregate_omi > '0'){	
					if($rfp_omi_data->aggregate_omi <= $vendor_omi_data[$omi]->OMI_aggregate){
						$occur_omi[] = 'yes' ;
					}
					else{
						$occur_omi[] = 'no' ;
					}
				}	
				if($rfp_omi_data->certholder_omi == 'yes'){
					if($vendor_omi_data[$omi]->OMI_cert == 'yes'){
						$occur_omi[] = 'yes' ;
					}
					else{
						$occur_omi[] = 'no' ;
					}
				}
				if($rfp_omi_data){
				if($vendor_omi_data[$omi]->OMI_end_date < date('Y-m-d') || !$vendor_omi_data[$omi]->OMI_upld_cert || $vendor_omi_data[$omi]->OMI_status == '-1' ) {
						$occur_omi[] = 'no' ;
				}
				else{
						$occur_omi[] = 'yes' ;
				}
				}
				
				/*if( $vendorid == '1767' ){
				echo "<pre>";	print_r($occur_omi); echo "</pre>";
				//echo "<pre>";	print_r($rfp_omi_data); echo "</pre>";
				}*/
		
				if($occur_omi){
					if( in_array("no", $occur_omi) ){
						$cabins_omi[] = "no";
					}
					else{
						$cabins_omi[] = "yes";
					}
				}
				$occur_omi = '';
			}	
			
				if($cabins_omi){
					if( in_array("yes", $cabins_omi) ){
						$special_omi = "success";
					}
					else{
						$special_omi = "fail";
					}
				}
				else{
					if($rfp_omi_data)
					$special_omi = "fail";
					else
					$special_omi = "success";
				}
		
				$cabins_omi = '';
				return $special_omi ;
				
			
	}
	//Completed
	
	function getbasicuploadfiles(){
		$db=&JFactory::getDBO();
		$rfp_id = JRequest::getVar('rfp_id','');
		$query_basic = "SELECT * FROM #__cam_basicrequest_files WHERE rfpid=".$rfp_id."  ";
		$db->setQuery($query_basic);
		$basefiles = $db->loadObjectList();
		return $basefiles;
	}
	
	function declinedreason($rfpid,$vendorid){
		$db=&JFactory::getDBO();
		$declined_data = "SELECT * FROM #__cam_rfpdeclined_cause WHERE rfpid=".$rfpid." and vendorid=".$vendorid."  ";
		$db->setQuery($declined_data);
		$declined = $db->loadObject();
		return $declined;
	}
	function vendorcompanyname($vendorid){
		$db=&JFactory::getDBO();
		$vendor_company = "SELECT company_name FROM #__cam_vendor_company WHERE user_id=".$vendorid."  ";
		$db->setQuery($vendor_company);
		$v_company = $db->loadResult();
		return $v_company;
	}
	
	function checknewspecialrequirements_w9($vendorid,$rfpid){
		$db = & JFactory::getDBO();
		$w9_data ="SELECT * from #__cam_vendor_compliance_w9docs  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($w9_data);
		$vendor_w9_data = $db->loadObjectList();
		$rfp_w9_data ="SELECT * from #__cam_master_w9_standards_rfps  WHERE rfpid=".$rfpid; //validation to status of docs
		$db->Setquery($rfp_w9_data);
		$rfp_w9_data = $db->loadObject();
		$occur_w9 = '';
		
		if($rfp_w9_data){
			if( !$vendor_w9_data[0]->w9_upld_cert || $vendor_w9_data[0]->w9_status == '-1') {
				$occur_w9[] = 'no' ;
			}
			else{
				$occur_w9[] = 'yes' ;
			}
		}
		if( in_array("no", $occur_w9) ){
			$cabins_w9[] = "no";
		}
		else{
			$cabins_w9[] = "yes";
		}
		$occur_w9 = '';
		
		if($cabins_w9){
			if( in_array("yes", $cabins_w9) ){
			$special_w9 = "success";
			}
			else{
			$special_w9 = "fail";
			}
		}
		else{
				if($rfp_w9_data)
				$special_w9 = "fail";
				else
				$special_w9 = "success";
		}
			
		$cabins_w9[] = '';
		return $special_w9 ;
		
	}
	
	//Function to check new special requirements
	function checknewspecialrequirements_gli($vendorid,$rfpid){
		$db = & JFactory::getDBO();
		//echo $vendorid;
		$gli_data ="SELECT * from #__cam_vendor_liability_insurence  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($gli_data);
		$vendor_gli_data = $db->loadObjectList();
		//Get RFP data
		$rfp_gli_data ="SELECT * from #__cam_master_generalinsurance_standards_rfps  WHERE rfpid=".$rfpid; //validation to status of docs
		$db->Setquery($rfp_gli_data);
		$rfp_gli_data = $db->loadObject();
		$occur = '';
		for( $gl=0; $gl<count($vendor_gli_data); $gl++ ){
			if($rfp_gli_data->occur ==  'yes'){
				if( $vendor_gli_data[$gl]->GLI_occur == 'occur' ){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->each_occurrence >  '0'){
				if($rfp_gli_data->each_occurrence <= $vendor_gli_data[$gl]->GLI_policy_occurence){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->damage_retend > '0'){
				if($rfp_gli_data->damage_retend <= $vendor_gli_data[$gl]->GLI_damage){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->med_expenses > '0'){
				if($rfp_gli_data->med_expenses <= $vendor_gli_data[$gl]->GLI_med){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}	
			if($rfp_gli_data->personal_inj > '0'){
				if($rfp_gli_data->personal_inj <= $vendor_gli_data[$gl]->GLI_injury){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->general_aggr > '0'){	
				if($rfp_gli_data->general_aggr <= $vendor_gli_data[$gl]->GLI_policy_aggregate){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}

			if($rfp_gli_data->applies_to == 'pol'){
				if($vendor_gli_data[$gl]->GLI_applies == 'pol'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->applies_to == 'proj'){
				if($vendor_gli_data[$gl]->GLI_applies == 'proj'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->applies_to == 'loc'){
				if($vendor_gli_data[$gl]->GLI_applies == 'loc'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->products_aggr >  '0'){
				if($rfp_gli_data->products_aggr <= $vendor_gli_data[$gl]->GLI_products){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}	
			if($rfp_gli_data->waiver_sub == 'yes') {
				if($vendor_gli_data[$gl]->GLI_waiver == 'waiver'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->primary_noncontr == 'yes') {
				if($vendor_gli_data[$gl]->GLI_primary == 'primary'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->additional_insured == 'yes') {

				if($vendor_gli_data[$gl]->GLI_additional){

					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->cert_holder == 'yes') {
				if($vendor_gli_data[$gl]->GLI_certholder == 'yes'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
				if($rfp_gli_data){
					if($vendor_gli_data[$gl]->GLI_end_date < date('Y-m-d') || !$vendor_gli_data[$gl]->GLI_upld_cert || !$vendor_gli_data[$gl]->GLI_policy_occurence || !$vendor_gli_data[$gl]->GLI_policy_aggregate || $vendor_gli_data[$gl]->GLI_status == '-1') {
						$occur[] = 'no' ;
					}
					else{
						$occur[] = 'yes' ;
					}
				}
		
			//echo "<pre>"; print_r($occur); echo "</pre>"; 
			if( in_array("no", $occur) ){
			$cabins_gli[] = "no";
			}
			else{
			$cabins_gli[] = "yes";
			}
			$occur = '';
		}
		
		if($cabins_gli){
			if( in_array("yes", $cabins_gli) ){
			$special = "success";
			}
			else{
			$special = "fail";
			}
		}
		else{
				if($rfp_gli_data)
				$special = "fail";
				else
				$special = "success";
		}
			
		$cabins_gli[] = '';
		return $special ;
		
	}
//Completed
	function checknewspecialrequirements_aip($vendorid,$rfpid){
		$db = & JFactory::getDBO();
		$aip_data ="SELECT * from #__cam_vendor_auto_insurance  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($aip_data);
		$vendor_aip_data = $db->loadObjectList();
		//Get RFP data
		$rfp_aip_data ="SELECT * from #__cam_master_autoinsurance_standards_rfps  WHERE rfpid=".$rfpid; //validation to status of docs
		$db->Setquery($rfp_aip_data);
		$rfp_aip_data = $db->loadObject();
		
			for( $ai=0; $ai<count($vendor_aip_data); $ai++ ){
				if($rfp_aip_data->applies_to_any == 'any'){
					if($rfp_aip_data->applies_to_any == $vendor_aip_data[$ai]->aip_applies_any){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}

				if($rfp_aip_data->applies_to_owned == 'owned'){
					if($rfp_aip_data->applies_to_owned == $vendor_aip_data[$ai]->aip_applies_owned){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}

				if($rfp_aip_data->applies_to_nonowned == 'nonowned'){
					if($rfp_aip_data->applies_to_nonowned == $vendor_aip_data[$ai]->aip_applies_nonowned){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}

				if($rfp_aip_data->applies_to_hired == 'hired'){
					if($rfp_aip_data->applies_to_hired == $vendor_aip_data[$ai]->aip_applies_hired){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}

				if($rfp_aip_data->applies_to_scheduled == 'scheduled'){
					if($vendor_aip_data[$ai]->aip_applies_scheduled == 'sch'){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->combined_single > '0'){	
					if($rfp_aip_data->combined_single <= $vendor_aip_data[$ai]->aip_combined){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->bodily_injusy_person > '0'){	
					if($rfp_aip_data->bodily_injusy_person <= $vendor_aip_data[$ai]->aip_bodily){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->bodily_injusy_accident > '0'){	
					if($rfp_aip_data->bodily_injusy_accident <= $vendor_aip_data[$ai]->aip_body_injury){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->property_damage > '0'){	
					if($rfp_aip_data->property_damage <= $vendor_aip_data[$ai]->aip_property){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->waiver == 'yes'){
					if($vendor_aip_data[$ai]->aip_waiver == 'waiver'){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->primary == 'yes'){
					if($vendor_aip_data[$ai]->aip_primary == 'primary'){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->additional_ins == 'yes'){
					if($vendor_aip_data[$ai]->aip_addition != ''){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->cert_holder == 'yes'){
					if($vendor_aip_data[$ai]->aip_cert == 'yes'){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data){
					if($vendor_aip_data[$ai]->aip_end_date < date('Y-m-d') || $vendor_aip_data[$ai]->aip_upld_cert=='' || $vendor_aip_data[$ai]->aip_status == '-1' || !$vendor_aip_data[$ai]->aip_combined ) 		{
						$occur_aip[] = 'no' ;
						}
					else
						{
						$occur_aip[] = 'yes' ;
						}
				}
				
				if( in_array("no", $occur_aip) ){
					$cabins_aip[] = "no";
				}
				else{
					$cabins_aip[] = "yes";
				}
				$occur_aip = '';	
			}	
			if($cabins_aip){
				if( in_array("yes", $cabins_aip) ){
					$special_aip = "success";
				}
				else{
					$special_aip = "fail";
				}
			}
			else{
				if($rfp_aip_data)
				$special_aip = "fail";
				else
				$special_aip = "success";
			}
			
				$cabins_aip[] = '';
		
		return $special_aip ;
		
		
	}
	//Function to check WCI documents
	function checknewspecialrequirements_wci($vendorid,$rfpid){
		
		$db = & JFactory::getDBO();
		$wci_data ="SELECT * from #__cam_vendor_workers_companies_insurance  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($wci_data);
		$vendor_wci_data = $db->loadObjectList();
		//Get RFP data
		$rfp_wci_data ="SELECT * from #__cam_master_workers_standards_rfps WHERE rfpid=".$rfpid; //validation to status of docs
		$db->Setquery($rfp_wci_data);
		$rfp_wci_data = $db->loadObject();

			for( $wci=0; $wci<count($vendor_wci_data); $wci++ ){
				
				if($rfp_wci_data->disease_policy > '0'){	
					if($rfp_wci_data->disease_policy <= $vendor_wci_data[$wci]->WCI_disease_policy){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}	
					
				if($rfp_wci_data->disease_eachemp > '0'){
					if($rfp_wci_data->disease_eachemp <= $vendor_wci_data[$wci]->WCI_disease){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}
				
				if($rfp_wci_data->waiver_work == 'yes'){
					if($vendor_wci_data[$wci]->WCI_waiver == 'waiver'){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}
				
				if($rfp_wci_data->each_accident > '0'){
					if($rfp_wci_data->each_accident <= $vendor_wci_data[$wci]->WCI_each_accident){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}
				
				if($rfp_wci_data->certholder_work == 'yes'){
					if($vendor_wci_data[$wci]->WCI_cert == 'yes'){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}
				if($rfp_wci_data){
					if($vendor_wci_data[$wci]->WCI_end_date < date('Y-m-d') || $vendor_wci_data[$wci]->WCI_upld_cert=='' || $vendor_wci_data[$wci]->WCI_status == '-1') {
							$occur_wci[] = 'no' ;
					}
					else{
							$occur_wci[] = 'yes' ;
					}
				}	
				if( in_array("no", $occur_wci) ){
					$cabins_wci[] = "no";
				}
				else{
					$cabins_wci[] = "yes";
				}
				$occur_wci = '';
			}
			
			if($cabins_wci){
				if( in_array("yes", $cabins_wci) ){
					$special_wci = "success";
				}
				else{
					$special_wci = "fail";
				}
			}
			else{
				if($rfp_wci_data)
				$special_wci = "fail";
				else
				$special_wci = "success";
			}
			
				$cabins_wci[] = '';
		
		return $special_wci ;
	}
	
	//COmpleted
	//function to check umbrella liability documents
	 function checknewspecialrequirements_umb($vendorid,$rfpid){
		$db = & JFactory::getDBO();
		//echo $vendorid.'<br />';
		$umb_data ="SELECT * from #__cam_vendor_umbrella_license  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($umb_data);
		$vendor_umb_data = $db->loadObjectList();
		//Get RFP data
		$rfp_umb_data ="SELECT * from #__cam_master_umbrellainsurance_standards_rfps WHERE rfpid=".$rfpid; //validation to status of docs
		$db->Setquery($rfp_umb_data);
		$rfp_umb_data = $db->loadObject();
		
			for( $umb=0; $umb<count($vendor_umb_data); $umb++ ){
				
				if($rfp_umb_data->each_occur > '0'){	
					if($rfp_umb_data->each_occur <= $vendor_umb_data[$umb]->UMB_occur){
						$occur_umb[] = 'yes' ;
					}
					else{
						$occur_umb[] = 'no' ;
					}
				}	
				if($rfp_umb_data->aggregate > '0'){	
					if($rfp_umb_data->aggregate <= $vendor_umb_data[$umb]->UMB_aggregate){
						$occur_umb[] = 'yes' ;
					}
					else{
						$occur_umb[] = 'no' ;
					}
				}	
				if($rfp_umb_data->certholder_umbrella == 'yes'){
					if($vendor_umb_data[$umb]->UMB_certholder == 'yes'){
						$occur_umb[] = 'yes' ;
					}
					else{
						$occur_umb[] = 'no' ;
					}
				}
				if($rfp_umb_data){
				if($vendor_umb_data[$umb]->UMB_expdate < date('Y-m-d') || !$vendor_umb_data[$umb]->UMB_upld_cert || $vendor_umb_data[$umb]->UMB_status == '-1' || !$vendor_umb_data[$umb]->UMB_aggregate || !$vendor_umb_data[$umb]->UMB_occur) {
						$occur_umb[] = 'no' ;
				}
				else{
						$occur_umb[] = 'yes' ;
				}
				}
				//echo "<pre>"; print_r($occur_umb); echo "</pre>";
				if( in_array("no", $occur_umb) ){
					$cabins_umb[] = "no";
				}
				else{
					$cabins_umb[] = "yes";
				}
				$occur_umb = '';
			}	 
				
				if($cabins_umb){
					if( in_array("yes", $cabins_umb) ){
						$special_umb = "success";
					}
					else{
						$special_umb = "fail";
					}
				}
				else{
					if($rfp_umb_data)
					$special_umb = "fail";
					else
					$special_umb = "success";
				}
		
				$cabins_umb[] = '';
				return $special_umb ;
	 }
	//Completed
	//Funcion to check professional licensw
	function checknewspecialrequirements_pln($vendorid,$rfpid){

		$db = & JFactory::getDBO();
		$pln_data ="SELECT * from #__cam_vendor_professional_license  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($pln_data);
		$vendor_pln_data = $db->loadObjectList();
		//Get RFP data
		$rfp_pln_data ="SELECT * from #__cam_master_licinsurance_standards_rfps WHERE rfpid=".$rfpid; //validation to status of docs
		$db->Setquery($rfp_pln_data);
		$rfp_pln_data = $db->loadObject();
		
			for( $pln=0; $pln<count($vendor_pln_data); $pln++ ){
			
				if($rfp_pln_data->professional == 'yes'){
					if($vendor_pln_data[$pln]->PLN_expdate < date('Y-m-d') || !$vendor_pln_data[$pln]->PLN_upld_cert || $vendor_pln_data[$pln]->PLN_status == '-1') {
						$occur_pln[] = 'no' ;
					}
					else{
						$occur_pln[] = 'yes' ;
					}
				}
				
				if( in_array("no", $occur_pln) ){
					$cabins_pln[] = "no";
				}
				else{
					$cabins_pln[] = "yes";
				}
				$occur_pln = '';
			}	
			
			if($cabins_pln){
				if( in_array("yes", $cabins_pln) ){
					$special_pln = "success";
				}
				else{
					$special_pln = "fail";
				}
			}
			else{
					if($rfp_pln_data)
					$special_pln = "fail";
					else
					$special_pln = "success";
			}
			
				$cabins_pln[] = '';
				return $special_pln ;
	}
	//Completed
	function checknewspecialrequirements_omi($vendorid,$rfpid){
	
		$db = & JFactory::getDBO();
		$omi_data ="SELECT * from #__cam_vendor_errors_omissions_insurance WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($omi_data);
		$vendor_omi_data = $db->loadObjectList();
		//Get RFP data
		$rfp_omi_data ="SELECT * from #__cam_master_errors_omissions_rfps WHERE rfpid=".$rfpid." ";
		$db->Setquery($rfp_omi_data);
		$rfp_omi_data = $db->loadObject();
		
		
		
			for( $omi=0; $omi<count($rfp_omi_data); $omi++ ){
				
				if($rfp_omi_data->each_claim > '0'){	
					if($rfp_omi_data->each_claim <= $vendor_omi_data[$omi]->OMI_each_claim){
						$occur_omi[] = 'yes' ;
					}
					else{
						$occur_omi[] = 'no' ;
					}
				}	
				if($rfp_omi_data->aggregate_omi > '0'){	
					if($rfp_omi_data->aggregate_omi <= $vendor_omi_data[$omi]->OMI_aggregate){
						$occur_omi[] = 'yes' ;
					}
					else{
						$occur_omi[] = 'no' ;
					}
				}	
				if($rfp_omi_data->certholder_omi == 'yes'){
					if($vendor_omi_data[$omi]->OMI_cert == 'yes'){
						$occur_omi[] = 'yes' ;
					}
					else{
						$occur_omi[] = 'no' ;
					}
				}
				if($rfp_omi_data){
				if($vendor_omi_data[$omi]->OMI_end_date < date('Y-m-d') || !$vendor_omi_data[$omi]->OMI_upld_cert || $vendor_omi_data[$omi]->OMI_status == '-1' ) {
						$occur_omi[] = 'no' ;
				}
				else{
						$occur_omi[] = 'yes' ;
				}
				}
				
				/*if( $vendorid == '1767' ){
				echo "<pre>";	print_r($occur_omi); echo "</pre>";
				//echo "<pre>";	print_r($rfp_omi_data); echo "</pre>";
				}*/
		
				if($occur_omi){
					if( in_array("no", $occur_omi) ){
						$cabins_omi[] = "no";
					}
					else{
						$cabins_omi[] = "yes";
					}
				}
				$occur_omi = '';
			}	
			
				if($cabins_omi){
					if( in_array("yes", $cabins_omi) ){
						$special_omi = "success";
					}
					else{
						$special_omi = "fail";
					}
				}
				else{
					if($rfp_omi_data)
					$special_omi = "fail";
					else
					$special_omi = "success";
				}
		
				$cabins_omi = '';
				return $special_omi ;
	}
	
	function getrating($vendorid){
	$db =& JFactory::getDBO();
	
	$ratecount = "SELECT V.apple FROM `#__cam_vendor_proposals` as U, `#__cam_rfpinfo` as V where U.proposedvendorid=".$vendorid." and V.apple!=0 and V.apple_publish=0 and U.proposaltype='Awarded' and U.rfpno = V.id ";
	$db->setQuery($ratecount);
	$count_vs=$db->loadObjectList();
	
	$camratingf = "SELECT camrating FROM `#__users` where id=".$vendorid."  ";
		$db->setQuery($camratingf);
		$cam_ratingf = $db->loadResult();
		
	if($count_vs){
		for($c=0; $c<count($count_vs); $c++){
		$total = $total + $count_vs[$c]->apple ;
		}
		$camrating = "SELECT camrating FROM `#__users` where id=".$vendorid."  ";
		$db->setQuery($camrating);
		$cam_rating = $db->loadResult();
		
		if($cam_rating) {
		$total = $total + $cam_rating ;
		$count = count($count_vs) + 1;
		$avgrating = $total  / $count;	
		$rating =  round($avgrating, 1); 
		}
		else {
		$avgrating = $total  / count($count_vs);	
		$rating =  round($avgrating, 1); 
		}
	}
	else if($cam_ratingf){
	$rating = round($cam_ratingf, 1); 
	}
	else{
	$rating = 4 ;
	} 

	if ($rating > 0 && $rating <= 0.50)
			{ $rate_image = $rateimage.'5.png';  $rating='0.5'; }
			elseif ($rating > 0.50 && $rating <= 1.00)
			{ $rate_image = $rateimage.'10.png'; $rating='1'; }
			elseif ($rating > 1.00 && $rating <= 1.50)
			{ $rate_image = $rateimage.'15.png'; $rating='1.5';}
			elseif ($rating > 1.50 && $rating <= 2.00)
			{ $rate_image = $rateimage.'20.png'; $rating='2';}
			elseif ($rating > 2.00 && $rating <= 2.50)
			{ $rate_image = $rateimage.'25.png'; $rating='2.5';}
			elseif ($rating > 2.50 && $rating <= 3.00)
			{ $rate_image = $rateimage.'30.png'; $rating='3';}
			elseif ($rating > 3.00 && $rating <= 3.50)
			{ $rate_image = $rateimage.'35.png'; $rating='3.5';}
			elseif ($rating > 3.50 && $rating <= 4.00)
			{ $rate_image = $rateimage.'40.png'; $rating='4';}
			elseif ($rating > 4.00 && $rating <= 4.50)
			{ $rate_image = $rateimage.'45.png'; $rating='4.5';}
			elseif ($rating > 4.50 && $rating <= 5.00)
			{ $rate_image = $rateimage.'50.png'; $rating='5';}
			else
			{ $rate_image = $rateimage.'40.png'; $rating='4';}
			$total = 0;

	return $rate_image ;
	
	}
	//To save the special requirement
	function saveoutsidevendor($data)
	{
		$row = & $this->getTable('saveoutsidevendor');
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
	}
	//Completed
	function getoutsidevendor(){
		$db = JFactory::getDBO();
		$rfpid = JRequest::getVar('rid','');
		$outers ="SELECT * FROM #__cam_external_vendors WHERE rfpid='".$rfpid."' ";
		$db->setQuery( $outers);
		$outsidevendors = $db->loadObjectlist();
		return $outsidevendors; 
	}
	function getmanagercompany(){
		$db = JFactory::getDBO();
		$user =& JFactory::getUser();
		$mgr ="SELECT comp_name FROM #__cam_customer_companyinfo where cust_id=".$user->id;
		$db->setQuery( $mgr );
		$manager_company = $db->loadResult();
		return $manager_company;
	}
	
	function getvendorinformation($vendorid){
		$db = JFactory::getDBO();
		$vendor_data ="SELECT name, lastname, email, ccemail FROM #__users where id=".$vendorid." ";
		$db->setQuery( $vendor_data );
		$vendor = $db->loadObject();
		return $vendor;
	}
	function getvendorcname($vendorid){
		$db = JFactory::getDBO();
		$vendor_company ="SELECT company_name FROM #__cam_vendor_company where user_id=".$vendorid." ";
		$db->setQuery( $vendor_company );
		$vendor_cname = $db->loadResult();
		return $vendor_cname;
	}
	function getmailcontent(){
		$db = JFactory::getDBO();
		$query_rejectedemail ="SELECT introtext  FROM #__content where id='285' ";
		$db->setQuery( $query_rejectedemail );
		$mailcontent = $db->loadResult();
		return $mailcontent;
	}
	// Function to get the attached files in the general notes section
	function getgeneraldocs(){
		$db=&JFactory::getDBO();
		$rfpid = JRequest::getVar('rfp_id','');
		$proposalid = JRequest::getVar('Proposal_id','');
		$vendorid = JRequest::getVar('vendor_id','');
		$type = JRequest::getVar('Alt_Prp','');
		$generaldocs = "SELECT * FROM #__cam_generalfiles WHERE rfpid=".$rfpid." and proposalid=".$proposalid." and vendorid=".$vendorid." and proposal_type='".$type."'  ";
		$db->setQuery($generaldocs);
		$general_docs = $db->loadObjectList();
		return $general_docs;
		
	}
	
	//To get the vendor company name
	function getvendorcompanyname($vendorid){
		$db = JFactory::getDBO();
		$rfpid = JRequest::getVar('rfp_id','');
		$query_vdata ="SELECT u.company_name, u.company_address, u.city, u.state, u.zipcode, u.company_phone, u.phone_ext, v.contact_name, u.alt_phone, u.alt_phone_ext FROM #__cam_vendor_company as u, #__cam_vendor_proposals as v WHERE v.rfpno =".$rfpid." and v.proposedvendorid=".$vendorid." and u.user_id=".$vendorid." and v.contact_name != '' ";
		$db->setQuery( $query_vdata );
		$vinfo = $db->loadObject();
		$prop_userid = JFactory::getUser($vendorid);
		$vinfo->email = $prop_userid->email ;
		$vendor_state ="SELECT code FROM #__cam_vendor_states WHERE id =".$vinfo->state." ";
		$db->setQuery( $vendor_state );
		$vendorstate = $db->loadResult();
		$vinfo->state = $vendorstate ;
		return $vinfo; 
	}
	
	function getgenerallibilities(){
		$rfp_id = JRequest::getVar('rfp_id','');
		$db=&JFactory::getDBO();
		$rfp_gli_data ="SELECT * from #__cam_master_generalinsurance_standards_rfps  WHERE rfpid=".$rfp_id; //validation to status of docs
		$db->Setquery($rfp_gli_data);
		$generaldata = $db->loadObject();
	
		if( $generaldata ) {
	$g_data = '<table width="100%" border="0" style="font-size:12px;"><tr><td><strong>General Liability</strong></td></tr><tr><td><ul style="list-style-type:none;">';
		 if($generaldata->occur){ 
	$g_data .= '<li>Occur</li>';
		 } 
		 if($generaldata->each_occurrence && $generaldata->each_occurrence != '0.00'){ 
	$g_data .= '<li>Each Occurrence: <span id="greenbolddolor">$ '.number_format($generaldata->each_occurrence,2).'</span></li>';
		 } 
		 if($generaldata->damage_retend && $generaldata->damage_retend != '0.00'){ 
	$g_data .= '<li>Damage to Rented Premises: <span id="greenbolddolor">$ '.number_format($generaldata->damage_retend,2) .'</span></li>';
		 }
		 if($generaldata->med_expenses && $generaldata->med_expenses != '0.00'){ 
	$g_data .= 	'<li>Med Expenses: <span id="greenbolddolor">$ '.number_format($generaldata->med_expenses,2) .'</span></li>';
		 }
		 if($generaldata->personal_inj && $generaldata->personal_inj != '0.00'){ 
	$g_data .= '<li>Personal & Adv injury: <span id="greenbolddolor">$ '.number_format($generaldata->personal_inj,2) .'</span></li>';
		 }
		if( $generaldata->general_aggr  ){
	$g_data .= '<li>General Aggregate:&nbsp;<span id="greenbolddolor">$ '.number_format($aggregate_price,2) .'</span>';
		}
		if($generaldata->applies_to){ 
		$g_data .= '&nbsp;&nbsp;| &nbsp;&nbsp;Applies To:&nbsp;&nbsp;';
		if($generaldata->applies_to == 'pol') {
		$g_data .= 'Pol&nbsp;&nbsp; ';
		}
		else if($generaldata->applies_to == 'proj'){
		$g_data .= 'Proj&nbsp;&nbsp;';
		}
		else if($generaldata->applies_to == 'loc') {
		$g_data .= 'Loc';
		}
		$g_data .= '</li>';
		 } 
		 
		if($generaldata->products_aggr && $generaldata->products_aggr !='0.00' ){ 
		$g_data .= '<li>Products - COMP/OP Aggregate: <span id="greenbolddolor">$ '.number_format($generaldata->products_aggr,2) .'</span></li>';
		 } 
		if($generaldata->waiver_sub == 'yes'){ 
		$g_data .= '<li><label>Waiver of Subrogation</label></li>';
		 } 
		if($generaldata->primary_noncontr == 'yes'){ 
		$g_data .= '<li><label> Primary Non-Contributory</label></li>';
		 } 
		if($generaldata->additional_insured == 'yes'){ 
		$g_data .= '<li><label> List my Company as as "Additional Insured"</label></li>' ;
		 } 
		 if($generaldata->cert_holder == 'yes'){ 
		$g_data .= '<li><label> MyVendorCenter listed as Cert. Holder</label></li>';
		 } 
		$g_data .= '</ul></td></td></tr></table> ';
	 } 
	 return $g_data;
	}
	function getautolibilities(){
		$rfp_id = JRequest::getVar('rfp_id','');
		$db=&JFactory::getDBO();
		$rfp_aip_data ="SELECT * from #__cam_master_autoinsurance_standards_rfps  WHERE rfpid=".$rfp_id; //validation to status of docs
		$db->Setquery($rfp_aip_data);
		$autodata = $db->loadObject();
		
		if($autodata){  
		$g_data = '<table width="100%" border="0" style="font-size:12px;"><tr><td><strong>Auto Liability</strong></td></tr><tr><td><ul style="list-style-type:none;">';
		 } 
		
		if($autodata->applies_to_any || $autodata->applies_to_owned || $autodata->applies_to_nonowned || $autodata->applies_to_hired || $autodata->applies_to_scheduled){ 
			$g_data .= '<li>Applies To:';
		if($autodata->applies_to_any) 
		$g_data .= 'Any&nbsp;&nbsp; ';
		if($autodata->applies_to_owned)
		$g_data .= 'Owned&nbsp;&nbsp; ';
		if($autodata->applies_to_nonowned)
		$g_data .= 'Non-Owned&nbsp;&nbsp; ';	
		if($autodata->applies_to_hired)
		$g_data .= 'Hired&nbsp;&nbsp; ';	
		if($autodata->applies_to_scheduled)
		$g_data .= 'Scheduled&nbsp;&nbsp; ';	
		$g_data .= '</li>';	
		}
		if($autodata->combined_single && $autodata->combined_single != '0.00'){
			$g_data .= '<li>Combined Single Limit: <span id="greenbolddolor">$ '.number_format($autodata->combined_single,2) .'</span></li>';
		}
		if($autodata->bodily_injusy_person && $autodata->bodily_injusy_person != '0.00'){ 
			$g_data .= '<li>Bodily Injury - Per Person: <span id="greenbolddolor">$ '.number_format($autodata->bodily_injusy_person,2) .'</span></li>';
		}
		if($autodata->bodily_injusy_accident && $autodata->bodily_injusy_accident != '0.00'){ 
			$g_data .= '<li>Bodily Injury - Per Accident: <span id="greenbolddolor">$ '.number_format($autodata->bodily_injusy_accident,2) .'</span></li>';
		}
		if($autodata->property_damage && $autodata->property_damage != '0.00'){ 
			$g_data .= '<li>Property Damage - Per Accident: <span id="greenbolddolor">$ '.number_format($autodata->property_damage,2) .'</span></li>';
		}
		if($autodata->waiver == 'yes'){ 
			$g_data .= '<li><label>Waiver of Subrogation</label></li>';
		}
		if($autodata->primary == 'yes'){
			$g_data .= '<li><label>Primary Non-Contributory</label></li>';
		}
		if($autodata->additional_ins == 'yes'){
			$g_data .= '<li><label>List my Company as as "Additional Insured"</label></li>';
		}
		if($autodata->cert_holder == 'yes'){
			$g_data .= '<li><label>MyVendorCenter listed as Cert. Holder</label></li>';
		}
		if($autodata){ 
		$g_data .= '</ul></td></td></tr></table>';
		 } 
		 //echo $g_data; exit;
		return $g_data;
	}	

	function getworkerslibilities(){
		$rfp_id = JRequest::getVar('rfp_id','');
		$db=&JFactory::getDBO();
		$rfp_wci_data ="SELECT * from #__cam_master_workers_standards_rfps WHERE rfpid=".$rfp_id; //validation to status of docs
		$db->Setquery($rfp_wci_data);
		$workdata = $db->loadObject();
		if($workdata)
		{
			$g_data = '<table width="100%" border="0" style="font-size:12px;"><tr><td><strong>Worker`s Comp Policy/Employer`s Liability</strong></td></tr><tr><td><ul style="list-style-type:none;">';
		}
		if($workdata->workers_not == 'not'){
			if($workdata->workers_not){
			$g_data .= '<li>Worker`s Comp Exemptions NOT accepted</li>';
			}
			if($workdata->each_accident && $workdata->each_accident != '0.00'){
			$g_data .= '<li>Each Accident: <span id="greenbolddolor">$ '.number_format($workdata->each_accident,2) .'</span></li>';
			}
			if($workdata->disease_policy && $workdata->disease_policy != '0.00'){
			$g_data .= '<li>Desease - Policy Limit: <span id="greenbolddolor">$ '.number_format($workdata->disease_policy,2) .'</span></li>';
			}
			if($workdata->disease_eachemp && $workdata->disease_eachemp != '0.00'){
			$g_data .= '<li>Desease - Each Employee: <span id="greenbolddolor">$ '.number_format($workdata->disease_eachemp,2) .'</span></li>';
			}
			if($workdata->waiver_work == 'yes'){
			$g_data .= '<li>Waiver of Subrogation</li>';
			}
			if($workdata->certholder_work == 'yes'){
			$g_data .= '<li>MyVendorCenter listed as Cert. Holder</li>';
			}
		}
		else if($workdata->workers_not == 'yes'){
			$g_data .= '<li>Worker`s Comp Exemptions accepted<br />WARNING: Worker`s Comp. Exemption Certificates are commonly mistaken for a Worker`s Comp policy. Please be aware that this "exemption" does NOT offer the property manager/association/building owner any form of protection against liability for an injured worker`s loss of wages and/or medical expenses if an on-the-job injury occurs. Consult your legal advisor for your unique situation, as laws vary by jurisdiction.
		</li>';
		}
		if($workdata){ 
		$g_data .= '</ul></td></td></tr></table>';
		 }
		// echo $g_data; exit;
		return $g_data ;  
	}
	
	function getumblibilities(){
		$rfp_id = JRequest::getVar('rfp_id','');
		$db=&JFactory::getDBO();
		$rfp_umb_data ="SELECT * from #__cam_master_umbrellainsurance_standards_rfps WHERE rfpid=".$rfp_id; //validation to status of docs
		$db->Setquery($rfp_umb_data);
		$umbrelladata = $db->loadObject();
		
		if($umbrelladata)
		{
			$g_data = '<table width="100%" border="0" style="font-size:12px;"><tr><td><strong>Umbrella Liability</strong></td></tr><tr><td><ul style="list-style-type:none;">';
		}
		if($umbrelladata->each_occur && $umbrelladata->each_occur != '0.00'){
			$g_data .= '<li>Each Occurrence: <span id="greenbolddolor">$ '.number_format($umbrelladata->each_occur,2) .'</span></li>';
		}
		if($umbrelladata->aggregate && $umbrelladata->aggregate != '0.00'){
			$g_data .= '<li>Aggregate: <span id="greenbolddolor">$ '.number_format($umbrelladata->aggregate,2) .'</span></li>';
		}
		if($umbrelladata->certholder_umbrella == 'yes'){
			$g_data .= '<li>MyVendorCenter listed as Cert. Holder</li>';
		}
		
		if($umbrelladata){ 
		$g_data .= '</ul></td></td></tr></table>';
		}
		return $g_data;
	}
	
	function getliclibilities(){
		$rfp_id = JRequest::getVar('rfp_id','');
		$db=&JFactory::getDBO();
		$rfp_pln_data ="SELECT * from #__cam_master_licinsurance_standards_rfps WHERE rfpid=".$rfp_id; //validation to status of docs
		$db->Setquery($rfp_pln_data);
		$licdata = $db->loadObject();	
		
		if($licdata)
		{
			$g_data = '<table width="100%" border="0" style="font-size:12px;"><tr><td><strong>Umbrella Liability</strong></td></tr><tr><td><ul style="list-style-type:none;">';
		}
		if($licdata->professional == 'yes'){
			$g_data .= '<li><label>Professional License</label></li>';
		}
		if($licdata->occupational == 'yes'){
			$g_data .= '<li><label>Occupational License</label></li>';
		}
		if($licdata){ 
		$g_data .= '</ul></td></td></tr></table>';
		}
		return $g_data;
	}
	
	function getomilibilities(){
		$rfp_id = JRequest::getVar('rfp_id','');
		$db=&JFactory::getDBO();
		$rfp_omi_data ="SELECT * from #__cam_master_errors_omissions_rfps WHERE rfpid=".$rfp_id; //validation to status of docs
		$db->Setquery($rfp_omi_data);
		$omidata = $db->loadObject();
		
		if($omidata)
		{
			$g_data = '<table width="100%" border="0" style="font-size:12px;"><tr><td><strong>ERRORS & OMISSIONS INSURANCE</strong></td></tr><tr><td><ul style="list-style-type:none;">';
		}
		if($omidata->each_claim && $omidata->each_claim != '0.00'){
			$g_data .= '<li>Each Claim: <span id="greenbolddolor">$ '.number_format($omidata->each_claim,2) .'</span></li>';
		}
		if($omidata->aggregate_omi && $omidata->aggregate_omi != '0.00'){
			$g_data .= '<li>Aggregate: <span id="greenbolddolor">$ '.number_format($omidata->aggregate_omi,2) .'</span></li>';
		}
		if($omidata->certholder_omi == 'yes'){
			$g_data .= '<li>MyVendorCenter listed as Cert. Holder</li>';
		}
		
		if($omidata){ 
		$g_data .= '</ul></td></td></tr></table>';
		}
		return $g_data;
	}
	
	//Function to send the mail to vendor
	function sendmail_reminder($rfpid, $vendorid, $proposal_type){
	
		$db=&JFactory::getDBO();
		$user = JFactory::getUser();
		//Vendor data
		$vendor_data = "SELECT u.email,u.name,u.lastname,u.ccemail,v.company_name FROM #__users as u, #__cam_vendor_company as v WHERE u.id='".$vendorid."' and v.user_id=".$vendorid." ";
	    $db->Setquery($vendor_data);
        $vendorinfo = $db->loadObject();	
		//Manager data
		$manager_data = "SELECT comp_name FROM #__cam_customer_companyinfo WHERE cust_id='".$user->id."'";
		$db->setQuery($manager_data);
		$managerinfo = $db->loadResult();	
		$mailsend = $this->sendmail_reminder_sub($rfpid, $vendorinfo, $managerinfo, $proposal_type);
		$success = '1';
		return $success; 
	}
	//Completed
	function sendmail_reminder_sub($rfpid, $vendorinfo,$managerinfo, $proposal_type){
		$db=&JFactory::getDBO();
		$user = JFactory::getUser();
		
		$rfp_name = "SELECT u.projectName, v.property_name, u.proposalDueDate FROM #__cam_rfpinfo as u, #__cam_property as v WHERE u.id='".$rfpid."' and u.property_id=v.id";
		$db->setQuery($rfp_name);
		$projectName = $db->loadObject();
		
		$date2= explode('-',$projectName->proposalDueDate);
		$date= $date2[1];
		$month= $date2[0];
		$year= $date2[2];	
		$rfpdate = $year.'-'.$month.'-'.$date;
		$redate = strtotime(date("Y-m-d", strtotime($rfpdate)) . "0 day");   //Adding 1 days to (X) days 
		$rfpdate = date('m-d-Y', $redate);
		$totaltime = $rfpdate.' '.date("g:i A", strtotime($rfps[$r]->proposalDueTime));
		
		if( $proposal_type == '2' ){
		$message = "SELECT introtext FROM #__content WHERE  id=302";
		$db->setQuery($message);
		$body = $db->loadResult();
		$vendorname = $vendorinfo->name. ' ' . $vendorinfo->lastname;	
		$m_name = $user->name.'&nbsp;'.$user->lastname ;
		$body = str_replace('{VENDORNAME}',$vendorinfo->company_name,$body);
		$body = str_replace('{RFPNO}',$rfpid,$body);
		$body = str_replace('{CAMFIRMNAME}',$managerinfo,$body);
		$body = str_replace('{RFP NAME}',$projectName->projectName,$body);
		$body = str_replace('{PROPERTY NAME}',str_replace('_',' ',$projectName->property_name),$body);
		$body = str_replace('{MANAGEMENT FIRM COMPANY NAME}',$managerinfo,$body);
		$body = str_replace('{MANAGER NAME}',$m_name,$body);
		$body = str_replace('{DUEDATEANDTIME}',$totaltime,$body);
	
		$sub="Courtesy Reminder to Submit Your Proposal";
		}
		else {
		$message = "SELECT introtext FROM #__content WHERE  id=301";
		$db->setQuery($message);
		$body = $db->loadResult();
		$vendorname = $vendorinfo->name. ' ' . $vendorinfo->lastname;	
		$m_name = $user->name.'&nbsp;'.$user->lastname ;
		
		$mcompany_name = "SELECT comp_name FROM #__cam_customer_companyinfo  WHERE cust_id=".$user->id;
		$db->setQuery( $mcompany_name );
		$mname = $db->loadResult();
		
			$body = str_replace('[Vendor Company Name]',$vendorinfo->company_name,$body);
			$body = str_replace('{MANAGER NAME}',$m_name,$body);
			$body = str_replace('[Property Name]',str_replace('_',' ',$projectName->property_name),$body);
			$body = str_replace('[RFP Name]',$projectName->projectName,$body);
			$body = str_replace('{MANAGEMENT FIRM COMPANY NAME}',$mname,$body);
			$rfpid_m = '('.$rfpid.')';
			$body = str_replace('(RFP #)',$rfpid_m,$body);
			$sub = "Please respond to your Project Invitation";
			
		}
		
		$to = $vendorinfo->email;
		$from = $user->email ;
		if( $user->user_type == '16' )
		$from_name  = $user->name.'&nbsp;'.$user->lastname ;
		else
		$from_name = $managerinfo;
		
		$successMail =JUtility::sendMail($from, $from_name, $to, $sub, $body,$mode = 1);
		$to_eric = 'vendoremails@myvendorcenter.com' ;
		$successMail =JUtility::sendMail($from, $from_name, $to_eric, $sub, $body,$mode = 1);
		
		$vendorccmail = $vendorinfo->ccemail ;
		$cclist = explode(';',$vendorccmail);
			for($c=0; $c<=count($cclist); $c++)
				{
					$listcc = $cclist[$c];
						if($listcc){
							$successMail =JUtility::sendMail($from, $from_name, $listcc, $sub, $body,$mode = 1);
						}
				}
					
		$success = '1';
		return $success; 
	}
	// Function to save reminders
	function store_reminder($data){

	$row =& $this->getTable('reminders');
	//echo "<pre>"; print_r($row);print_r($post); exit;
		jimport('joomla.user.helper');
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		return true;
	}
	//Completed
	function totaldraftvendors($rfpid){

		$db = JFactory::getDBO();
		$query_itbs = "SELECT u.user_id, v.id FROM #__cam_vendor_company as u, #__cam_vendor_proposals as v WHERE v.rfpno=".$rfpid." and v.proposedvendorid=u.user_id and ( v.proposaltype='ITB' or v.proposaltype='review' or v.proposaltype='Draft' ) and v.bidfrom='' group by u.user_id ";
		$db->setQuery( $query_itbs );
		$vendor_drafts = $db->loadObjectList();
		return $vendor_drafts; 
	}
	
	function totalinvitevendors($rfpid){
		$db = JFactory::getDBO();
		$query_itbs = "SELECT u.user_id, v.id FROM #__cam_vendor_company as u, #__cam_vendor_proposals as v WHERE v.rfpno=".$rfpid." and v.proposedvendorid=u.user_id and ( v.proposaltype='ITB' or v.proposaltype='review' ) and v.bidfrom='admin' ";
		 $db->setQuery( $query_itbs );
		$vendor_invites = $db->loadObjectList();
		return $vendor_invites; 
	}
	function totaldraftvendorswithalt($rfpid){

		$db = JFactory::getDBO();
		$query_itbs = "SELECT u.user_id, v.id FROM #__cam_vendor_company as u, #__cam_vendor_proposals as v WHERE v.rfpno=".$rfpid." and v.proposedvendorid=u.user_id and ( v.proposaltype='ITB' or v.proposaltype='review' or v.proposaltype='Draft' ) and v.bidfrom='' ";
		$db->setQuery( $query_itbs );
		$vendor_drafts = $db->loadObjectList();
		return $vendor_drafts; 
	}
	//Function to get all invitations and draft proposals
	function alldraftproposals($rfp_id){
		$db = JFactory::getDBO();
		$query_itbs = "SELECT u.user_id, v.id, v.proposedvendorid, u.company_name FROM #__cam_vendor_company as u, #__cam_vendor_proposals as v WHERE v.rfpno=".$rfp_id." and v.proposedvendorid=u.user_id and ( v.proposaltype='ITB' or v.proposaltype='review' or v.proposaltype='Draft' ) and v.Alt_bid!='yes' ";
		$db->setQuery( $query_itbs );
		$vendor_drafts = $db->loadObjectList();
		
		for( $i=0; $i<count($vendor_drafts); $i++ ){
			$query_decline = "SELECT not_interested FROM #__cam_vendor_availablejobs WHERE rfp_id=".$rfp_id." and user_id=".$vendor_drafts[$i]->user_id."  ";
		$db->setQuery( $query_decline );
		$decline = $db->loadResult();
			if( $decline == '2' )
			$vendor_drafts[$i]->declined = 'yes';
			else
			$vendor_drafts[$i]->declined = '';
		}
		
		return $vendor_drafts; 
	}
	//Completed
	//Function to send the message to un-invited vendors
	function sendmessage($vendors,$rfpid,$reason){
		$db = JFactory::getDBO();
		$user =& JFactory::getUser();
		$manager_fullname = $user->name.' '.$user->lastname ;
			for( $v=0; $v < count($vendors); $v++){
				$body = $this->getmessage();
				$vendorinfo = $this->getvendordetails($vendors[$v]);
				$rfpinfo = $this->getrfpdedatils($rfpid);
				$managerinfo = $this->getmanagerinfo();
				$body = str_replace('[Vendor Company Name]',$vendorinfo->company_name,$body);
				$body = str_replace('(RFP#)',$rfpinfo->id,$body);
				$body = str_replace('[reference name]',$rfpinfo->projectName,$body);
				$body = str_replace('[Community Name]',$rfpinfo->property_name,$body);
				$body = str_replace('[Reson given]',$reason,$body);
				$body = str_replace('[Manager Full Name]',$manager_fullname,$body);
				$body = str_replace('[Manager Company Name]',$managerinfo->comp_name,$body);
				
				$to = $vendorinfo->email;
				
				$from = $user->email ;
				if( $user->user_type == '16' )
				$from_name = $managerinfo->comp_name;
				else
				$from_name = $user->name.'&nbsp;'.$user->lastname;
				$sub = "You have been uninvited from a request";
				$successMail =JUtility::sendMail($from, $from_name, $to, $sub, $body,$mode = 1);
				$to_support = 'vendoremails@myvendorcenter.com';
				$successMail =JUtility::sendMail($from, $from_name, $to_support, $sub, $body,$mode = 1);
				$vendorccmail = $vendorinfo->ccemail ;
				$cclist = explode(';',$vendorccmail);
					for($c=0; $c<=count($cclist); $c++)
						{
							$listcc = $cclist[$c];
								if($listcc){
									$successMail = JUtility::sendMail($from, $from_name, $listcc, $sub, $body,$mode = 1);
								}
						}
				
				// To save the info
				$uninvite['rfpid'] = $rfpid;
				$uninvite['vendorid'] = $vendors[$v];
				$uninvite['reason'] = $reason;
				$uninvite['date_sent'] = date("Y-m-d H:i");
				$save = $this->store_uninvite($uninvite) ;
				//Update Proposal info
				$update_proposal = $this->updateproposal($rfpid,$vendors[$v]) ;
			}
			
			$success = '1';
			return $success;
	}
	//Function to get message
	function getmessage(){
		$db = JFactory::getDBO();
		$manager_uninvites ="SELECT introtext  FROM #__content where id='296' ";
		$db->setQuery( $manager_uninvites );
		$mail_content = $db->loadResult();
		return $mail_content;
	}
	//Function to get vendor details
	function getvendordetails($vendorid){
		$db = JFactory::getDBO();
		$vendor_info ="SELECT u.company_name, v.email, v.ccemail FROM #__cam_vendor_company as u, #__users as v where v.id=".$vendorid." and u.user_id=".$vendorid." and u.user_id=v.id ";
		$db->setQuery( $vendor_info );
		$vendorinfo = $db->loadObject();
		return $vendorinfo;
	}
	//Function to get RFP details
	function getrfpdedatils($rfpid){
		$db = JFactory::getDBO();
		$rfp_info ="SELECT u.projectName, u.id, v.property_name FROM #__cam_property as v, #__cam_rfpinfo as u where u.id=".$rfpid." and u.property_id = v.id ";
		$db->setQuery( $rfp_info );
		$rfpinfo = $db->loadObject();
		return $rfpinfo;
	}
	//Function to get managerinformation
	function getmanagerinfo(){
		$db = JFactory::getDBO();
		$user =& JFactory::getUser();
		$manager_info ="SELECT comp_name FROM #__cam_customer_companyinfo where cust_id=".$user->id." ";
		$db->setQuery( $manager_info );
		$managerinfo = $db->loadObject();
		return $managerinfo;
	}
	//Function to store uninvite info
	function store_uninvite($post){
		$row = & $this->getTable('uninvitevendor');
		if (!$row->bind($post)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
	}	
	//Function  to update proposal type info
	function updateproposal($rfpid,$vendorid)
	{
		$id = JRequest::getVar('id');
		$db = & JFactory::getDBO();
		$query = "UPDATE #__cam_vendor_proposals SET proposaltype = 'uninvited' WHERE rfpno = ".$rfpid." and proposedvendorid = ".$vendorid." ";
		$db->setQuery($query);
		$result = $db->query();
		return $result;
	}
	//Function to get uninvite message
	function getreason_uninvite($rfpid,$vendorid){
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$sql = " SELECT reason FROM #__cam_rfp_uninvites WHERE rfpid = ".$rfpid." and vendorid=".$vendorid."  ";
		$db->Setquery($sql);
		$message = $db->loadResult();
		return $message;
	}
	
	//Function to get all invitations and draft proposals
	function alldraftproposals_count($rfp_id){
		$db = JFactory::getDBO();
		$query_itbs = "SELECT u.user_id, v.id, v.proposedvendorid, u.company_name FROM #__cam_vendor_company as u, #__cam_vendor_proposals as v WHERE v.rfpno=".$rfp_id." and v.proposedvendorid=u.user_id and ( v.proposaltype='ITB' or v.proposaltype='review' or v.proposaltype='Draft' ) and v.Alt_bid!='yes' ";
		$db->setQuery( $query_itbs );
		$vendor_drafts = $db->loadObjectList();
		
		for( $i=0; $i<count($vendor_drafts); $i++ ){
			$query_decline = "SELECT not_interested FROM #__cam_vendor_availablejobs WHERE rfp_id=".$rfp_id." and user_id=".$vendor_drafts[$i]->user_id."  ";
		$db->setQuery( $query_decline );
		$decline = $db->loadResult();
			if( $decline == '2' )
			$vendor_drafts[$i]->declined = 'yes';
			else
			$vendor_drafts[$i]->declined = '';
		}
		$dec = 0;
		if($vendor_drafts){
			for( $d=0; $d<count($vendor_drafts); $d++ ){ 
					if( $vendor_drafts[$d]->declined == 'yes' ){
						$dec = $dec + 1 ;
					}
			}
		}

		return count($vendor_drafts).'---'.$dec; 
	}
	//Completed
	
	function getmailbody($fails){
		$db = JFactory::getDBO();
		if( $fails == 'nonc' )
			$id = '297';
		else
			$id = '298';	
		$query_rejectedemail ="SELECT introtext  FROM #__content where id=".$id." ";
		$db->setQuery( $query_rejectedemail );
		$mailcontent = $db->loadResult();
		return $mailcontent;
	}
	//Function to get all vendors preferred
	function getpreferredvendors_list(){
	
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$vendortypes = $this->getvendortypes();
	
		if( $vendortypes->nonc == '0' && $vendortypes->compliant == '0' ) {
			if( $vendortypes->unverified == '1' )
				$where = " and W.subscribe_type = 'free' ";
			if( $vendortypes->verified == '1' )
				$where = " and W.subscribe_type != 'free' ";	
			if( $vendortypes->verified == '1' && $vendortypes->unverified == '1' )
				$where = "  ";	
		}	
		else{
			$where = "  ";	
		}
        if($user->user_type =='16')
		{
		$mangerids = $this->getallmanageracounts();
		$loggeduser[] = $user->id;

	    if( $mangerids )
		  $final_mans = array_merge($loggeduser,$mangerids);
	    else
		   $final_mans = $loggeduser;
		$manager_ids = implode(',',$final_mans);
		$whers_cond = 'U.userid IN ('.$manager_ids.')';
		}
		else
		$whers_cond = 'U.userid='.$user->id.'';
			
  $query_preferred = "SELECT DISTINCT(U.v_id), V.company_name, V.company_phone, W.id, W.subscribe_type, W.subscribe from #__vendor_inviteinfo as U, #__cam_vendor_company as V, #__users as W where LOWER(U.inhousevendors) = (W.email) and W.block=0 and V.user_id=W.id and ".$whers_cond." and W.block=0 and W.search='' ".$where." order by V.company_name ASC "; 
	$db->setQuery($query_preferred);
	$preferred = $db->loadObjectList();

		for( $v=0; $v<count($preferred); $v++ ){
			$vendor_industries = $this->getvendorindustries($preferred[$v]->id);//get all vendor industries		
			for( $in=0; $in<count($vendor_industries); $in++ ){
				$master = $this->getmasterfirmaccount();
			
				$checkglobal	=	$this->checkglobalstandards($vendor_industries[$in]->industry_id,$master);
				if( $checkglobal == 'success' )	{
				$totalprefers_new_w9=$this->checknewspecialrequirements_w9_indus($preferred[$v]->id,$vendor_industries[$in]->industry_id,$master);
				$totalprefers_new_gli=$this->checknewspecialrequirements_gli_indus($preferred[$v]->id,$vendor_industries[$in]->industry_id,$master);
				$totalprefers_new_aip=$this->checknewspecialrequirements_aip_indus($preferred[$v]->id,$vendor_industries[$in]->industry_id,$master);
				$totalprefers_new_wci=$this->checknewspecialrequirements_wci_indus($preferred[$v]->id,$vendor_industries[$in]->industry_id,$master);
				$totalprefers_new_umb=$this->checknewspecialrequirements_umb_indus($preferred[$v]->id,$vendor_industries[$in]->industry_id,$master);
				$totalprefers_new_pln=$this->checknewspecialrequirements_pln_indus($preferred[$v]->id,$vendor_industries[$in]->industry_id,$master);
				$totalprefers_new_occ=$this->checknewspecialrequirements_occ_indus($preferred[$v]->id,$vendor_industries[$in]->industry_id,$master);
				$totalprefers_new_omi=$this->checknewspecialrequirements_omi_indus($preferred[$v]->id,$vendor_industries[$in]->industry_id,$master);
				
					if($totalprefers_new_w9 == 'success' && $totalprefers_new_gli == 'success' && $totalprefers_new_aip == 'success' && $totalprefers_new_wci == 'success' && $totalprefers_new_umb == 'success' && $totalprefers_new_pln == 'success' && $totalprefers_new_occ == 'success'  && $totalprefers_new_omi == 'success' )
					{
						$c_status = 'Compliant'.'green';
						$terms_exist = $this->gettermsandconditions($master);//get vendor terms and conditions
						if($terms_exist == '1'){				
						$db =& JFactory::getDBO();
						$sql = "SELECT accepted FROM #__cam_vendor_terms WHERE masterid=".$master." and vendorid=".$preferred[$v]->id." ";
						$db->setQuery($sql);
						$terms = $db->loadResult();
						if($terms == '1'){
						$c_status = 'Compliant'.'green';
						$cstatus = 'complianct';
						}
						else{
						$c_status = 'Non-Compliant'.'red';
						$cstatus = 'noncomplianct';
						}
					}
					else{
						$c_status = 'Compliant'.'green';
						$cstatus = 'complianct';
					}
					
					}
					else
					{
						$c_status = 'Non-Compliant'.'red';
						$cstatus = 'noncomplianct';
					}
					//echo $cstatus.':';
					if( $preferred[$v]->subscribe == 'yes' && $preferred[$v]->subscribe_type == 'free' )
					$account_type = 'Unverified'.'red';
					else if( $preferred[$v]->subscribe == 'yes' && $preferred[$v]->subscribe_type != 'free' )
					$account_type = 'Verified'.'green';
					
					$vendor_documents = $this->getexpired_documents($preferred[$v]->id);
					$docs_permission = $this->getpermission_cdocs();
					//echo "<pre>"; print_r($docs_permission);exit;
					if( $vendortypes->compliant == '1' && $vendortypes->nonc == '1' ){
					$vendor_data[$vendor_industries[$in]->industry_name][] = $c_status.'MYVC'.$account_type .'MYVC' . $preferred[$v]->company_name .'MYVC'.$vendor_documents.'MYVC' . $preferred[$v]->company_phone ;	
					}
					else 
					{
					if( $vendortypes->nonc == '1' ){
						if( $cstatus == 'noncomplianct' )
						$vendor_data[$vendor_industries[$in]->industry_name][] = $c_status.'MYVC'.$account_type .'MYVC' . $preferred[$v]->company_name.'MYVC'.$vendor_documents.'MYVC'. $preferred[$v]->company_phone ;	
					}
					else if( $vendortypes->compliant == '1' ){
						if( $cstatus == 'complianct' )
						$vendor_data[$vendor_industries[$in]->industry_name][] = $c_status.'MYVC'.$account_type .'MYVC' . $preferred[$v]->company_name.'MYVC'.$vendor_documents.'MYVC' . $preferred[$v]->company_phone ;	
						}
					else if( $vendortypes->nonc == '0' && $vendortypes->compliant == '0' ){
						$vendor_data[$vendor_industries[$in]->industry_name][] = $c_status.'MYVC'.$account_type .'MYVC' . $preferred[$v]->company_name.'MYVC'.$vendor_documents.'MYVC' . $preferred[$v]->company_phone ;	
					
					}
					}
					
				}
			}
		}
		
     	return $vendor_data;
	}
	
	function getpreferredvendors_list_pdf(){
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$vendortypes = $this->getvendortypes();
		
		if( $vendortypes->nonc == '0' && $vendortypes->compliant == '0' ) {
			if( $vendortypes->unverified == '1' )
				$where = " and W.subscribe_type = 'free' ";
			if( $vendortypes->verified == '1' )
				$where = " and W.subscribe_type != 'free' ";	
			if( $vendortypes->verified == '1' && $vendortypes->unverified == '1' )
				$where = "  ";	
		}	
		else{
			$where = "  ";	
		}
	    if($user->user_type =='16')
		{
		$mangerids = $this->getallmanageracounts();
		$loggeduser[] = $user->id;

	    if( $mangerids )
		  $final_mans = array_merge($loggeduser,$mangerids);
	    else
		   $final_mans = $loggeduser;
		$manager_ids = implode(',',$final_mans);
		$whers_cond = 'U.userid IN ('.$manager_ids.')';
		}
		else
		$whers_cond = 'U.userid='.$user->id.'';
		
   $query_preferred = "SELECT DISTINCT(U.v_id), V.company_name, V.company_phone, W.id, W.subscribe_type, W.subscribe from #__vendor_inviteinfo as U, #__cam_vendor_company as V, #__users as W where LOWER(U.inhousevendors) = (W.email) and W.block=0 and V.user_id=W.id and ".$whers_cond." and W.block=0 and W.search='' ".$where." order by V.company_name ASC "; 
	$db->setQuery($query_preferred);
	$preferred = $db->loadObjectList();
	
		for( $v=0; $v<count($preferred); $v++ ){
			$vendor_industries = $this->getvendorindustries($preferred[$v]->id);//get all vendor industries		
			for( $in=0; $in<count($vendor_industries); $in++ ){
				$master = $this->getmasterfirmaccount();
				$checkglobal	=	$this->checkglobalstandards($vendor_industries[$in]->industry_id,$master);
				if( $checkglobal == 'success' )	{
				$totalprefers_new_w9=$this->checknewspecialrequirements_w9_indus($preferred[$v]->id,$vendor_industries[$in]->industry_id,$master);
				$totalprefers_new_gli=$this->checknewspecialrequirements_gli_indus($preferred[$v]->id,$vendor_industries[$in]->industry_id,$master);
				$totalprefers_new_aip=$this->checknewspecialrequirements_aip_indus($preferred[$v]->id,$vendor_industries[$in]->industry_id,$master);
				$totalprefers_new_wci=$this->checknewspecialrequirements_wci_indus($preferred[$v]->id,$vendor_industries[$in]->industry_id,$master);
				$totalprefers_new_umb=$this->checknewspecialrequirements_umb_indus($preferred[$v]->id,$vendor_industries[$in]->industry_id,$master);
				$totalprefers_new_pln=$this->checknewspecialrequirements_pln_indus($preferred[$v]->id,$vendor_industries[$in]->industry_id,$master);
				$totalprefers_new_occ=$this->checknewspecialrequirements_occ_indus($preferred[$v]->id,$vendor_industries[$in]->industry_id,$master);
				$totalprefers_new_omi=$this->checknewspecialrequirements_omi_indus($preferred[$v]->id,$vendor_industries[$in]->industry_id,$master);
				
					if($totalprefers_new_w9 == 'success' && $totalprefers_new_gli == 'success' && $totalprefers_new_aip == 'success' && $totalprefers_new_wci == 'success' && $totalprefers_new_umb == 'success' && $totalprefers_new_pln == 'success' && $totalprefers_new_occ == 'success'  && $totalprefers_new_omi == 'success' )
					{
						$c_status = '<span style="color:green;">Compliant</span>';
						$terms_exist = $this->gettermsandconditions($master);//get vendor terms and conditions
						if($terms_exist == '1'){				
						$db =& JFactory::getDBO();
						$sql = "SELECT accepted FROM #__cam_vendor_terms WHERE masterid=".$master." and vendorid=".$preferred[$v]->id." ";
						$db->setQuery($sql);
						$terms = $db->loadResult();
						if($terms == '1'){
						$c_status = '<span style="color:green;">Compliant</span>';
						$cstatus = 'complianct';
						}
						else{
						$c_status = '<span style="color:red;">Non-Compliant</span>';
						$cstatus = 'noncomplianct';
						}
					}
					else{
						$c_status = '<span style="color:green;">Compliant</span>';
						$cstatus = 'complianct';
					}
					
					}
					else
					{
						$c_status = '<span style="color:red;">Non-Compliant</span>';
						$cstatus = 'noncomplianct';
					}
					//echo $cstatus.':';
					if( ( $preferred[$v]->subscribe == 'yes' && $preferred[$v]->subscribe_type == 'free' ) || $preferred[$v]->subscribe == 'no' || $preferred[$v]->subscribe == '') 
					$account_type = '<span style="color:red;">Unverified</span>';
					else if( $preferred[$v]->subscribe == 'yes' && $preferred[$v]->subscribe_type != 'free' )
					$account_type = '<span style="color:green;">Verified</span>';
					
					$vendor_documents = $this->getexpired_documents_pdf($preferred[$v]->id);
					$docs_permission = $this->getpermission_cdocs();
					//echo "<pre>"; print_r($docs_permission);
					if( $vendortypes->compliant == '1' && $vendortypes->nonc == '1' ){
					$vendor_data[$vendor_industries[$in]->industry_name][] = $c_status.'MYVC'.$account_type .'MYVC' . $preferred[$v]->company_name .'MYVC'.$vendor_documents.'MYVC' . $preferred[$v]->company_phone ;	
					}
					else 
					{
					if( $vendortypes->nonc == '1' ){
						if( $cstatus == 'noncomplianct' )
						$vendor_data[$vendor_industries[$in]->industry_name][] = $c_status.'MYVC'.$account_type .'MYVC' . $preferred[$v]->company_name.'MYVC'.$vendor_documents.'MYVC'. $preferred[$v]->company_phone ;	
					}
					else if( $vendortypes->compliant == '1' ){
						if( $cstatus == 'complianct' )
						$vendor_data[$vendor_industries[$in]->industry_name][] = $c_status.'MYVC'.$account_type .'MYVC' . $preferred[$v]->company_name.'MYVC'.$vendor_documents.'MYVC' . $preferred[$v]->company_phone ;	
						}
					else if( $vendortypes->nonc == '0' && $vendortypes->compliant == '0' ){
						$vendor_data[$vendor_industries[$in]->industry_name][] = $c_status.'MYVC'.$account_type .'MYVC' . $preferred[$v]->company_name.'MYVC'.$vendor_documents.'MYVC' . $preferred[$v]->company_phone ;	
					
					}
					}
					
				}
			}
		}
		
		
		//$table_end = '</table>';
//		$cdata = '<tr><td></td><td></td><td></td></tr>';
		$nodata_count = '0';
		foreach($vendor_data as $key=>$value){
			$only_content .= '<table style="width:100%;" width="100%" border="0" cellspacing="0" cellpadding="0">';
			$only_content .= '<tr></tr><br /><tr height="20"><td colspan="12" style="text-align:center;"><strong style="font-size:35px; font-family:sans-serif; text-align:center;">'.$key.'</strong></td></tr><tr><td colspan="12" height="5"></td></tr>';
			$only_content .= '<tr><td width="170" align="left"><strong style="font-size:25px; font-family:sans-serif; text-align:left;">Company</strong></td>';
			
			if( $docs_permission->phone_number == '1' )
			$only_content .= '<td width="75"><strong style="font-size:25px; font-family:sans-serif; text-align:center;">Phone</strong></td>';
			if( $docs_permission->gli == '1' || $docs_permission->how_docs == 'all')
			$only_content .= '<td width="55"><strong style="font-size:25px; font-family:sans-serif; text-align:center;">GL</strong></td>';
			if( $docs_permission->api == '1' || $docs_permission->how_docs == 'all')
			$only_content .= '<td width="55"><strong style="font-size:25px; font-family:sans-serif; text-align:center;">Auto</strong></td>';
			if( $docs_permission->wc == '1' || $docs_permission->how_docs == 'all')
			$only_content .= '<td width="55"><strong style="font-size:25px; font-family:sans-serif; text-align:center;">WC</strong></td>';
			if( $docs_permission->umb == '1' || $docs_permission->how_docs == 'all')
			$only_content .= '<td width="55"><strong style="font-size:25px; font-family:sans-serif; text-align:center;">Umbrella</strong></td>';
			if( $docs_permission->omi == '1' || $docs_permission->how_docs == 'all')
			$only_content .= '<td width="55"><strong style="font-size:25px; font-family:sans-serif; text-align:center;">E & O</strong></td>';
			if( $docs_permission->pln == '1' || $docs_permission->how_docs == 'all')
			$only_content .= '<td width="55"><strong style="font-size:25px; font-family:sans-serif; text-align:center;">Prof. Lic</strong></td>';
			if( $docs_permission->oln == '1' || $docs_permission->how_docs == 'all')
			$only_content .= '<td width="55"><strong style="font-size:25px; font-family:sans-serif; text-align:center;">Occ Lic</strong></td>';

			$only_content .= '<td width="75"><strong style="font-size:25px; font-family:sans-serif; text-align:center;">Comp Status</strong></td>';
			$only_content .= '<td width="55"><strong style="font-size:25px; font-family:sans-serif; text-align:center;">Acc Type</strong></td>';
			$only_content .= '</tr>';
			$count = count($value) ;
			for($last=0; $last<count($value); $last++){
				$exp = explode('MYVC',$value[$last]);
				//print_r($exp);exit;
				if($value[$last]){
				$only_content .= '<tr style="border-top:2px solid green;"><td width="170"><span style="font-size:23px; text-align:left;">'.$exp[2].'</span></td>';
				if( $docs_permission->phone_number == '1' )
				$only_content .= '<td width="75"><span style="font-size:23px; text-align:center;">'.$exp[11].'</span></td>';
				if( $docs_permission->gli == '1' || $docs_permission->how_docs == 'all')
				$only_content .= '<td width="55"><span style="font-size:23px; text-align:center;">'.$exp[3].'</span></td>';
				if( $docs_permission->api == '1' || $docs_permission->how_docs == 'all')
				$only_content .= '<td width="55"><span style="font-size:23px; text-align:center;">'.$exp[4].'</span></td>';
				if( $docs_permission->wc == '1' || $docs_permission->how_docs == 'all')
				$only_content .= '<td width="55"><span style="font-size:23px; text-align:center;">'.$exp[5].'</span></td>';
				if( $docs_permission->umb == '1' || $docs_permission->how_docs == 'all')
				$only_content .= '<td width="55"><span style="font-size:23px; text-align:center;">'.$exp[6].'</span></td>';
				if( $docs_permission->omi == '1' || $docs_permission->how_docs == 'all')
				$only_content .= '<td width="55"><span style="font-size:23px; text-align:center;">'.$exp[7].'</span></td>';
				if( $docs_permission->pln == '1' || $docs_permission->how_docs == 'all')
				$only_content .= '<td width="55"><span style="font-size:23px; text-align:center;">'.$exp[9].'</span></td>';
				if( $docs_permission->oln == '1' || $docs_permission->how_docs == 'all')
				$only_content .= '<td width="55"><span style="font-size:23px; text-align:center;">'.$exp[8].'</span></td>';
				$only_content .= '<td width="75"><span style="font-size:23px; text-align:center;">'.$exp[0].'</span></td>';
				$only_content .= '<td width="55"><span style="font-size:23px; text-align:center;">'.$exp[1].'</span></td>';
				$only_content .= '</tr>';
				if( $last+1 == $count ){
				$only_content .= '<tr><td colspan="12"><img src="/var/www/vhosts/myvendorcenter.com/httpdocs/templates/camassistant_left/images/top_border.jpg" /></td></tr>';
				}
				$nodata_count = $nodata_count - 1 ;
				}
				else{
					$nodata_count = $nodata_count + 1 ;
				}
				
			}
		}
		$only_content .= '</table>';
		//$comp_stand = $table_start.$only_content.$table_end ;
	//	echo $comp_stand; exit;
		
		return $only_content;
	}
	
	//Function to count of the document
	function countenableddocs(){
		$docs_permission = $this->getpermission_cdocs();
		$total = '0';
		if( $docs_permission->how_docs == 'all' )
			$total = '8';
		else {
			if( $docs_permission->gli == '1' )	
			$total = $total + 1 ;
			if( $docs_permission->api == '1' )	
			$total = $total + 1 ;
			if( $docs_permission->wc == '1' )	
			$total = $total + 1 ;
			if( $docs_permission->umb == '1' )	
			$total = $total + 1 ;
			if( $docs_permission->omi == '1' )	
			$total = $total + 1 ;
			if( $docs_permission->pln == '1' )	
			$total = $total + 1 ;
			if( $docs_permission->oln == '1' )	
			$total = $total + 1 ;
			if( $docs_permission->phone_number == '1' )	
			$total = $total + 1 ;
		}
		return $total;
	}
	//Function to get vendor types what master selected
	function getvendortypes(){
		$db = JFactory::getDBO();
		$master = $this->getmasterfirmaccount();
		$sql_vendortypes = "SELECT unverified, verified, nonc, compliant FROM #__cam_master_compliancereport WHERE masterid=".$master." ";
		$db->setQuery( $sql_vendortypes );
		$vendortypes = $db->loadObject();
		return $vendortypes;
	}
	//Function to get vendor industries
	function getvendorindustries($vendorid){
		$db = JFactory::getDBO();
		$v_inds = "SELECT U.industry_id, V.industry_name FROM `jos_cam_vendor_industries` as U, jos_cam_industries as V where U.industry_id=V.id and U.user_id=".$vendorid." order by V.industry_name ASC " ;
		$db->Setquery($v_inds);
		$vendor_industries = $db->loadObjectList();
		return $vendor_industries;
	}
	
	function checkglobalstandards($industryid,$master)	{
			$db =& JFactory::getDBO();
			$query_gli = "SELECT id,industry_id FROM `jos_cam_master_generalinsurance_standards` where masterid=".$master." and industry_id= ".$industryid." " ;
			$db->Setquery($query_gli);
			$data_gli = $db->loadObjectList();
			
			$query_aip = "SELECT id,industryid FROM `jos_cam_master_autoinsurance_standards` where masterid=".$master." and industryid= ".$industryid." " ;
			$db->Setquery($query_aip);
			$data_aip = $db->loadObjectList();
			$query_umb = "SELECT id,industryid FROM `jos_cam_master_umbrellainsurance_standards` where masterid=".$master." and industryid= ".$industryid." " ;
			$db->Setquery($query_umb);
			$data_umb = $db->loadObjectList();
			$query_wci = "SELECT id,industryid FROM `jos_cam_master_workers_standards` where masterid=".$master." and industryid= ".$industryid." " ;
			$db->Setquery($query_wci);
			$data_wci = $db->loadObjectList();
			$query_lic = "SELECT id,industryid FROM `jos_cam_master_licinsurance_standards` where masterid=".$master." and industryid= ".$industryid." " ;
			$db->Setquery($query_lic);
			$data_lic = $db->loadObjectList();
				if( $data_gli || $data_aip || $data_umb || $data_wci || $data_lic )	{
					$existance =  "success";
				}
				else{
				$existance =  "fail";
				}
			return $existance ;	
	}
	
	function checkglobalstandards_master($master)	{
			$db =& JFactory::getDBO();
			$query_w9 = "SELECT id,industry_id FROM `jos_cam_master_w9_standards` where masterid=".$master." " ;
			$db->Setquery($query_w9);
			$data_w9 = $db->loadObjectList();
			
			$query_gli = "SELECT id,industry_id FROM `jos_cam_master_generalinsurance_standards` where masterid=".$master." " ;
			$db->Setquery($query_gli);
			$data_gli = $db->loadObjectList();
			$query_aip = "SELECT id,industryid FROM `jos_cam_master_autoinsurance_standards` where masterid=".$master." " ;
			$db->Setquery($query_aip);
			$data_aip = $db->loadObjectList();
			$query_umb = "SELECT id,industryid FROM `jos_cam_master_umbrellainsurance_standards` where masterid=".$master." " ;
			$db->Setquery($query_umb);
			$data_umb = $db->loadObjectList();
			$query_wci = "SELECT id,industryid FROM `jos_cam_master_workers_standards` where masterid=".$master." " ;
			$db->Setquery($query_wci);
			$data_wci = $db->loadObjectList();
			$query_lic = "SELECT id,industryid FROM `jos_cam_master_licinsurance_standards` where masterid=".$master." " ;
			$db->Setquery($query_lic);
			$data_lic = $db->loadObjectList();
			$query_omi = "SELECT id,industryid FROM `jos_cam_master_errors_omissions` where masterid=".$master." " ;
			$db->Setquery($query_omi);
			$data_omi = $db->loadObjectList();
			
				if( $data_w9 || $data_gli || $data_aip || $data_umb || $data_wci || $data_lic || $data_omi )	{
					$existance =  "success";
				}
				else{
				$existance =  "fail";
				}
			return $existance ;	
	}
	
	//Function to get master terms and conditions
	function gettermsandconditions($masterid){
		$db =& JFactory::getDBO();
		$sql_terms = "SELECT termsconditions FROM #__cam_vendor_aboutus WHERE vendorid=".$masterid." "; 
		$db->setQuery($sql_terms);
		$terms_exist = $db->loadResult();
		return $terms_exist;
	}
	//Function to send the mail venor when master changes his terms and conditions
	function sendmailtovendor(){
		$db =& JFactory::getDBO();
		$user = JFactory::getUser();
		$sql_terms = "SELECT vendorid FROM #__cam_vendor_terms WHERE masterid=".$user->id." "; 
		$db->setQuery($sql_terms);
		$vendors_accepted = $db->loadObjectList();
			for( $v=0; $v<count($vendors_accepted); $v++ ){
				$sendmail = $this->mailtovendor($vendors_accepted[$v]->vendorid);
			}
		return $sendmail;
	}
	//Function mail sendin
	function mailtovendor($vendorid){
		$db =& JFactory::getDBO();
		$user = JFactory::getUser();
		$masterinfo = $this->getmasterinfo();
		$vendorsinfo = $this->getvendorsinfo($vendorid);
		$mailbody = $this->getmailbodys();
		$todaydate = date('m-d-Y \a\t h:i A');
        
		$body = str_replace('[Vendor Company Name]',$vendorsinfo->company_name,$mailbody);
		$body = str_replace('[date and time]',$todaydate,$body);
		$body = str_replace('[Master Account Company Name]',$masterinfo,$body);
		$from = 'support@myvendorcenter.com' ;
		$from_name = 'MyVendorCenter Team';
		$to = $vendorsinfo->email;
		$sub = 'Please accept new Terms & Conditions for '.$masterinfo ;
		
		$successMail =JUtility::sendMail($from, $from_name, $to, $sub, $body,$mode = 1);
		$to_support = 'vendoremails@myvendorcenter.com';
		$successMail =JUtility::sendMail($from, $from_name, $to_support, $sub, $body,$mode = 1);
		
		$vendorccmail = $vendorsinfo->ccemail;
		$cclist = explode(';',$vendorccmail);
			for($c=0; $c<=count($cclist); $c++)
				{
					$listcc = $cclist[$c];
						if($listcc){
							$successMail =JUtility::sendMail($from, $from_name, $listcc, $sub, $body,$mode = 1);
						}
				}
	}
	//Function to get masterinfo
	function getmasterinfo(){
		$db =& JFactory::getDBO();
		$user = JFactory::getUser();
		$sql_terms = "SELECT comp_name FROM #__cam_customer_companyinfo WHERE cust_id=".$user->id." "; 
		$db->setQuery($sql_terms);
		$mastercname = $db->loadResult();
		return $mastercname;
	}
	//Function to get vendor info
	function getvendorsinfo($vendorid){
		$db =& JFactory::getDBO();
		$user = JFactory::getUser();
		$sql_terms = "SELECT U.company_name, V.email, V.ccemail FROM #__cam_vendor_company as U, #__users as V WHERE U.user_id=".$vendorid." and U.user_id = V.id "; 
		$db->setQuery($sql_terms);
		$vendordata = $db->loadObject();
		return $vendordata;
	}	
	//Function to get the mail body
	function getmailbodys(){
		$db =& JFactory::getDBO();
		$user = JFactory::getUser();
		$sql_artilce = "SELECT introtext FROM #__content WHERE id=306 "; 
		$db->setQuery($sql_artilce);
		$bodymail = $db->loadResult();
		return $bodymail;
		
	}
	function getexpired_documents_pdf($vendorid){
		$gli_expdate = $this->gliexpdate_pdf($vendorid);
		$aip_expdate = $this->aipexpdate_pdf($vendorid);
		$wci_expdate = $this->wciexpdate_pdf($vendorid);
		$umb_expdate = $this->umbexpdate_pdf($vendorid);
		$omi_expdate = $this->omiexpdate_pdf($vendorid);
		$oln_expdate = $this->olnexpdate_pdf($vendorid);
		$pln_expdate = $this->plnexpdate_pdf($vendorid);
		$wc_expdate = $this->wcexpdate_pdf($vendorid);
		$expired_dates = $gli_expdate.'MYVC'.$aip_expdate.'MYVC'.$wci_expdate.'MYVC'.$umb_expdate.'MYVC'.$omi_expdate.'MYVC'.$oln_expdate.'MYVC'.$pln_expdate.'MYVC'.$wc_expdate ;
		//echo $expired_dates; exit;
		return $expired_dates;
		
	}
	function gliexpdate_pdf($vendorid){
		$db =& JFactory::getDBO();
		$today = date('Y-m-d');
		$user = JFactory::getUser();
		$sql = "SELECT GLI_end_date FROM #__cam_vendor_liability_insurence  where vendor_id=".$vendorid." order by id ASC";
		$db->Setquery($sql);
		$GLI_date = $db->loadResult();
		
		$GLI_change = explode('-',$GLI_date);
		$final_GLI = $GLI_change[1].'/'.$GLI_change[2].'/'.$GLI_change[0];
		
		if( !$GLI_date || $GLI_date == '0000-00-00' )
			$GLI_final = 'None';
		else if( $GLI_date < $today )	
			$GLI_final = '<span style="color:red;">'.$final_GLI.'</span>';
		else
			$GLI_final = $final_GLI ;
		return $GLI_final;
	}
	function aipexpdate_pdf($vendorid){
		$db =& JFactory::getDBO();
		$today = date('Y-m-d');
		$user = JFactory::getUser();
		$sql = "SELECT aip_end_date FROM #__cam_vendor_auto_insurance where vendor_id=".$vendorid." order by id ASC";
		$db->Setquery($sql);
		$AIP_date = $db->loadResult();
		
		$AIP_change = explode('-',$AIP_date);
		$final_AIP = $AIP_change[1].'/'.$AIP_change[2].'/'.$AIP_change[0];
		
		if( !$AIP_date || $AIP_date == '0000-00-00' )
			$AIP_final = 'None';
		else if( $AIP_date < $today )	
			$AIP_final = '<span style="color:red;">'.$final_AIP.'</span>';
		else
			$AIP_final = $final_AIP ;
		return $AIP_final;
	}
	function wciexpdate_pdf($vendorid){
		$db =& JFactory::getDBO();
		$today = date('Y-m-d');
		$user = JFactory::getUser();
		$sql = "SELECT WCI_end_date FROM #__cam_vendor_workers_companies_insurance where vendor_id=".$vendorid." order by id ASC";
		$db->Setquery($sql);
		$WCI_date = $db->loadResult();
		
		$WCI_change = explode('-',$WCI_date);
		$final_WCI = $WCI_change[1].'/'.$WCI_change[2].'/'.$WCI_change[0];
		
		if( !$WCI_date || $WCI_date == '0000-00-00' )
			$WCI_final = 'None';
		else if( $WCI_date < $today )	
			$WCI_final = '<span style="color:red;">'.$final_WCI.'</span>';
		else
			$WCI_final = $final_WCI ;
		return $WCI_final;
	}
	function umbexpdate_pdf($vendorid){
		$db =& JFactory::getDBO();
		$today = date('Y-m-d');
		$user = JFactory::getUser();
		$sql = "SELECT UMB_expdate FROM #__cam_vendor_umbrella_license where vendor_id=".$vendorid." order by id ASC";
		$db->Setquery($sql);
		$UMB_date = $db->loadResult();
		
		$UMB_change = explode('-',$UMB_date);
		$final_UMB = $UMB_change[1].'/'.$UMB_change[2].'/'.$UMB_change[0];
		
		if( !$UMB_date || $UMB_date == '0000-00-00' )
			$UMB_final = 'None';
		else if( $UMB_date < $today )	
			$UMB_final = '<span style="color:red;">'.$final_UMB.'</span>';
		else
			$UMB_final = $final_UMB ;
		return $UMB_final;
	}
	function omiexpdate_pdf($vendorid){
		$db =& JFactory::getDBO();
		$today = date('Y-m-d');
		$user = JFactory::getUser();
		$sql = "SELECT OMI_end_date FROM #__cam_vendor_errors_omissions_insurance where vendor_id=".$vendorid." order by id ASC";
		$db->Setquery($sql);
		$OMI_date = $db->loadResult();
		
		$OMI_change = explode('-',$OMI_date);
		$final_OMI = $OMI_change[1].'/'.$OMI_change[2].'/'.$OMI_change[0];
		
		if( !$OMI_date || $OMI_date == '0000-00-00' )
			$OMI_final = 'None';
		else if( $OMI_date < $today )	
			$OMI_final = '<span style="color:red;">'.$final_OMI.'</span>';
		else
			$OMI_final = $final_OMI ;
		return $OMI_final;
	}
	function olnexpdate_pdf($vendorid){
		$db =& JFactory::getDBO();
		$today = date('Y-m-d');
		$user = JFactory::getUser();
		$sql = "SELECT OLN_expdate FROM #__cam_vendor_occupational_license where vendor_id=".$vendorid." order by id ASC";
		$db->Setquery($sql);
		$OLN_date = $db->loadResult();
		
		$OLN_change = explode('-',$OLN_date);
		$final_OLN = $OLN_change[1].'/'.$OLN_change[2].'/'.$OLN_change[0];
		
		if( !$OLN_date || $OLN_date == '0000-00-00' )
			$OLN_final = 'None';
		else if( $OLN_date < $today )	
			$OLN_final = '<span style="color:red;">'.$final_OLN.'</span>';
		else
			$OLN_final = $final_OLN ;
		return $OLN_final;
	}
	function plnexpdate_pdf($vendorid){
		$db =& JFactory::getDBO();
		$today = date('Y-m-d');
		$user = JFactory::getUser();
		$sql = "SELECT PLN_expdate FROM #__cam_vendor_professional_license where vendor_id=".$vendorid." order by id ASC";
		$db->Setquery($sql);
		$PLN_date = $db->loadResult();
		
		$PLN_change = explode('-',$PLN_date);
		$final_PLN = $PLN_change[1].'/'.$PLN_change[2].'/'.$PLN_change[0];
		
		if( !$PLN_date || $PLN_date == '0000-00-00' )
			$PLN_final = 'None';
		else if( $PLN_date < $today )	
			$PLN_final = '<span style="color:red;">'.$final_PLN.'</span>';
		else
			$PLN_final = $final_PLN ;
		return $PLN_final;
	}
	function wcexpdate_pdf($vendorid){
		$db =& JFactory::getDBO();
		$today = date('Y-m-d');
		$user = JFactory::getUser();
		$sql = "SELECT wc_end_date FROM #__cam_vendor_workers_compansation where vendor_id=".$vendorid." order by id ASC";
		$db->Setquery($sql);
		$WC_date = $db->loadResult();
		
		$WC_change = explode('-',$WC_date);
		$final_WC = $WC_change[1].'/'.$WC_change[2].'/'.$WC_change[0];
		
		if( !$WC_date || $WC_date == '0000-00-00' )
			$WC_final = 'None';
		else if( $WC_date < $today )	
			$WC_final = '<span style="color:red;">'.$final_WC.'</span>';
		else
			$WC_final = $final_WC ;
		return $WC_final;
	}
	
	
	function getexpired_documents($vendorid){
		$gli_expdate = $this->gliexpdate($vendorid);
		$aip_expdate = $this->aipexpdate($vendorid);
		$wci_expdate = $this->wciexpdate($vendorid);
		$umb_expdate = $this->umbexpdate($vendorid);
		$omi_expdate = $this->omiexpdate($vendorid);
		$oln_expdate = $this->olnexpdate($vendorid);
		$pln_expdate = $this->plnexpdate($vendorid);
		$wc_expdate = $this->wcexpdate($vendorid);
		$expired_dates = $gli_expdate.'MYVC'.$aip_expdate.'MYVC'.$wci_expdate.'MYVC'.$umb_expdate.'MYVC'.$omi_expdate.'MYVC'.$oln_expdate.'MYVC'.$pln_expdate.'MYVC'.$wc_expdate ;
		//echo $expired_dates; exit;
		return $expired_dates;
		
	}
	function gliexpdate($vendorid){
		$db =& JFactory::getDBO();
		$today = date('Y-m-d');
		$user = JFactory::getUser();
		$sql = "SELECT GLI_end_date FROM #__cam_vendor_liability_insurence  where vendor_id=".$vendorid." order by id ASC";
		$db->Setquery($sql);
		$GLI_date = $db->loadResult();
		$GLI_change = explode('-',$GLI_date);
		$final_GLI = $GLI_change[1].'/'.$GLI_change[2].'/'.$GLI_change[0];
		if( !$GLI_date || $GLI_date == '0000-00-00' )
			$GLI_final = 'None';
		else if( $GLI_date < $today )	{
			$GLI_final = $final_GLI;
			$gli_color = 'red';
		}	
		else
			$GLI_final = $final_GLI ;
			$GLI_final = str_replace('//','',$GLI_final);
		  return $GLI_final.$gli_color;
	}
	function aipexpdate($vendorid){
		$db =& JFactory::getDBO();
		$today = date('Y-m-d');
		$user = JFactory::getUser();
		$sql = "SELECT aip_end_date FROM #__cam_vendor_auto_insurance where vendor_id=".$vendorid." order by id ASC";
		$db->Setquery($sql);
		$AIP_date = $db->loadResult();
		
		$AIP_change = explode('-',$AIP_date);
		$final_AIP = $AIP_change[1].'/'.$AIP_change[2].'/'.$AIP_change[0];
		
		if( !$AIP_date || $AIP_date == '0000-00-00' )
			$AIP_final = 'None';
		else if( $AIP_date < $today )	{
			$AIP_final = $final_AIP;
			$aip_color = 'red';
			}
		else
			$AIP_final = $final_AIP ;
			$AIP_final = str_replace('//','',$AIP_final);
		return $AIP_final.$aip_color ;
	}
	function wciexpdate($vendorid){
		$db =& JFactory::getDBO();
		$today = date('Y-m-d');
		$user = JFactory::getUser();
		$sql = "SELECT WCI_end_date FROM #__cam_vendor_workers_companies_insurance where vendor_id=".$vendorid." order by id ASC";
		$db->Setquery($sql);
		$WCI_date = $db->loadResult();
		
		$WCI_change = explode('-',$WCI_date);
		$final_WCI = $WCI_change[1].'/'.$WCI_change[2].'/'.$WCI_change[0];
		
		if( !$WCI_date || $WCI_date == '0000-00-00' )
			$WCI_final = 'None';
		else if( $WCI_date < $today ) {	
			$WCI_final = $final_WCI;
			$wci_color = 'red';
			
			}
		else
			$WCI_final = $final_WCI ;
		 $WCI_final = str_replace('//','',$WCI_final);
		
		return $WCI_final.$wci_color;
	}
	function umbexpdate($vendorid){
		$db =& JFactory::getDBO();
		$today = date('Y-m-d');
		$user = JFactory::getUser();
		$sql = "SELECT UMB_expdate FROM #__cam_vendor_umbrella_license where vendor_id=".$vendorid." order by id ASC";
		$db->Setquery($sql);
		$UMB_date = $db->loadResult();
		
		$UMB_change = explode('-',$UMB_date);
		$final_UMB = $UMB_change[1].'/'.$UMB_change[2].'/'.$UMB_change[0];
		
		if( !$UMB_date || $UMB_date == '0000-00-00' )
			$UMB_final = 'None';
		else if( $UMB_date < $today ) {	
			$UMB_final = $final_UMB;
			$umb_color = 'red';
			}
		else
			$UMB_final = $final_UMB ;
			$UMB_final = str_replace('//','',$UMB_final);
		return $UMB_final.$umb_color;
	}
	function omiexpdate($vendorid){
		$db =& JFactory::getDBO();
		$today = date('Y-m-d');
		$user = JFactory::getUser();
		$sql = "SELECT OMI_end_date FROM #__cam_vendor_errors_omissions_insurance where vendor_id=".$vendorid." order by id ASC";
		$db->Setquery($sql);
		$OMI_date = $db->loadResult();
		
		$OMI_change = explode('-',$OMI_date);
		$final_OMI = $OMI_change[1].'/'.$OMI_change[2].'/'.$OMI_change[0];
		
		if( !$OMI_date || $OMI_date == '0000-00-00' )
			$OMI_final = 'None';
		else if( $OMI_date < $today ) {	
			$OMI_final = $final_OMI;
			$omi_color = 'red';
			}
		else
		  $OMI_final = $final_OMI ;
		 $OMI_final = str_replace('//','',$OMI_final);
		return $OMI_final.$omi_color;
	}
	function olnexpdate($vendorid){
		$db =& JFactory::getDBO();
		$today = date('Y-m-d');
		$user = JFactory::getUser();
		$sql = "SELECT OLN_expdate FROM #__cam_vendor_occupational_license where vendor_id=".$vendorid." order by id ASC";
		$db->Setquery($sql);
		$OLN_date = $db->loadResult();
		
		$OLN_change = explode('-',$OLN_date);
		$final_OLN = $OLN_change[1].'/'.$OLN_change[2].'/'.$OLN_change[0];
		
		if( !$OLN_date || $OLN_date == '0000-00-00' )
			$OLN_final = 'None';
		else if( $OLN_date < $today ) {	
			$OLN_final = $final_OLN;
			$oln_color = 'red';
			}
		else
			$OLN_final = $final_OLN ;
			$OLN_final = str_replace('//','',$OLN_final);
		return $OLN_final.$oln_color;
	}
	function plnexpdate($vendorid){
		$db =& JFactory::getDBO();
		$today = date('Y-m-d');
		$user = JFactory::getUser();
		$sql = "SELECT PLN_expdate FROM #__cam_vendor_professional_license where vendor_id=".$vendorid." order by id ASC";
		$db->Setquery($sql);
		$PLN_date = $db->loadResult();
		
		$PLN_change = explode('-',$PLN_date);
		$final_PLN = $PLN_change[1].'/'.$PLN_change[2].'/'.$PLN_change[0];
		
		if( !$PLN_date || $PLN_date == '0000-00-00' )
			$PLN_final = 'None';
		else if( $PLN_date < $today )	{
			$PLN_final = $final_PLN;
			$pln_color = 'red';
			}
		else
			$PLN_final = $final_PLN ;
			$PLN_final = str_replace('//','',$PLN_final);
		return $PLN_final.$pln_color;
	}
	function wcexpdate($vendorid){
		$db =& JFactory::getDBO();
		$today = date('Y-m-d');
		$user = JFactory::getUser();
		$sql = "SELECT wc_end_date FROM #__cam_vendor_workers_compansation where vendor_id=".$vendorid." order by id ASC";
		$db->Setquery($sql);
		$WC_date = $db->loadResult();
		
		$WC_change = explode('-',$WC_date);
		$final_WC = $WC_change[1].'/'.$WC_change[2].'/'.$WC_change[0];
		
		if( !$WC_date || $WC_date == '0000-00-00' )
			$WC_final = 'None';
		else if( $WC_date < $today ){
			$WC_final = $final_WC;
			$wc_color = 'red';
			}
		else
		$WC_final = $final_WC ;
		$WC_final = str_replace('//','',$WC_final);
		return $WC_final.$wc_color;
	}
	function getpermission_cdocs(){
		$masteraccount = $this->getmasterfirmaccount();
		$db =& JFactory::getDBO();
		$sql = "SELECT * FROM #__cam_master_compliancereport where masterid=".$masteraccount." ";
		$db->Setquery($sql);
		$docpermission = $db->loadObject();
		return $docpermission;
	}
	function getawardedmessage($rfpno,$proposalid){
		$user =& JFactory::getUser();
		$db = JFactory::getDBO();
		$updatedemail = $this->getexistingid($rfpno);
		$awardedto = JRequest::getVar('awardedto','');
		if( $updatedemail->email_text )
			$mailbody = $updatedemail->email_text ;
		else{
			if( $awardedto == 'in' ){
				$query_rejectedemail ="SELECT introtext  FROM #__content where id='156' ";
				$db->setQuery( $query_rejectedemail );
				$mailcontent = $db->loadResult();
				$vendorinfo = $this->getvendorname($proposalid);
				$propertyname = $this->getpropertyname($rfpno);
				$pname = $propertyname->property_name ;
				$price_bid = "$". number_format($vendorinfo->proposal_total_price,2);
				$mailbody = str_replace('{Vendor Name}',$vendorinfo->company_name,$mailcontent);
				$mailbody = str_replace('{winning Bid}',$price_bid,$mailbody);
				$mailbody = str_replace('{RFP NUMBER}',$rfpno,$mailbody);
				$mailbody = str_replace('{Customer}',$user->name.' '.$user->lastname,$mailbody);
				$mailbody = str_replace('{Property Name}',str_replace('_',' ',$pname),$mailbody);
			}
			else{
				$query_rejectedemail ="SELECT introtext FROM #__content where id='281' ";
				$db->setQuery( $query_rejectedemail );
				$mailcontent = $db->loadResult();
				$outvendorname = $this->getoutsidevendorname($proposalid,$rfpno);
				$outside_amount = "$".number_format($outvendorname->amount,2);
				
				$propertyname = $this->getpropertyname($rfpno);
				$companyname_manager = $this->getmanagercompanyname();
				$projectname = $propertyname->projectName ;
				$mailbody = str_replace('[Vendor Company Name]',$outvendorname->companyname,$mailcontent);
				$mailbody = str_replace('[Project Name]',$projectname,$mailbody);
				$mailbody = str_replace('[Manager Full Name]',$user->name.' '.$user->lastname,$mailbody);
				$mailbody = str_replace('[Manager full name]',$user->name.' '.$user->lastname,$mailbody);
				$mailbody = str_replace('[Manager Company Name]',$companyname_manager,$mailbody);
				$mailbody = str_replace('[Proposal Amount entered by Manager]',$outside_amount,$mailbody);
			}
		}
		return $mailbody;
	}
	//Function to get manager company name
	function getmanagercompanyname(){
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$query_firm ="SELECT comp_name from #__cam_customer_companyinfo where cust_id=".$user->id."  ";
		$db->setQuery( $query_firm );
		$customecname = $db->loadResult();
		return $customecname;
	}
	function getoutsidevendorname($proposalid,$rfpid){
		$db = JFactory::getDBO();
		$query_outsidev ="SELECT companyname, amount from #__cam_external_vendors where rfpid=".$rfpid." and id=".$proposalid." ";
		$db->setQuery( $query_outsidev );
		$vendor_outside = $db->loadObject();
		return $vendor_outside;
	}
	
	function getvendorname($proposalid){
		$db = JFactory::getDBO();
		$query_vendorname ="SELECT U.company_name, V.proposal_total_price from #__cam_vendor_company as U, #__cam_vendor_proposals as V where V.id=".$proposalid." and V.proposedvendorid = U.user_id ";
		$db->setQuery( $query_vendorname );
		$vendor_info = $db->loadObject();
		return $vendor_info;
	}
	function getpropertyname($rfpno){
		$db = JFactory::getDBO();
		$query_pname ="SELECT U.property_name, V.projectName from #__cam_property as U, #__cam_rfpinfo as V where V.id=".$rfpno." and V.property_id = U.id ";
		$db->setQuery( $query_pname );
		$prop_name = $db->loadObject();
		return $prop_name;
	}
	function store_mailtext($post){
		$row = & $this->getTable('emailmessage');
		if (!$row->bind($post)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
		
	}
	//Function to get pre id
	function getexistingid($rfpid){
		$db = JFactory::getDBO();
		$query_rfpmail ="SELECT id, email_text from #__cam_awarded_emailtext where rfpid=".$rfpid." ";
		$db->setQuery( $query_rfpmail );
		$mailid = $db->loadObject();
		return $mailid;
	}
	
	function checknewspecialrequirements_occ($vendorid,$rfpid){

		$db = & JFactory::getDBO();
		$occ_data ="SELECT * from #__cam_vendor_occupational_license  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($occ_data);
		$vendor_occ_data = $db->loadObjectList();
		//Get RFP data
		$rfp_occ_data ="SELECT * from #__cam_master_licinsurance_standards_rfps WHERE rfpid=".$rfpid; //validation to status of docs
		$db->Setquery($rfp_occ_data);
		$rfp_occ_data = $db->loadObject();
		
			for( $occ=0; $occ<count($vendor_occ_data); $occ++ ){
			
				if($rfp_occ_data->occupational == 'yes'){
					if($vendor_occ_data[$occ]->OLN_expdate < date('Y-m-d') || !$vendor_occ_data[$occ]->OLN_upld_cert || $vendor_occ_data[$pln]->OLN_status == '-1') {
						$occur_occ[] = 'no' ;
					}
					else{
						$occur_occ[] = 'yes' ;
					}
				}
				if( $occur_occ ){
					if( in_array("no", $occur_occ) ){
						$cabins_occ[] = "no";
					}
					else{
						$cabins_occ[] = "yes";
					}
				}	
			}	
			
			if($cabins_occ){
				if( in_array("yes", $cabins_occ) ){
					$special_occ = "success";
				}
				else{
					$special_occ = "fail";
				}
				$cabins_occ = '';
			}
			
			else{
					if($rfp_occ_data->occupational)
					$special_occ = "fail";
					else
					$special_occ = "success";
			}
			
				$cabins_occ = '';
				return $special_occ ;
	}
	//Function to get selected vendor information to the last step of award job
	function gendorinvendorinfo($proposalid,$rfpid){
		$db = JFactory::getDBO();
		$awarded_vendor = "SELECT u.proposedvendorid, u.proposal_total_price, u.id, u.Alt_bid, u.rfpno , v.company_name,v.city,v.company_phone,v.phone_ext,v.fax_id,v.tax_id,v.state from #__cam_vendor_proposals as u, #__cam_vendor_company as v where u.rfpno=".$rfpid." and u.id=".$proposalid." and u.proposedvendorid=v.user_id ";
		
		//$awarded_vendor ="SELECT proposedvendorid from #__cam_vendor_proposals where id=".$proposalid." ";
		$db->setQuery( $awarded_vendor );
		$vendorinfo = $db->loadObjectList();
		$vendorid = $vendorinfo[0]->proposedvendorid;
		$totalprefers_new_w9	=	$this->checknewspecialrequirements_w9($vendorid,$rfpid);
		$totalprefers_new_gli	=	$this->checknewspecialrequirements_gli($vendorid,$rfpid);
		$totalprefers_new_aip	=	$this->checknewspecialrequirements_aip($vendorid,$rfpid);
		$totalprefers_new_wci	=	$this->checknewspecialrequirements_wci($vendorid,$rfpid);
		$totalprefers_new_umb	=	$this->checknewspecialrequirements_umb($vendorid,$rfpid);
		$totalprefers_new_pln	=	$this->checknewspecialrequirements_pln($vendorid,$rfpid);
		$totalprefers_new_occ	=	$this->checknewspecialrequirements_occ($vendorid,$rfpid);
		$totalprefers_new_omi	=	$this->checknewspecialrequirements_omi($vendorid,$rfpid);
	
		if($totalprefers_new_w9 == 'success' && $totalprefers_new_gli == 'success' && $totalprefers_new_aip == 'success' && $totalprefers_new_wci == 'success' && $totalprefers_new_umb == 'success' && $totalprefers_new_pln == 'success' && $totalprefers_new_occ == 'success'  && $totalprefers_new_omi == 'success'){
			$vendorinfo[0]->special_requirements = 'success' ;
			$masteraccount = $this->getmasterfirmaccount();
			$sql_terms = "SELECT termsconditions FROM #__cam_vendor_aboutus WHERE vendorid=".$masteraccount." "; 
			$db->setQuery($sql_terms);
			$terms_exist = $db->loadResult();
			if($terms_exist == '1'){
			$sql = "SELECT accepted FROM #__cam_vendor_terms WHERE vendorid=".$vendorid." and masterid=".$masteraccount." "; 
			$db->setQuery($sql);
			$terms = $db->loadResult();
				if($terms == '1'){
				$vendorinfo[0]->special_requirements = 'success' ;
				}
				else{
				$vendorinfo[0]->special_requirements = 'fail' ;
				}
			}
			else{
			
			}
		}
		else{
			$vendorinfo[0]->special_requirements = 'fail' ;
		}
		
		$sql_udata = "SELECT name, lastname, email, subscribe_type FROM #__users WHERE id=".$vendorid." "; 
		$db->setQuery($sql_udata);
		$usedata = $db->loadObject();
		$vendorinfo[0]->name = $usedata->name ;
		$vendorinfo[0]->lastname = $usedata->lastname ;
		$vendorinfo[0]->email = $usedata->email ;
		$vendorinfo[0]->subscribe_type = $usedata->subscribe_type ;
		//Get vendor rating
		$vendorinfo[0]->rating = $this->getvendorrating($vendorid);
		$statecode  = "SELECT code from #__cam_vendor_states where id=".$vendorinfo[0]->state." " ; 
		$db->setQuery($statecode);
		$vendorinfo[0]->statename = $db->loadResult(); 
		//Get JOB type
		$jobtype = 
		$vendorinfo[0]->jobtype = $this->getjobtype($rfpid);
		//echo "<pre>"; print_r($vendorinfo); 
		return $vendorinfo;
	}
	//Function to get JOB type
	function getjobtype($rfpid){
		$db = & JFactory::getDBO();
		$jobtype  = "SELECT jobtype from #__cam_rfpinfo where id=".$rfpid." " ; 
		$db->setQuery($jobtype);
		$job_type  = $db->loadResult();
		if( $job_type == 'yes' )
			$job = 'basic';
		else
			$job = '';	
		return $job;
	}
	//Function to get vendor rating
	function getvendorrating($vendorid){
		$db = & JFactory::getDBO();
$ratecount = "SELECT V.apple FROM `#__cam_vendor_proposals` as U, `#__cam_rfpinfo` as V where U.proposedvendorid=".$vendorid." and V.apple!=0 and V.apple_publish=0 and U.proposaltype='Awarded' and U.rfpno = V.id ";
	$db->setQuery($ratecount);
	$count_vs=$db->loadObjectList();
	//To get the CAMA rAting
		$camratingf = "SELECT camrating FROM `#__users` where id=".$vendorid."  ";
		$db->setQuery($camratingf);
		$cam_ratingf = $db->loadResult();
		
		if($count_vs){
		for($c=0; $c<count($count_vs); $c++){
		$total = $total + $count_vs[$c]->apple ;
		}
		$camrating = "SELECT camrating FROM `#__users` where id=".$vendorid."  ";
		$db->setQuery($camrating);
		$cam_rating = $db->loadResult();
		
		if($cam_rating) {
		$total = $total + $cam_rating ;
		$count = count($count_vs) + 1;
		$avgrating = $total  / $count;	
		$rating =  round($avgrating, 1); 
		}
		else {
		$avgrating = $total  / count($count_vs);	
		$rating =  round($avgrating, 1); 
		}
	}
	else if($cam_ratingf){
	$rating = round($cam_ratingf, 1); 
	}
	else{
	$rating = 4 ;
	}
	
			if ($rating > 0 && $rating <= 0.50)
			{ $rate_image = $rateimage.'5.png';  $rating='0.5'; }
			elseif ($rating > 0.50 && $rating <= 1.00)
			{ $rate_image = $rateimage.'10.png'; $rating='1'; }
			elseif ($rating > 1.00 && $rating <= 1.50)
			{ $rate_image = $rateimage.'10.png'; $rating='1.5';}
			elseif ($rating > 1.50 && $rating <= 2.00)
			{ $rate_image = $rateimage.'20.png'; $rating='2';}
			elseif ($rating > 2.00 && $rating <= 2.50)
			{ $rate_image = $rateimage.'20.png'; $rating='2.5';}
			elseif ($rating > 2.50 && $rating <= 3.00)
			{ $rate_image = $rateimage.'30.png'; $rating='3';}
			elseif ($rating > 3.00 && $rating <= 3.50)
			{ $rate_image = $rateimage.'30.png'; $rating='3.5';}
			elseif ($rating > 3.50 && $rating <= 4.00)
			{ $rate_image = $rateimage.'40.png'; $rating='4';}
			elseif ($rating > 4.00 && $rating <= 4.50)
			{ $rate_image = $rateimage.'40.png'; $rating='4.5';}
			elseif ($rating > 4.50 && $rating <= 5.00)
			{ $rate_image = $rateimage.'50.png'; $rating='5';}
			else
			{ $rate_image = $rateimage.'40.png'; $rating='4';} 
	return $rate_image;
	}
	//Function to get selected vendor information to the last step of award job
	function gendoroutvendorinfo($proposalid,$rfpid){
		$db = & JFactory::getDBO();
		$outside_vendor_data  = "SELECT * from #__cam_external_vendors where id=".$proposalid." and rfpid=".$rfpid." " ; 
		$db->setQuery($outside_vendor_data);
		$vendorinfo_out  = $db->loadObject();
		return $vendorinfo_out;
	}
	function getmasterglobals(){
	$db=&JFactory::getDBO();
	$user =& JFactory::getUser();
	$master =	$this->getmasterfirmaccount();
		
	$query = "SELECT * FROM #__cam_master_w9_standards WHERE masterid=".$master." ";
	$db->setQuery($query);
	$data_w9 = $db->loadObjectList();
	
	$query = "SELECT * FROM #__cam_master_generalinsurance_standards WHERE masterid=".$master." ";
	$db->setQuery($query);
	$data_pre = $db->loadObjectList();
	
	$query = "SELECT * FROM #__cam_master_autoinsurance_standards WHERE masterid=".$master."";
	$db->setQuery($query);
	$data_auto = $db->loadObjectList();
	
	$query = "SELECT * FROM #__cam_master_workers_standards WHERE masterid=".$master."";
	$db->setQuery($query);
	$data_work = $db->loadObjectList();

	$query = "SELECT * FROM #__cam_master_umbrellainsurance_standards WHERE masterid=".$master." ";
	$db->setQuery($query);
	$data_umbrella = $db->loadObjectList();

	$query = "SELECT * FROM #__cam_master_licinsurance_standards WHERE masterid=".$master." ";
	$db->setQuery($query);
	$data_lic = $db->loadObjectList();
	
	$query = "SELECT * FROM #__cam_master_errors_omissions WHERE masterid=".$master." ";
	$db->setQuery($query);
	$data_omi = $db->loadObjectList();
	
		if( $data_w9 || $data_pre || $data_auto || $data_work || $data_umbrella || $data_lic || $data_omi ){
			$message = 'success';
		}
		else{
			$message = 'fail';
		}	

	return $message ;
	}
	
	function getallstandardsrfp(){
		$db = & JFactory::getDBO();
		$user =& JFactory::getUser();
		$rfp_id = JRequest::getVar('rfpno','');
		
		$rfp_w9_data ="SELECT * from #__cam_master_w9_standards_rfps  WHERE rfpid=".$rfp_id; //validation to status of docs
		$db->Setquery($rfp_w9_data);
		$rfp_w9_data = $db->loadObject();
		
		$rfp_gli_data ="SELECT * from #__cam_master_generalinsurance_standards_rfps  WHERE rfpid=".$rfp_id; //validation to status of docs
		$db->Setquery($rfp_gli_data);
		$rfp_gli_data = $db->loadObject();
		
		$rfp_aip_data ="SELECT * from #__cam_master_autoinsurance_standards_rfps  WHERE rfpid=".$rfp_id; //validation to status of docs
		$db->Setquery($rfp_aip_data);
		$rfp_aip_data = $db->loadObject();
		
		$rfp_wci_data ="SELECT * from #__cam_master_workers_standards_rfps WHERE rfpid=".$rfp_id; //validation to status of docs
		$db->Setquery($rfp_wci_data);
		$rfp_wci_data = $db->loadObject();
		
		$rfp_umb_data ="SELECT * from #__cam_master_umbrellainsurance_standards_rfps WHERE rfpid=".$rfp_id; //validation to status of docs
		$db->Setquery($rfp_umb_data);
		$rfp_umb_data = $db->loadObject();
		
		$rfp_pln_data ="SELECT * from #__cam_master_licinsurance_standards_rfps WHERE rfpid=".$rfp_id; //validation to status of docs
		$db->Setquery($rfp_pln_data);
		$rfp_pln_data = $db->loadObject();
		
		$rfp_omi_data = "SELECT * FROM #__cam_master_errors_omissions_rfps WHERE rfpid = ".$rfp_id." ";
		$db->setQuery($rfp_omi_data);
		$rfp_omi_data = $db->loadObject();

		if(!$rfp_w9_data && !$rfp_gli_data && !$rfp_aip_data && !$rfp_wci_data && !$rfp_umb_data && !$rfp_pln_data && !$rfp_omi_data ){
			$set = 'no';
		}
		else{
			$set = 'yes';
		}
		return $set ;	
	}
	//Function to get revised message
	function getrevisedmessage($rfpid){
		$db = & JFactory::getDBO();
		$rfp_omi_data = "SELECT email_text FROM #__cam_awarded_emailtext WHERE rfpid = ".$rfpid." ";
		$db->setQuery($rfp_omi_data);
		$revisedmail = $db->loadResult();
		return $revisedmail;
	}

	function getallrecommendations(){
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$query = "SELECT * FROM #__cam_manager_recommends where managerid =".$user->id." and display='0' "; 
		$db->setQuery($query);
		$alldata = $db->loadObjectList();
			for( $a=0; $a<count($alldata); $a++ ){
				$query = "SELECT name, lastname FROM #__users where id =".$alldata[$a]->sender." "; 
				$db->setQuery($query);
				$sendername = $db->loadObject();
				$alldata[$a]->sendername = $sendername->name.'&nbsp;'.$sendername->lastname ;
				
				$query_v = "SELECT company_name FROM #__cam_vendor_company where user_id =".$alldata[$a]->vendorid." "; 
				$db->setQuery($query_v);
				$vendor_name = $db->loadResult();
				$alldata[$a]->vendorname = $vendor_name ;
			}
		return $alldata ;
	}
		function getproperty_invitations()
		{
				$db = & JFactory::getDBO();
				$user = JFactory::getUser();
				 $property_name = "SELECT P.id,U.id as invitationid,U.boardmem_id,P.property_name,U.user_id,U.propertyinvitation,U.propertyowner_id FROM #__cam_property as P, #__cam_propertyowner_link as U WHERE U.propertyowner_id='".$user->id."' AND U.property_id=P.id AND U.link_value !=1 AND U.link_value !=2 AND U.propertydecline !=1" ;
				$db->setQuery($property_name);
				$property_name = $db->loadObjectList();
				for( $p=0; $p<count($property_name); $p++ )
				 {
					$property_name[$p]->invitationtype ='inv'; 
				 }
			return $property_name;
		}
	
	

		function getinvitevendorper($pid)
		{
			$db = & JFactory::getDBO();
			$user = JFactory::getUser();
			$permissions = "SELECT invite_p FROM #__cam_propertyowner_link WHERE propertyowner_id = '".$user->id."' AND property_id='".$pid."'";
			$db->setQuery($permissions);
			$permissions = $db->loadResult();
			return $permissions;
		}
	
		function getallmanageracounts()
		{
			$db =& JFactory::getDBO();
			$user=JFactory::getUser();
			$query  = "SELECT DISTINCT(user_id) FROM #__cam_propertyowner_link where propertyowner_id='".$user->id."' and vendors_p='1'" ;
			$db->setQuery($query);
			$manager_id = $db->loadObjectList();
			foreach($manager_id as $id )
			 {
				$managers[] = $id->user_id;
			 }	
		return $managers;
		}
	
		function checkproposalexist($rfpid,$vendorid)
		{
			$db=&JFactory::getDBO();
			$check_invite = "SELECT id FROM #__cam_vendor_availablejobs where rfp_id = ".$rfpid." and user_id=".$vendorid." " ;
			$db->SetQuery($check_invite);
			$existid = $db->loadResult();
			if( $existid )
				$val = 'yes';
			else
				$val = 'no';	
			return $val ;	
		}
	
	
		function getrequstper($rfpid)
		{
			$db=&JFactory::getDBO();
			$per = "select cust_id,rfpapproval,jobtype FROM #__cam_rfpinfo WHERE id = '".$rfpid."'";
			$db->setQuery($per);
			$per = $db->loadobject();
			return $per; 
		}
	
		function getawardper($rfpid)
		{
			$db=&JFactory::getDBO();
			$per = "select cust_id,awardjobaproval,jobtype FROM #__cam_rfpinfo WHERE id = '".$rfpid."'";
			$db->setQuery($per);
			$per = $db->loadobject();
			return $per;
		}
		
	  function allotheremails()
	  {
	        $db=&JFactory::getDBO();
			$user=&JFactory::getUser();
			$emails = "select id,email FROM #__cam_master_compliancereport_emails WHERE user_id = '".$user->id."'";
			$db->setQuery($emails);
			$emails = $db->loadobjectList();
			return $emails;
	  }
	
}
?>
