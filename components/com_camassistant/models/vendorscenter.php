<?php
/**
 * @version		1.0.0 cam assistant $
 * @package		cam_assistant
 * @copyright	Copyright Â© 2010 - All rights reserved.
 * @license		GNU/GPL
 * @author		
 * @author mail	nobody@nobody.com
 *
 *
 * @MVC architecture generated by MVC generator tool at http://www.alphaplug.com
 */

// no direct access
defined('_JEXEC') or die('Restricted access');

jimport( 'joomla.application.component.model' );

class vendorscenterModelvendorscenter extends Jmodel
{

	/**
	 * helloworld data
	 *
	 * @var array
	 */
	var $_data = null;
	/**
	 * Category total
	 *
	 * @var integer
	 */
	var $_total = null;

	/**
	 * Pagination object
	 *
	 * @var object
	 */
	var $_pagination = null;

  /**
	 * table_prefix - table prefix for all component table
	 * 
	 * @var string
	 */
	var $_table_prefix = null;
	
	/**
	 * Constructor
	 *
	 * @since 1.5
	 */
	function __construct()
	{
		parent::__construct();

		global $mainframe, $context;

		//initialize class property
	  $this->_table_prefix = '#__cam_';	
	  
		//DEVNOTE: Get the pagination request variables
		//$limit			= $mainframe->getUserStateFromRequest( $context.'limit', 'limit', $mainframe->getCfg('list_limit'), 0);
		//$limitstart = $mainframe->getUserStateFromRequest( $context.'limitstart', 'limitstart', 0 );
		$limit		= JRequest::getWord('limit');
		$limitstart		= JRequest::getWord('limitstart');
        if($limit == '' && $limitstart == '')
		{
		 $limit = 5;
		 $limitstart = 0;
		}
		else
		{
		 $limit = $limit;
		 $limitstart = $limitstart;
		}
		//echo $limit;
		$this->setState('limit', $limit);
		$this->setState('limitstart', $limitstart);

	}
	
	
	/**
	 * Method to get a helloworld data
	 *
	 * this method is called from the owner VIEW by VIEW->get('Data');
	 * - get list of all helloworld for the current data page.
	 * - pagination is spec. by variables limitstart,limit.
	 * - ordering of list is build in _buildContentOrderBy  	 	 	  	 
	 * @since 1.5
	 */
	function getData()
	{
		//DEVNOTE: Lets load the content if it doesn't already exist
		if (empty($this->_data))
		{
			 $query = $this->_buildQuery();
			$this->_data = $this->_getList($query, $this->getState('limitstart'), $this->getState('limit'));
		}


		return $this->_data;
}

	/**
	 * Method to get the total number of helloworld items
	 *
	 * @access public
	 * @return integer
	 */
	function getTotal()
	{
		//DEVNOTE: Lets load the content if it doesn't already exist
		if (empty($this->_total))
		{
			$query = $this->_buildQuery();
			$this->_total = $this->_getListCount($query);
		}

		return $this->_total;
	}
	
	/**
	 * Method to get a pagination object for the helloworld
	 *
	 * @access public
	 * @return integer
	 */
	function getPagination()
	{
		// Lets load the content if it doesn't already exist
		if (empty($this->_pagination))
		{
			jimport('joomla.html.pagination');
			$this->_pagination = new JPagination( $this->getTotal(), $this->getState('limitstart'), $this->getState('limit') );
		}

		return $this->_pagination;
	}
// function to get the individual vendors	
	function getinhouse()
	{
 		$managertype = JRequest::getVar( 'managertype','');
 		$industrytype = JRequest::getVar( 'industrytype','');
 		$state = JRequest::getVar( 'state','');	
 		$county = JRequest::getVar( 'divcounty','');
		$compliance_filter = JRequest::getVar( 'compliance','');
		$verification = JRequest::getVar( 'verification','');
			
		if(!$state){
		$county = '';
		}		
		else{
		$county = $county;
		}		
 		//echo '<pre>'; print_r($_REQUEST); 
		$post = JRequest::get('request');
		$db = & JFactory::getDBO();
		$user =& JFactory::getUser();
		$usercreator = $user->id;
		
		if($user->user_type == '16')
		{
		
		$mangerids = $this->getallmanageracounts();
		if($mangerids)
		{
		$manager_ids = implode(',',$mangerids);
		$whers_cond = 'U.userid IN ('.$manager_ids.')';
		}
		}
		else
		$whers_cond = 'U.userid='.$usercreator.'';
		
$query = "SELECT V.company_name,V.city,V.state,V.company_phone,V.phone_ext,V.fax_id,V.tax_id,U.vendortype,U.vid,U.v_id,U.status,U.inhousevendors,U.userid,W.name, W.lastname, W.id, W.subscribe, W.ccemail, W.subscribe_type from #__vendor_inviteinfo as U, #__cam_vendor_company as V, #__users as W where LOWER(U.inhousevendors) = (W.email) and V.user_id=W.id and W.block='0' AND U.exclude!='yes' and U.search!='yes'and W.search='' and ".$whers_cond."";
		//echo $query; exit;
		$db->setQuery($query);
		$result = $db->loadObjectList();
    // echo '<pre>';print_r($result);
			//To get the vendors based on industry
			if($industrytype){
			$checkvendors = "SELECT distinct(user_id) FROM #__cam_vendor_industries where industry_id=".$industrytype." ";
			$db->setQuery($checkvendors);
			$accpetvendor = $db->loadObjectList();
			 
			if($result){
				foreach($result as $vid){
				$existing[] = $vid->v_id;
				}
			}	
			if($accpetvendor){
				foreach($accpetvendor as $inids){
				$indusids[] = $inids->user_id;
				}
			}
			if($indusids != '' && $existing!= ''){
			$common = array_intersect($indusids, $existing) ;
			}
			if($common){
			$indus_condition = implode(',',$common) ;
			}
			
			if($indus_condition)
			$query = $query . "AND V.user_id IN ("  . $indus_condition . ")" ;
			else
			$query = $query . "AND V.user_id IN ('  ')" ;
			}	
			
			if($county){
			$checkvendors1 = "SELECT distinct(user_id) FROM #__vendor_state_counties where county_id=".$county." ";
			$db->setQuery($checkvendors1);
			$accpetvendor1 = $db->loadObjectList();
			
			if($result){
				foreach($result as $vid){
				$existing[] = $vid->v_id;
				}
			}	
			if($accpetvendor1){
				foreach($accpetvendor1 as $county){
				$countys[] = $county->user_id;
				}
			}
			if($countys != '' && $existing!= ''){
			$common = array_intersect($countys, $existing) ;
			}
			if($common){
			$county_condition = implode(',',$common) ;
			}
			if($county_condition)
			$query = $query . "AND V.user_id IN ("  . $county_condition . ")" ;
			else
			$query = $query . "AND V.user_id IN ('')" ;
			}	
			
			//If selecting state and not selecting ny county
			if($state && !$county){
			 $checkvendorsstate = "SELECT distinct(user_id) FROM #__vendor_state_counties where state_id='".$state."' ";
			$db->setQuery($checkvendorsstate);
			$statevendors = $db->loadObjectList();
			if($result){
				foreach($result as $vid){
				$existing[] = $vid->v_id;
				}
			}	
			if($statevendors){
				foreach($statevendors as $county){
				$countys[] = $county->user_id;
				}
			}
			if($countys != '' && $existing!= ''){
			$common = array_intersect($countys, $existing) ;
			}
			if($common){
			$county_condition = implode(',',$common) ;
			}
			if($county_condition)
			$query = $query . "AND V.user_id IN ("  . $county_condition . ")" ;
			else
			$query = $query . "AND V.user_id IN (' ')" ;
			}
			//Completed
			if( $verification == 'ver' )
			$query = $query . " AND W.subscribe_type != 'free' " ;
			if( $verification == 'unver' )
			$query = $query . " AND W.subscribe_type = 'free' " ;
		//echo $query;
		
		$sort = JRequest::getVar('sort','');
		$type = JRequest::getVar('type','');
		
		if( $sort == 'asc' && $type == 'preferred' ){
			$sorting = ' GROUP BY U.v_id order by V.company_name ASC ';
		}
		else if( $sort == 'desc' && $type == 'preferred' ){
			$sorting = ' GROUP BY U.v_id order by V.company_name DESC ';
		}
		else{
			$sorting = " GROUP BY U.v_id order by V.company_name ASC  ";
		}
		
		
		$query = $query . ' '.$sorting.'  ' ;
		//echo $query;
		$db->setQuery($query);
		$result = $db->loadObjectList();
		//echo '<pre>';print_r($result);exit;
		for( $p=0; $p<count($result); $p++ ){
			//if($result[$p]->id == '1767'){
			$c_status =	$this->checkcompliancestatus($result[$p]->id);
			
			//}
			
			$result[$p]->cstatus = $c_status ;
		}
		
	//echo $result[$p]->cstatus;exit;
		for( $s=0; $s<count($result); $s++ ){
		$only_state = $result[$s]->cstatus ;
		
		//echo '<pre>'; print_r($only_state); echo "</pre>";
					if($only_state){
						foreach($only_state as $statues){
							$final_state[] = $statues->status;
							$med_fina_state = '';
							$med_fina_state = array_unique($final_state);
						
								if( count($med_fina_state) == 2 ) {
									$result[$s]->final_status = 'medium' ;
								}
								if( count($med_fina_state) == 1 &&  $med_fina_state[0] == 'fail') {
									$result[$s]->final_status = 'fail' ;
								}
								else if( count($med_fina_state) == 1 &&  $med_fina_state[0] == 'success' ){
									$result[$s]->final_status = 'success' ;
								}
								$masteraccount = $this->getmasterfirmaccount($user->id);
								$result[$s]->termsandc = $this->gettermsconditions($masteraccount,$result[$s]->id);								
						} 
						$final_state = '';
						$med_fina_state = '';
					}
		// Adding block unverified vendor rule
		$user =& JFactory::getUser();
		$masterid = $this->getmasterfirmaccount($user->id);
		 $block_per = "SELECT block, block_complinace FROM #__cam_master_block_users where masterid ='".$masterid."' ";
		$db->setQuery($block_per);
		$block = $db->loadObject();
		if( $block->block == '1' )
			$result[$s]->unverified = 'hide' ;
		else	
			$result[$s]->unverified = 'show' ;
		
		if( $block->block_complinace == '1' )
			$result[$s]->block_nonc = 'hide' ;
		else	
			$result[$s]->block_nonc = 'show' ;
		//Completed
		
		
		}
		//echo "<pre>"; print_r($result); exit;
		for( $p=0; $p<count($result); $p++ ){
		$per_vendor = "SELECT id FROM #__cam_vendor_purchasedcodes where masterid ='".$user->id."' and vendorid ='".$result[$p]->id."' and publish=1";
		$db->setQuery($per_vendor);
		$per_vendor = $db->loadResult();
		if($per_vendor)
		$result[$p]->per_vendor = 'show';
		else
		$result[$p]->per_vendor = 'hide';
		}
		for( $pr=0; $pr<count($result); $pr++ ){
		 $star_vendor = "SELECT vid FROM #__vendor_inviteinfo where userid ='".$user->id."' and v_id ='".$result[$pr]->id."' AND invitation_type='pre'";
		$db->setQuery($star_vendor);
		$star_vendor = $db->loadResult();
		if($star_vendor)
		$result[$pr]->star_vendor = 'show';
		else
		$result[$pr]->star_vendor = 'hide';
		}
		for( $m=0; $m<count($result); $m++ ){
		$my_vendor = "SELECT vid FROM #__vendor_inviteinfo where userid ='".$user->id."' and v_id ='".$result[$m]->id."' AND  myvendors='yes'";
		$db->setQuery($my_vendor);
		$my_vendor = $db->loadResult();
		if($my_vendor)
		$result[$m]->my_vendor = 'show';
		else
		$result[$m]->my_vendor = 'hide';
		}
		
		// Adding dispaly only verified vendors
		$user =& JFactory::getUser();
		$masterid = $this->getmasterfirmaccount($user->id);
		$act_type = "SELECT acount_type FROM #__cam_master_compliancereport where masterid ='".$masterid."' ";
		$db->setQuery($act_type);
		$act_type = $db->loadResult();
		
		
		for( $v=0; $v<count($result); $v++ ){
		$subscribe_type = "SELECT subscribe_type FROM #__users where id ='".$result[$v]->id."'";
		$db->setQuery($subscribe_type);
		$subscribe_type = $db->loadResult();
		if( $act_type == '1' && ( $subscribe_type == 'free' || $subscribe_type == '' ) )
			$result[$v]->acount_type = 'show' ;
		else	
			$result[$v]->acount_type = 'hide' ;
		}
		
		
		//Completed
		//echo '<pre>';print_r($result);exit;
		return $result;
	}
	
	function gettermsconditions($masteraccount, $vendorid){
	           
			$db=&JFactory::getDBO();
			$user =& JFactory::getUser();
			if($user->user_type == '16')
				{
				$mangerids = $this->getallmanageracounts();
				if($mangerids)
				{
				$manager_ids = implode(',',$mangerids);
				$whers_cond = ' vendorid IN ('.$manager_ids.')';
				}
				}
				else
				$whers_cond = 'vendorid='.$masteraccount.'';
			 $sql_terms = "SELECT termsconditions FROM #__cam_vendor_aboutus WHERE ".$whers_cond." "; 
			$db->setQuery($sql_terms);
			$terms_exist = $db->loadResult();
			
			if($terms_exist == '1'){
				 $sql = "SELECT accepted FROM #__cam_vendor_terms WHERE vendorid=".$vendorid." and masterid=".$masteraccount." "; 
				$db->setQuery($sql);
				$terms = $db->loadResult();
		       
				if($terms == '1'){
					$conditions = 'success' ;
				}
				else{
					$conditions = 'fail' ;
				}
			}
			else{
				$conditions = 'success' ;
			}
			return $conditions;
	}
	function checkcompliancestatus($vendorid){
	
	  	$db=&JFactory::getDBO();
		$user =& JFactory::getUser();
		$master =	$this->getmasterfirmaccount($user->id);
		$vendorindustrieslist = $this->vendorallindustries($vendorid);
	   
			for( $vi=0; $vi<count($vendorindustrieslist); $vi++ )
				{
					$totalprefers_new_w9	=	$this->checknewspecialrequirements_w9($vendorid,$vendorindustrieslist[$vi]->value,$master);
					$totalprefers_new_gli	=	$this->checknewspecialrequirements_gli($vendorid,$vendorindustrieslist[$vi]->value,$master);
					$totalprefers_new_aip	=	$this->checknewspecialrequirements_aip($vendorid,$vendorindustrieslist[$vi]->value,$master);
					$totalprefers_new_wci	=	$this->checknewspecialrequirements_wci($vendorid,$vendorindustrieslist[$vi]->value,$master);
					$totalprefers_new_umb	=	$this->checknewspecialrequirements_umb($vendorid,$vendorindustrieslist[$vi]->value,$master);
					$totalprefers_new_pln	=	$this->checknewspecialrequirements_pln($vendorid,$vendorindustrieslist[$vi]->value,$master);
					$totalprefers_new_occ	=	$this->checknewspecialrequirements_occ($vendorid,$vendorindustrieslist[$vi]->value,$master);
					$totalprefers_new_omi	=	$this->checknewspecialrequirements_omi($vendorid,$vendorindustrieslist[$vi]->value,$master);
					
					$vendorindustrieslist[$vi]->status = '' ;
					
				/*if( $vendorid == '1767' ){
					echo "GLI".$totalprefers_new_gli ;
					echo "AIP".$totalprefers_new_aip ;
					echo "WCI".$totalprefers_new_wci ;
					echo "UMB".$totalprefers_new_umb ;
					echo "PLN".$totalprefers_new_pln ;
					echo "OCC:".$totalprefers_new_occ;
					echo "OMI:".$totalprefers_new_omi;
					echo "<br />";
				}*/	
					if($totalprefers_new_w9 == 'success' && $totalprefers_new_gli == 'success' && $totalprefers_new_aip == 'success' && $totalprefers_new_wci == 'success' && $totalprefers_new_umb == 'success' && $totalprefers_new_pln == 'success' && $totalprefers_new_occ == 'success' && $totalprefers_new_omi == 'success' ){
							$vendorindustrieslist[$vi]->status = 'success' ;
						}
						else{
							$vendorindustrieslist[$vi]->status = 'fail' ;
						}
		
				}	
				//if( $vendorid == '1767' )
				//echo "<pre>"; print_r($vendorindustrieslist); echo "</pre>";	exit;	
		return  $vendorindustrieslist;
	}
	
	function vendorallindustries($vendorid){
	 	$db=&JFactory::getDBO();
		$user =& JFactory::getUser();
		$master =	$this->getmasterfirmaccount($user->id);
		$whers_cond = 'masterid='.$master.'';
		// To get industries by master
		$w9_indus ="SELECT industry_id from #__cam_master_w9_standards WHERE ".$whers_cond."";
		$db->Setquery($w9_indus);
		$w9 = $db->loadResultArray();
		
		$gli_indus ="SELECT industry_id from #__cam_master_generalinsurance_standards WHERE ".$whers_cond."";
		$db->Setquery($gli_indus);
		$gli = $db->loadResultArray();
		
		$aip_indus ="SELECT industryid from #__cam_master_autoinsurance_standards WHERE ".$whers_cond."";
		$db->Setquery($aip_indus);
		$aip = $db->loadResultArray();
		
		$wci_indus ="SELECT industryid from #__cam_master_workers_standards WHERE ".$whers_cond."";
		$db->Setquery($wci_indus);
		$wci = $db->loadResultArray();
		
		$umb_indus ="SELECT industryid from #__cam_master_umbrellainsurance_standards WHERE ".$whers_cond."";
		$db->Setquery($umb_indus);
		$umb = $db->loadResultArray();
		
		$lic_indus ="SELECT industryid from #__cam_master_licinsurance_standards WHERE ".$whers_cond."";
		$db->Setquery($lic_indus);
		$lic = $db->loadResultArray();
		
		$omi_indus ="SELECT industryid from #__cam_master_errors_omissions WHERE ".$whers_cond."";
		$db->Setquery($omi_indus);
		$omi = $db->loadResultArray();
		
		if( $w9 || $gli || $aip || $wci || $umb || $lic || $omi ){
		$finalarray = array_merge($w9, $gli, $aip, $wci, $umb, $lic, $omi);
		$existing_indus = implode(',',$finalarray);
		}
		else{
		$existing_indus = "''";
		}
		
		//Completed
		$query = "SELECT U.industry_id as value, V.industry_name FROM #__cam_vendor_industries as U, #__cam_industries as V where U.industry_id=V.id and U.user_id = ".$vendorid." and V.published=1 and U.industry_id IN(".$existing_indus.") ";
		$db->setQuery($query);
		$industryList = $db->loadObjectList();
		
		/*if($vendorid == '2115'){
		echo $query ;
		echo "<pre>"; print_r($industryList); echo "</pre>";
		}*/
		return $industryList;
	 }
	  function checknewspecialrequirements_w9($vendorid,$industryid,$managerid){
	  
		$totalprefers_new_w9 = '';
		$db = & JFactory::getDBO();
		$user = & JFactory::getUser();
		
		$w9_data ="SELECT * from #__cam_vendor_compliance_w9docs WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($w9_data);
		$vendor_w9_data = $db->loadObjectList();
		//Get RFP data
		$whers_cond = 'masterid='.$managerid.'';
		
		 $rfp_w9_data ="SELECT * from #__cam_master_w9_standards WHERE ".$whers_cond." and industry_id=".$industryid; 
		$db->Setquery( $rfp_w9_data );
		$rfp_w9_data = $db->loadObject();
		
		$occur_w9 = '';
			if($rfp_w9_data){
					if( !$vendor_w9_data[0]->w9_upld_cert || $vendor_w9_data[0]->w9_status == '-1') {
						$occur_w9[] = 'no' ;
					}
					else{
						$occur_w9[] = 'yes' ;
					}
				}
		
				
			if($occur_w9){
				if( in_array("no", $occur_w9) ){
				$cabins_w9[] = "no";
				}
				else{
				$cabins_w9[] = "yes";
				}
			}
				
		
			if($cabins_w9){
					if( in_array("yes", $cabins_w9) ){
					$special_w9 = "success";
					}
					else{
					$special_w9 = "fail";
					}
			
			}
			
			else{
					if($rfp_w9_data)
					$special_w9 = "fail";
					else
					$special_w9 = "success";
			}
			
				
			$cabins_w9 = '';
			//echo $special_w9;exit;
			return $special_w9 ;
			
	 }
	 function checknewspecialrequirements_gli($vendorid,$industryid,$managerid){
		$totalprefers_new_gli = '';
		$db = & JFactory::getDBO();
		$gli_data ="SELECT * from #__cam_vendor_liability_insurence  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($gli_data);
		$vendor_gli_data = $db->loadObjectList();
		//Get RFP data
		$whers_cond = 'masterid='.$managerid.'';
		$rfp_gli_data ="SELECT * from #__cam_master_generalinsurance_standards WHERE ".$whers_cond." and industry_id=".$industryid; //validation to status of docs
		$db->Setquery($rfp_gli_data);
		$rfp_gli_data = $db->loadObject();
		//echo "<br />";
		//echo "<pre>"; print_r($vendor_gli_data); echo "</pre>";
		//echo "<pre>"; print_r($rfp_gli_data); echo "</pre>";
		
		$occur = '';
		for( $gl=0; $gl<count($vendor_gli_data); $gl++ ){
			if($rfp_gli_data->occur ==  'yes'){
				if( $vendor_gli_data[$gl]->GLI_occur == 'occur' ){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			
			if($rfp_gli_data->each_occurrence >  '0'){
				if($rfp_gli_data->each_occurrence <= $vendor_gli_data[$gl]->GLI_policy_occurence){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->damage_retend > '0'){
				if($rfp_gli_data->damage_retend <= $vendor_gli_data[$gl]->GLI_damage){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->med_expenses > '0'){
				if($rfp_gli_data->med_expenses <= $vendor_gli_data[$gl]->GLI_med){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}	
			if($rfp_gli_data->personal_inj > '0'){
				if($rfp_gli_data->personal_inj <= $vendor_gli_data[$gl]->GLI_injury){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->general_aggr > '0'){	
				if($rfp_gli_data->general_aggr <= $vendor_gli_data[$gl]->GLI_policy_aggregate){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}

			if($rfp_gli_data->applies_to == 'pol'){
				if($vendor_gli_data[$gl]->GLI_applies == 'pol'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->applies_to == 'proj'){
				if($vendor_gli_data[$gl]->GLI_applies == 'proj'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->applies_to == 'loc'){
				if($vendor_gli_data[$gl]->GLI_applies == 'loc'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->products_aggr >  '0'){
				if($rfp_gli_data->products_aggr <= $vendor_gli_data[$gl]->GLI_products){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}	
			if($rfp_gli_data->waiver_sub == 'yes') {
				if($vendor_gli_data[$gl]->GLI_waiver == 'waiver'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->primary_noncontr == 'yes') {
				if($vendor_gli_data[$gl]->GLI_primary == 'primary'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->additional_insured == 'yes') {
				if($vendor_gli_data[$gl]->GLI_additional){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->cert_holder == 'yes') {
				if($vendor_gli_data[$gl]->GLI_certholder == 'yes'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
				if($rfp_gli_data){
					if($vendor_gli_data[$gl]->GLI_end_date < date('Y-m-d') || !$vendor_gli_data[$gl]->GLI_upld_cert || !$vendor_gli_data[$gl]->GLI_policy_occurence || !$vendor_gli_data[$gl]->GLI_policy_aggregate || $vendor_gli_data[$gl]->GLI_status == '-1') {
						$occur[] = 'no' ;
					}
					else{
						$occur[] = 'yes' ;
					}
				}
		
			if($occur){
				if( in_array("no", $occur) ){
				$cabins_gli[] = "no";
				}
				else{
				$cabins_gli[] = "yes";
				}
			}
			$occur = '';
		}
		
		if($cabins_gli){
			if( in_array("yes", $cabins_gli) ){
			$special = "success";
			}
			else{
			$special = "fail";
			}
			
		}
		else{
				if($rfp_gli_data)
				$special = "fail";
				else
				$special = "success";
		}
			
		$cabins_gli = '';
		
		return $special ;
		
	}
//Completed
function checknewspecialrequirements_aip($vendorid,$industryid,$managerid){
		$db = & JFactory::getDBO();
		$aip_data ="SELECT * from #__cam_vendor_auto_insurance  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($aip_data);
		$vendor_aip_data = $db->loadObjectList();
		//Get RFP data
		
		$whers_cond = 'masterid='.$managerid.'';
		$rfp_aip_data ="SELECT * from #__cam_master_autoinsurance_standards WHERE ".$whers_cond." and industryid=".$industryid; //validation to status of docs
		$db->Setquery($rfp_aip_data);
		$rfp_aip_data = $db->loadObject();
		
			for( $ai=0; $ai<count($vendor_aip_data); $ai++ ){
				if($rfp_aip_data->applies_to_any == 'any'){
					if($rfp_aip_data->applies_to_any == $vendor_aip_data[$ai]->aip_applies_any){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				
				}
				

				if($rfp_aip_data->applies_to_owned == 'owned'){
					if($rfp_aip_data->applies_to_owned == $vendor_aip_data[$ai]->aip_applies_owned){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				
				}
				
              
				if($rfp_aip_data->applies_to_nonowned == 'nonowned'){
					if($rfp_aip_data->applies_to_nonowned == $vendor_aip_data[$ai]->aip_applies_nonowned){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
 
				if($rfp_aip_data->applies_to_hired == 'hired'){
					if($rfp_aip_data->applies_to_hired == $vendor_aip_data[$ai]->aip_applies_hired){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				

				if($rfp_aip_data->applies_to_scheduled == 'scheduled'){
					if($vendor_aip_data[$ai]->aip_applies_scheduled == 'sch'){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				
				if($rfp_aip_data->combined_single > '0'){	
					if($rfp_aip_data->combined_single <= $vendor_aip_data[$ai]->aip_combined){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				
				if($rfp_aip_data->bodily_injusy_person > '0'){	
					if($rfp_aip_data->bodily_injusy_person <= $vendor_aip_data[$ai]->aip_bodily){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->bodily_injusy_accident > '0'){	
					if($rfp_aip_data->bodily_injusy_accident <= $vendor_aip_data[$ai]->aip_body_injury){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				
				if($rfp_aip_data->property_damage > '0'){	
					if($rfp_aip_data->property_damage <= $vendor_aip_data[$ai]->aip_property){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
			
				
				if($rfp_aip_data->waiver == 'yes'){
					if($vendor_aip_data[$ai]->aip_waiver == 'waiver'){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
					
				
				if($rfp_aip_data->primary == 'yes'){
					if($vendor_aip_data[$ai]->aip_primary == 'primary'){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->additional_ins == 'yes'){
					if($vendor_aip_data[$ai]->aip_addition == '' || $vendor_aip_data[$ai]->aip_addition == '0'){
						$occur_aip[] = 'no' ;
					}
					else{
						$occur_aip[] = 'yes' ;
					}
				}
				
				
				if($rfp_aip_data->cert_holder == 'yes'){
					if($vendor_aip_data[$ai]->aip_cert == 'yes'){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				
				if($rfp_aip_data){
					if($vendor_aip_data[$ai]->aip_end_date < date('Y-m-d') || $vendor_aip_data[$ai]->aip_upld_cert=='' || $vendor_aip_data[$ai]->aip_status == '-1' ) 		{
						$occur_aip[] = 'no' ;
						}
					else
						{
						$occur_aip[] = 'yes' ;
						}
				}
				
				if($occur_aip){
					if( in_array("no", $occur_aip) ){
						$cabins_aip[] = "no";
					}
					else{
						$cabins_aip[] = "yes";
					}
				}
				$occur_aip = '';
			}
			//echo '<pre>';print_r($cabins_aip);exit;	
			if($cabins_aip){
				if( in_array("yes", $cabins_aip) ){
					$special_aip = "success";
				}
				else{
					$special_aip = "fail";
				}
			}
			else{
				if($rfp_aip_data)
				$special_aip = "fail";
				else
				$special_aip = "success";
			}
			
				//echo $special_aip ;exit;
				$cabins_aip = '';
		 
		return $special_aip ;
		
		
	}
	
	//Function to check WCI documents
	function checknewspecialrequirements_wci($vendorid,$industryid,$managerid){
		
		$db = & JFactory::getDBO();
		$wci_data ="SELECT * from #__cam_vendor_workers_companies_insurance  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($wci_data);
		$vendor_wci_data = $db->loadObjectList();
		//Get RFP data
		
		$whers_cond = 'masterid='.$managerid.'';
		$rfp_wci_data ="SELECT * from #__cam_master_workers_standards WHERE ".$whers_cond." and industryid=".$industryid; //validation to status of docs
		$db->Setquery($rfp_wci_data);
		$rfp_wci_data = $db->loadObject();

			for( $wci=0; $wci<count($vendor_wci_data); $wci++ ){
				
				if($rfp_wci_data->disease_policy > '0'){	
					if($rfp_wci_data->disease_policy <= $vendor_wci_data[$wci]->WCI_disease_policy){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}	
					
				if($rfp_wci_data->disease_eachemp > '0'){
					if($rfp_wci_data->disease_eachemp <= $vendor_wci_data[$wci]->WCI_disease){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}
				
				if($rfp_wci_data->waiver_work == 'yes'){
					if($vendor_wci_data[$wci]->WCI_waiver == 'waiver'){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}
				
				if($rfp_wci_data->each_accident > '0'){
					if($rfp_wci_data->each_accident <= $vendor_wci_data[$wci]->WCI_each_accident){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}
				
				if($rfp_wci_data->certholder_work == 'yes'){
					if($vendor_wci_data[$wci]->WCI_cert == 'yes'){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}
				if($rfp_wci_data){
					if($vendor_wci_data[$wci]->WCI_end_date < date('Y-m-d') || $vendor_wci_data[$wci]->WCI_upld_cert=='' || $vendor_wci_data[$wci]->WCI_status == '-1') {
							$occur_wci[] = 'no' ;
					}
					else{
							$occur_wci[] = 'yes' ;
					}
				}	
				if($occur_wci){
					if( in_array("no", $occur_wci) ){
						$cabins_wci[] = "no";
					}
					else{
						$cabins_wci[] = "yes";
					}
				}
				$occur_wci = '';
			}
			
			if($cabins_wci){
				if( in_array("yes", $cabins_wci) ){
					$special_wci = "success";
				}
				else{
					$special_wci = "fail";
				}
			}
			else{
				if($rfp_wci_data)
				$special_wci = "fail";
				else
				$special_wci = "success";
			}
			
				$cabins_wci = '';
		
		return $special_wci ;
	}
	
	//COmpleted
	
	//function to check umbrella liability documents
	 function checknewspecialrequirements_umb($vendorid,$industryid,$managerid){
		$db = & JFactory::getDBO();
		$umb_data ="SELECT * from #__cam_vendor_umbrella_license  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($umb_data);
		$vendor_umb_data = $db->loadObjectList();
		//Get RFP data
		
	
		$whers_cond = 'masterid='.$managerid.'';
		$rfp_umb_data ="SELECT * from #__cam_master_umbrellainsurance_standards WHERE ".$whers_cond." and industryid=".$industryid; //validation to status of docs
		$db->Setquery($rfp_umb_data);
		$rfp_umb_data = $db->loadObject();
		
			for( $umb=0; $umb<count($vendor_umb_data); $umb++ ){
				
				if($rfp_umb_data->each_occur > '0'){	
					if($rfp_umb_data->each_occur <= $vendor_umb_data[$umb]->UMB_occur){
						$occur_umb[] = 'yes' ;
					}
					else{
						$occur_umb[] = 'no' ;
					}
				}	
				if($rfp_umb_data->aggregate > '0'){	
					if($rfp_umb_data->aggregate <= $vendor_umb_data[$umb]->UMB_aggregate){
						$occur_umb[] = 'yes' ;
					}
					else{
						$occur_umb[] = 'no' ;
					}
				}	
				if($rfp_umb_data->certholder_umbrella == 'yes'){
					if($vendor_umb_data[$umb]->UMB_certholder == 'yes'){
						$occur_umb[] = 'yes' ;
					}
					else{
						$occur_umb[] = 'no' ;
					}
				}
				if($rfp_umb_data){
				if($vendor_umb_data[$umb]->UMB_expdate < date('Y-m-d') || !$vendor_umb_data[$umb]->UMB_upld_cert || $vendor_umb_data[$umb]->UMB_status == '-1' || !$vendor_umb_data[$umb]->UMB_aggregate || !$vendor_umb_data[$umb]->UMB_occur) {
						$occur_umb[] = 'no' ;
				}
				else{
						$occur_umb[] = 'yes' ;
				}
				}
				
				if($occur_umb){
					if( in_array("no", $occur_umb) ){
						$cabins_umb[] = "no";
					}
					else{
						$cabins_umb[] = "yes";
					}
				}
				$occur_umb = '';
			}	 
				
				if($cabins_umb){
					if( in_array("yes", $cabins_umb) ){
						$special_umb = "success";
					}
					else{
						$special_umb = "fail";
					}
				}
				else{
					if($rfp_umb_data)
					$special_umb = "fail";
					else
					$special_umb = "success";
				}
		
				$cabins_umb = '';
				return $special_umb ;
	 }
	//Completed
	
	//Funcion to check professional licensw
	function checknewspecialrequirements_pln($vendorid,$industryid,$managerid){

		$db = & JFactory::getDBO();
		$pln_data ="SELECT * from #__cam_vendor_professional_license  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($pln_data);
		$vendor_pln_data = $db->loadObjectList();
		//Get RFP data
		
		$whers_cond = 'masterid='.$managerid.'';
		$rfp_pln_data ="SELECT * from #__cam_master_licinsurance_standards WHERE ".$whers_cond." and industryid=".$industryid; //validation to status of docs
		$db->Setquery($rfp_pln_data);
		$rfp_pln_data = $db->loadObject();
		
			for( $pln=0; $pln<count($vendor_pln_data); $pln++ ){
			
				if($rfp_pln_data->professional == 'yes'){
					if($vendor_pln_data[$pln]->PLN_expdate < date('Y-m-d') || !$vendor_pln_data[$pln]->PLN_upld_cert || $vendor_pln_data[$pln]->PLN_status == '-1') {
						$occur_pln[] = 'no' ;
					}
					else{
						$occur_pln[] = 'yes' ;
					}
				}
				if( $occur_pln ){
					if( in_array("no", $occur_pln) ){
						$cabins_pln[] = "no";
					}
					else{
						$cabins_pln[] = "yes";
					}
				}	
			}	
			
			if($cabins_pln){
				if( in_array("yes", $cabins_pln) ){
					$special_pln = "success";
				}
				else{
					$special_pln = "fail";
				}
				$cabins_pln = '';
			}
			
			else{
					if($rfp_pln_data->professional)
					$special_pln = "fail";
					else
					$special_pln = "success";
			}
			
				$cabins_pln = '';
				return $special_pln ;
	}
	//Completed
	
	function checknewspecialrequirements_occ($vendorid,$industryid,$managerid){

		$db = & JFactory::getDBO();
		$occ_data ="SELECT * from #__cam_vendor_occupational_license  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($occ_data);
		$vendor_occ_data = $db->loadObjectList();
		//Get RFP data
		
		
		$whers_cond = 'masterid='.$managerid.'';
		$rfp_occ_data ="SELECT * from #__cam_master_licinsurance_standards WHERE ".$whers_cond." and industryid=".$industryid; //validation to status of docs
		$db->Setquery($rfp_occ_data);
		$rfp_occ_data = $db->loadObject();
		
			for( $occ=0; $occ<count($vendor_occ_data); $occ++ ){
			
				if($rfp_occ_data->occupational == 'yes'){
					if($vendor_occ_data[$occ]->OLN_expdate < date('Y-m-d') || !$vendor_occ_data[$occ]->OLN_upld_cert || $vendor_occ_data[$pln]->OLN_status == '-1') {
						$occur_occ[] = 'no' ;
					}
					else{
						$occur_occ[] = 'yes' ;
					}
				}
				if( $occur_occ ){
					if( in_array("no", $occur_occ) ){
						$cabins_occ[] = "no";
					}
					else{
						$cabins_occ[] = "yes";
					}
				}	
			}	
			
			if($cabins_occ){
				if( in_array("yes", $cabins_occ) ){
					$special_occ = "success";
				}
				else{
					$special_occ = "fail";
				}
				$cabins_occ = '';
			}
			
			else{
					if($rfp_occ_data->occupational)
					$special_occ = "fail";
					else
					$special_occ = "success";
			}
			
				$cabins_occ = '';
				return $special_occ ;
	}
	//Completed
	
	
	function checknewspecialrequirements_omi($vendorid,$industryid,$managerid){

		$db = & JFactory::getDBO();
		$omi_data ="SELECT * from #__cam_vendor_errors_omissions_insurance  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($omi_data);
		$vendor_omi_data = $db->loadObjectList();
		//Get RFP data
		$rfp_omi_data ="SELECT * from #__cam_master_errors_omissions WHERE masterid=".$managerid." and industryid=".$industryid; //validation to status of docs
		$db->Setquery($rfp_omi_data);
		$rfp_omi_data = $db->loadObject();
		
		
		
			for( $omi=0; $omi<count($vendor_omi_data); $omi++ ){
				
				if($rfp_omi_data->each_claim > '0'){	
					if($rfp_omi_data->each_claim <= $vendor_omi_data[$omi]->OMI_each_claim){
						$occur_omi[] = 'yes' ;
					}
					else{
						$occur_omi[] = 'no' ;
					}
				}	
				if($rfp_omi_data->aggregate_omi > '0'){	
					if($rfp_omi_data->aggregate_omi <= $vendor_omi_data[$omi]->OMI_aggregate){
						$occur_omi[] = 'yes' ;
					}
					else{
						$occur_omi[] = 'no' ;
					}
				}	
				if($rfp_omi_data->certholder_omi == 'yes'){
					if($vendor_omi_data[$omi]->OMI_cert == 'yes'){
						$occur_omi[] = 'yes' ;
					}
					else{
						$occur_omi[] = 'no' ;
					}
				}
				if($rfp_omi_data){
				if($vendor_omi_data[$omi]->OMI_end_date < date('Y-m-d') || !$vendor_omi_data[$omi]->OMI_upld_cert || $vendor_omi_data[$omi]->OMI_status == '-1' ) {
						$occur_omi[] = 'no' ;
				}
				else{
						$occur_omi[] = 'yes' ;
				}
				}
				
				/*if( $vendorid == '1767' ){
				echo "<pre>";	print_r($occur_omi); echo "</pre>";
				//echo "<pre>";	print_r($rfp_omi_data); echo "</pre>";
				}*/
		
				if($occur_omi){
					if( in_array("no", $occur_omi) ){
						$cabins_omi[] = "no";
					}
					else{
						$cabins_omi[] = "yes";
					}
				}
				$occur_omi = '';
			}	
			
				if($cabins_omi){
					if( in_array("yes", $cabins_omi) ){
						$special_omi = "success";
					}
					else{
						$special_omi = "fail";
					}
				}
				else{
					if($rfp_omi_data)
					$special_omi = "fail";
					else
					$special_omi = "success";
				}
		
				$cabins_omi = '';
				return $special_omi ;
				
			
	}
	//Completed
	
	//Function to get the company wide vendors
	
	
	function getcompanywidevendors()
	{
 		$managertype = JRequest::getVar( 'managertype','');
 		$industrytype = JRequest::getVar( 'industrytype','');
		
 		$state = JRequest::getVar( 'state','');	
 		$county = JRequest::getVar( 'divcounty','');	
		$compliance_filter = JRequest::getVar( 'compliance','');
		$verification = JRequest::getVar( 'verification','');
			
		if(!$state){
		$county = '';
		}		
		else{
		$county = $county;
		}
 		//echo '<pre>'; print_r($_REQUEST); 
		$post = JRequest::get('request');
		$db = & JFactory::getDBO();
		$user =& JFactory::getUser();
		if($user->user_type == 12){
		$getc = "SELECT comp_id FROM #__cam_customer_companyinfo where cust_id =".$user->id."  ";
		$db->setQuery($getc);
		$companyid = $db->loadResult();
		}
		else{
		$getc = "SELECT id FROM #__cam_camfirminfo where cust_id =".$user->id."  ";
		$db->setQuery($getc);
		$companyid = $db->loadResult();
		}	
		
	 	$query = "SELECT V.company_name,V.city,V.state,V.company_phone,V.phone_ext,V.fax_id,V.tax_id,U.vendortype,U.vid,U.v_id,U.status,U.inhousevendors,W.name,W.lastname,W.id, W.subscribe, W.subscribe_type,W.ccemail from #__vendor_inviteinfo as U, #__cam_vendor_company as V, #__users as W where LOWER(U.inhousevendors) = (W.email) and V.user_id=W.id and W.block=0 and U.taxid=".$companyid." and W.search='' and U.userid != ".$user->id." ";
		
		
		//If user is master
		if(($user->user_type == 13 && $user->accounttype == 'master')|| $user->user_type == 16)  {
		
		if($user->user_type =='16')
		{
		$mangerids = $this->getallmanageracounts();
		if($mangerids)
		{
		$manager_ids = implode(',',$mangerids);
		$whers_cond = 'masterid IN ('.$manager_ids.')';
		}
		}
		else
		$whers_cond = 'masterid='.$user->id.'';
			$sql1 = "SELECT firmid from #__cam_masteraccounts where ".$whers_cond." ";
			$db->Setquery($sql1);
			$subfirms = $db->loadObjectlist();
			
		if($subfirms)
		{
			$companyid = '';
			foreach($subfirms as $firmid)
				{
					$sql = "SELECT id from #__cam_camfirminfo where cust_id=".$firmid->firmid." ";
					$db->Setquery($sql);
					$companyid[] = $db->loadResult();
					
				}
				
			$cidarr = implode(',',$companyid);	
        }
		
		if($user->user_type =='16')
		$whers_cond = 'U.userid NOT IN ('.$manager_ids.')';
		else
		$whers_cond = 'U.userid !='.$user->id.'';

 $query = "SELECT V.company_name,V.city,V.state,V.company_phone,V.phone_ext,V.fax_id,V.tax_id,U.vendortype,U.vid,U.v_id,U.status,U.inhousevendors,W.name,W.lastname,W.id,W.subscribe, W.subscribe_type,W.ccemail from #__vendor_inviteinfo as U, #__cam_vendor_company as V, #__users as W where LOWER(U.inhousevendors) = (W.email) and V.user_id=W.id and U.taxid IN(".$cidarr.") and W.search='' and ".$whers_cond." ";
		}	
		
		//Completed
		

		
		$db->setQuery($query);
		$result = $db->loadObjectList();
	//echo '<pre>';	print_r($result);exit;
			//To get the vendors based on industry
			if($industrytype){
			
			$checkvendors = "SELECT distinct(user_id) FROM #__cam_vendor_industries where industry_id=".$industrytype." ";
			$db->setQuery($checkvendors);
			$accpetvendor = $db->loadObjectList();
			//echo '<pre>';print_r($accpetvendor);exit;
			if($result){
				foreach($result as $vid){
				$existing[] = $vid->v_id;
				}
			}	
			if($accpetvendor){
				foreach($accpetvendor as $inids){
				$indusids[] = $inids->user_id;
				}
			}
			if($indusids != '' && $existing!= ''){
			$common = array_intersect($indusids, $existing) ;
			}
			if($common){
			$indus_condition = implode(',',$common) ;
			}
			if($indus_condition)
			$query = $query . "AND V.user_id IN ("  . $indus_condition . ")" ;
			else
			$query = $query . "AND V.user_id IN ('')" ;
			}	
			
			if($county){
			$checkvendors1 = "SELECT distinct(user_id) FROM #__vendor_state_counties where county_id=".$county." ";
			$db->setQuery($checkvendors1);
			$accpetvendor1 = $db->loadObjectList();
			
			if($result){
				foreach($result as $vid){
				$existing[] = $vid->v_id;
				}
			}	
			if($accpetvendor1){
				foreach($accpetvendor1 as $county){
				$countys[] = $county->user_id;
				}
			}
			if($countys != '' && $existing!= ''){
			$common = array_intersect($countys, $existing) ;
			}
			if($common){
			$county_condition = implode(',',$common) ;
			}
			if($county_condition)
			$query = $query . "AND V.user_id IN ("  . $county_condition . ")" ;
			else
			$query = $query . "AND V.user_id IN (' ')" ; 
			}	
			
			//If selecting state and not selecting ny county
			if($state && !$county){
			$checkvendorsstate = "SELECT distinct(user_id) FROM #__vendor_state_counties where state_id='".$state."' ";
			$db->setQuery($checkvendorsstate);
			$statevendors = $db->loadObjectList();
			if($result){
				foreach($result as $vid){
				$existing[] = $vid->v_id;
				}
			}	
			if($statevendors){
				foreach($statevendors as $county){
				$countys[] = $county->user_id;
				}
			}
			if($countys != '' && $existing!= ''){
			$common = array_intersect($countys, $existing) ;
			}
			if($common){
			$county_condition = implode(',',$common) ;
			}
			if($county_condition)
			$query = $query . "AND V.user_id IN ("  . $county_condition . ")" ;
			else
			$query = $query . "AND V.user_id IN ('')" ;
			}
			//Completed
			if( $verification == 'ver' )
			$query = $query . " AND W.subscribe_type != 'free' " ;
			if( $verification == 'unver' )
			$query = $query . " AND W.subscribe_type = 'free' " ;
		$type = JRequest::getVar('type','');
		$sort = JRequest::getVar('sort','');
		
		if( $sort == 'asc' && $type == 'coworker' ){
			$sorting = ' GROUP BY W.id order by V.company_name ASC ';
		}
		else if( $sort == 'desc' && $type == 'coworker' ){
			$sorting = ' GROUP BY W.id order by V.company_name DESC ';
		}
		else{
			$sorting = " GROUP BY W.id order by V.company_name ASC  ";
		}
		
		
		$query = $query . ' '.$sorting.'  ' ;
			//echo $query;
			
		$db->setQuery($query);
		$result = $db->loadObjectList();
//echo '<pre>';  print_r($result);exit;
		for( $p=0; $p<count($result); $p++ ){
		//echo $result[$p]->id;exit;
			$c_status =	$this->checkcompliancestatus($result[$p]->id);
			//print_r($c_status);exit;
			$result[$p]->cstatus = $c_status ;
		}
		
		for( $s=0; $s<count($result); $s++ ){
		$only_state = $result[$s]->cstatus ;
					if($only_state){
						foreach($only_state as $statues){
							$final_state[] = $statues->status;
							$med_fina_state = '';
							$med_fina_state = array_unique($final_state);
							
								if( count($med_fina_state) == 2 ) {
									$result[$s]->final_status = 'medium' ;
								}
								if( count($med_fina_state) == 1 &&  $med_fina_state[0] == 'fail') {
									$result[$s]->final_status = 'fail' ;
								}
								if( count($med_fina_state) == 1 &&  $med_fina_state[0] == 'success' ){
										$result[$s]->final_status = 'success' ;
								}
								
								$managerid  = $user->id;
								//echo $managerid;exit;
		
								$masteraccount = $this->getmasterfirmaccount($managerid );
								//echo $masteraccount;exit;
								$result[$s]->termsandc = $this->gettermsconditions($masteraccount,$result[$s]->id);
											
								
						} 
						$final_state = '';
						$med_fina_state = '';
					}
		// Adding block unverified vendor rule
	$user =& JFactory::getUser();
	$masterid = $this->getmasterfirmaccount($user->id);
	$block_per = "SELECT block, block_complinace FROM #__cam_master_block_users where masterid ='".$masterid."' ";
	$db->setQuery($block_per);
	$block = $db->loadObject();
		if( $block->block == '1' )
			$result[$s]->unverified = 'hide' ;
		else	
			$result[$s]->unverified = 'show' ;
		
		if( $block->block_complinace == '1' )
			$result[$s]->block_nonc = 'hide' ;
		else	
			$result[$s]->block_nonc = 'show' ;
				
	//Completed
		
		}
		
	// Adding dispaly only verified vendors
		$user =& JFactory::getUser();
		$masterid = $this->getmasterfirmaccount($user->id);
		$act_type = "SELECT acount_type FROM #__cam_master_compliancereport where masterid ='".$masterid."' ";
		$db->setQuery($act_type);
		$act_type = $db->loadResult();
		
		
		for( $v=0; $v<count($result); $v++ ){
		$subscribe_type = "SELECT subscribe_type FROM #__users where id ='".$result[$v]->id."'";
		$db->setQuery($subscribe_type);
		$subscribe_type = $db->loadResult();
		if( $act_type == '1' && ( $subscribe_type == 'free' || $subscribe_type == '' ) )
			$result[$v]->acount_type = 'show' ;
		else	
			$result[$v]->acount_type = 'hide' ;
		}
		
		
		//Completed	
     //echo'<pre>'; print_r($result);exit;
		return $result;
	}
	
	
	function _buildQuery()
	{  
	 	//code added on 06-02-2010
		$filter_vendorslist		= JRequest::getWord('filter_vendorslist');
		if(isset($filter_vendorslist) && $filter_vendorslist == 'IH')
		$where = ' AND in_house_vendor = "yes"';
		else if(isset($filter_vendorslist) && $filter_vendorslist == 'PF')
		$where = ' AND preferred_vendors = "yes"';
		else if(isset($filter_vendorslist) && $filter_vendorslist == 'EX')
		$where = ' AND not_interest_RFP  = "yes"';
	    $db =& JFactory::getDBO();
		$orderby	= $this->_buildContentOrderBy();
		$search		= JRequest::getWord('search');
	   	// $where = ' WHERE LOWER(C.catname) LIKE '.$db->Quote( '%'.$db->getEscaped( $search, true ).'%', false );
	    //$where .=  ' OR LOWER(C.catdescription) LIKE '.$db->Quote( '%'.$db->getEscaped( $search, true ).'%', false );
		if($filter_vendorslist == '')	
		$query = ' SELECT V.id,V.tax_id,U.name,U.lastname,U.email,U.salutation,U.phone,U.extension,U.cellphone,U.user_type  FROM #__users as U LEFT JOIN #__cam_vendor_company as V ON U.id = V.user_id WHERE U.user_type = 11';
		else
		$query = ' SELECT  V.id,V.tax_id,U.name,U.lastname,U.email,U.salutation,U.phone,U.extension,U.cellphone,U.user_type  FROM #__users as U LEFT JOIN #__cam_vendor_company as V ON U.id = V.user_id WHERE U.user_type = 11'.$where;
		//code added on 06-02-2010
	    /*$orderby	= $this->_buildContentOrderBy();
		$query = ' SELECT * FROM '.$this->_table_prefix.'category'.$orderby;
		*/
		return $query;
	}
	
// function for deleting the records from db // coded by anandbabu	in vendorscenter
	function &getvendorslist() 
	{
		global $mainframe;
		$javascript		= ' onchange="document.adminForm.submit();" ';
		$vendorslist[] = JHTML::_('select.option', '0', '-Choose Vendors-');
		$this->_filter_vendorslist	= $mainframe->getUserStateFromRequest( $context.'filter_vendorslist', 'filter_vendorslist', 0,	'string' );	
		$objects[0]->id 	= 'IH';
		$objects[0]->type = 'In-House Vendors';
		$objects[1]->id 	= 'PF';
		$objects[1]->type = 'Preffered Vendors';
		$objects[2]->id 	= 'EX';
		$objects[2]->type = 'Excluded Vendors';
		foreach( $objects as $obj ) 
		{
			$vendorslist[] = JHTML::_('select.option',  $obj->id, $obj->type);
		}
		
		//echo "<pre>"; print_r($vendorslist); exit;
		$result = JHTML::_('select.genericlist',$vendorslist, 'filter_vendorslist', 'class="inputbox" size="1" ' . $javascript , 'value', 'text', $this->_filter_vendorslist);	
	 return $result;
	}
	function _buildContentOrderBy()
	{
		global $mainframe, $context;

		//DEVNOTE:give me ordering from request
		//$filter_order     = $mainframe->getUserStateFromRequest( $context.'filter_order',      'filter_order', 	  'ordering' );
		$filter_order		= JRequest::getWord('filter_order');
		if($filter_order == '')
		$filter_order = 'name';
		else
		$filter_order = $filter_order;
		$filter_order_Dir = $mainframe->getUserStateFromRequest( $context.'filter_order_Dir',  'filter_order_Dir', '' );		

		//DEVNOTE: all countries are in the same category(no category)  
		$orderby 	= ' ORDER BY  '. $filter_order .' '. $filter_order_Dir;				

		return $orderby;
	}

 //function for deleting the vendors from vendorinvite info // coded by sateesh in vendorscenter
	function getvendor_center_delete($cid = array())
	{
//echo "<pre>";	print_r($_REQUEST); exit;
		$vid = $_REQUEST['vendorid']; 
		$db = & JFactory::getDBO();
		$query = "DELETE FROM #__vendor_inviteinfo WHERE vid=".$vid ;

		$this->_db->setQuery( $query );
		if(!$this->_db->query()) {
		$this->setError($this->_db->getErrorMsg());
		return false;
		} 
}	
// function for deleting the records from db // coded by anandbabu in vendorscenter
	/*function getvendor_center_delete($cid = array())
	{
		$post = JRequest::get('get');
		$cids = $post['vendorid']; 
		$db = & JFactory::getDBO();
			$result = false;
		if (count( $cids ))
		{ 
			 //echo 'in of loop'; 
			//$cids = implode( ',', $cid );
	 		echo $query = 'SELECT user_id FROM '.$this->_table_prefix.'vendor_company WHERE id  IN ('.$cids.')'; 
			$db->setQuery($query);
			$result = $db->loadObjectList();
			$userid = $result[0]->user_id;
			
		
			//to delete records from vendors table
			echo $query = 'DELETE FROM '.$this->_table_prefix.'vendor_company WHERE user_id IN ( '.$userid.' )';
			$this->_db->setQuery( $query );
			if(!$this->_db->query()) {
				$this->setError($this->_db->getErrorMsg());
				return false;
			} 
			
			//to delete records from users table
			echo $query = 'DELETE FROM #__users WHERE id IN ( '.$userid.' )';
			$this->_db->setQuery( $query );
			if(!$this->_db->query()) {
				$this->setError($this->_db->getErrorMsg());
				return false;				
			}
			//to delete rocords from cam_rfpsow_addexception table
			echo $query = 'DELETE FROM '.$this->_table_prefix.'rfpsow_addexception WHERE  vendor_id  IN ( '.$userid.' )';
			$this->_db->setQuery( $query );
			if(!$this->_db->query()) {
				$this->setError($this->_db->getErrorMsg());
				return false;				
			}
			//to delete records from cam_rfpsow_addnotes table
			echo $query = 'DELETE FROM '.$this->_table_prefix.'rfpsow_addnotes WHERE  vendor_id  IN ( '.$userid.' )'; 
			$this->_db->setQuery( $query );
			if(!$this->_db->query()) {
				$this->setError($this->_db->getErrorMsg());
				return false;				
			}
			//to delete records from rfpsow_uploadfiles table
 			echo $query = 'DELETE FROM '.$this->_table_prefix.'rfpsow_uploadfiles WHERE  vendor_id  IN ( '.$userid.' )'; 
			$this->_db->setQuery( $query );
			if(!$this->_db->query()) {
				$this->setError($this->_db->getErrorMsg());
				return false;				
			}
		}

		return true;
	}*/
	
// function for updating th phone number in the db // coded by anand babu in vendorscenter
/*	function updatephonenumber()
	{	
		$post = JRequest::get('get');
		$db = & JFactory::getDBO();
		$query = "UPDATE #__users SET phone = '".$post[phno]."' WHERE id = ".$post[userid];   
		$db->setQuery($query);
		if($db->query())   
			 return false;
		else 
		 	 return true;
		
	}
	
	function updateextension()
	{
		$post = JRequest::get('get');
		$db = & JFactory::getDBO();
		echo $query = "UPDATE #__users SET extension = '".$post[ext]."' WHERE id = ".$post[userid]; 
		$db->setQuery($query);
		if($db->query())   
			 return false;
		else 
		 	 return true;
		
	}
	
	function updatemailid()
	{
		$post = JRequest::get('get');
		$db = & JFactory::getDBO();
		echo $query = "UPDATE #__users SET email = '".$post[mid]."' WHERE id = ".$post[userid];  
		$db->setQuery($query);
		if($db->query())   
			 return false;
		else 
		 	 return true;
		
	}*/
	
	function getvendor_edit()
	{
		$post = JRequest::get('get');
		$db = & JFactory::getDBO();
		//echo $query = "UPDATE #__users SET extension = '".$post[ext]."' WHERE id = ".$post[userid]; 
		$query = "SELECT U.* FROM #__users AS U, #__cam_vendor_company As V WHERE U.id = V.user_id AND V.id = ".$post['id'];
		$db->setQuery($query);
		$result = $db->loadObjectList();
		return $result;
	}
	
	function getfei($email,$userid){

	$db = JFactory::getDBO();
	$before_invites = "SELECT vid from #__vendor_inviteinfo  where userid =".$userid."  and inhousevendors ='".$email."' ";
	$db->setQuery($before_invites);
	$invites=$db->loadResult();
	if($invites){
	$fei = "SELECT fei from #__vendor_inviteinfo  where userid =".$userid." and  inhousevendors ='".$email."' ";
	$db->setQuery($fei);
	$random_code=$db->loadResult();
	}
	else{
	srand ((double) microtime( )*1000000);
	$random_code = rand();
	}
	return $random_code;
	}
	
	//function to get the body measage
	function getbody($fei,$vendortype,$to,$userid,$subject){
	
		$db = JFactory::getDBO();
		$exists = "SELECT id from #__users  where email ='".$to."' ";
		$db->setQuery($exists);
		$exist=$db->loadResult();
		if($exist && $vendortype=='preferred') {
		$exists = "SELECT introtext  FROM #__content where id='152'"; }
		if($exist && $vendortype=='inhouse')  {
		$exists = "SELECT introtext  FROM #__content where id='151'"; } 
		if(!$exist && $vendortype=='inhouse') {
		$exists = "SELECT introtext  FROM #__content where id='159'"; }
		if(!$exist && $vendortype=='preferred') {
		$exists = "SELECT introtext  FROM #__content where id='160'"; }
		$db->setQuery($exists);
		$text=$db->loadResult();
		//get camfirm details
		$camdetails = "SELECT U.name,U.lastname,V.comp_name from #__users as U, #__cam_camfirminfo as V  where U.id=V.cust_id AND U.id =".$userid." ";
		$db->setQuery($camdetails);
		$camfirm=$db->loadObject();
		$firmname = $camfirm->name.'&nbsp;'.$camfirm->lastname;
		$firmname = $firmname.'&nbsp;of&nbsp;'.$camfirm->comp_name;
		
		$activation ='https://www.myvendorcenter.com/live/index.php?option=com_camassistant&controller=vendorsaccept&task=vendorsaccept&vendor_type='.$vendortype.'&view=vendorsaccept&Itemid=153&inv_code='.$fei.'&mailid='.$to.'&camid='.$userid.'&Itemid=153 ';
		$activation = '<a href='.$activation.'>'.$activation.'</a>';
		$registration= 'https://myvendorcenter.com/live/index.php?option=com_camassistant&controller=vendorsignup&task=vendorsignup_p1&Itemid=66';
		$registration = '<a href='.$registration.'>'.$registration.'</a>';
		$body = str_replace('{CAM Firm}',$firmname,$text);
		$body = $body.'<br>Registration LINK:<br>'.$registration;
		//$body = $body.'<br><br>Activation LINK:<br>'.$activation;
		
		return $body;
	}
	//function to check the user exists or not
	function getcheck($to,$userid){
	$db = JFactory::getDBO();
	$exists = "SELECT vid from #__vendor_inviteinfo  where userid =".$userid." and inhousevendors='".$to."' ";
	$db->setQuery($exists);
	$vid=$db->loadResult();
	return $vid;
	}
	//function to get the taxid
	function getchecktax($tax){
	$db = JFactory::getDBO();
	$v_details = "SELECT U.id,U.email from #__users as U, #__cam_vendor_company as V where  U.id=V.user_id and V.tax_id ='".$tax."' ";
	$db->setQuery($v_details);
	$v_details=$db->loadObject();
	return $v_details;
	}
	
	function getbodymsg(){
	$db = JFactory::getDBO();
	$body_msg = "SELECT introtext  FROM #__content where id='152'";
	$db->setQuery($body_msg);
	$msg=$db->loadResult();
	return $msg;
	}

function store($data){
//	echo "<pre>"; print_r($post); exit;
	$row =& $this->getTable('invitevendors');
	//echo "<pre>"; print_r($row);print_r($post); exit;
		jimport('joomla.user.helper');
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		return true;
	}
	
	function store_add($data){

	$row =& $this->getTable('invitevendors');
	//echo "<pre>"; print_r($row);print_r($post); exit;
		jimport('joomla.user.helper');
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		return true;
	}
	
	function store_newadd($data){

	$row =& $this->getTable('newinvitevendors');
	//echo "<pre>"; print_r($row);print_r($post); exit;
		jimport('joomla.user.helper');
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		return true;
	}
	//Function to get all industries
	function getallindustries(){
	$db = JFactory::getDBO();
	$sql = "SELECT * FROM #__cam_industries WHERE published=1 order by industry_name ";
	$db->Setquery($sql);
	$industries = $db->loadObjectList();
	return $industries ;
	}
	function getstatelist()
	{
		$db =& JFactory::getDBO();
		$query_states = "SELECT * FROM #__state";
		$db->setQuery($query_states);
		$result_states = $db->loadObjectList();
		return $result_states;
	}
	//Function to get the company id
	function getcompanyid($id, $type){
	$db =& JFactory::getDBO();
	if($type == 13){
	$taxid = "SELECT id FROM #__cam_camfirminfo where cust_id =".$id."  ";
	$db->setQuery($taxid);
	$tax = $db->loadResult();
	}
	else{
	$taxid = "SELECT comp_id FROM #__cam_customer_companyinfo where cust_id =".$id."  ";
	$db->setQuery($taxid);
	$tax = $db->loadResult();
	}
	return $tax;  
	}
	//Completed
	//funtion to get the individual invitations
	function ownpreferredvendors(){
	$db =& JFactory::getDBO();
	$user =& JFactory::getUser();
	
	if($user->user_type =='16')
	{
	$mangerids = $this->getallmanageracounts();
	if($mangerids){
			$manager_ids = implode(',',$mangerids);
			$whers_cond = 'U.userid IN ('.$manager_ids.')';
			}
	}
	else
	$whers_cond = 'U.userid='.$user->id.'';
	 $query = "SELECT V.company_name,V.city,V.state,V.company_phone,V.phone_ext,V.fax_id,V.tax_id,U.vendortype,U.vid,U.v_id,U.status,U.inhousevendors, W.name, W.lastname,W.ccemail from #__vendor_inviteinfo as U, #__cam_vendor_company as V, #__users as W where LOWER(U.inhousevendors) = (W.email) and V.user_id=W.id and W.search=''and ".$whers_cond."  ";
	$db->setQuery($query);
	$own = $db->loadObjectList();
	
	if($own){
				foreach($own as $vid){
				$owns[] = $vid->v_id;
				}
			}
	//echo '<pre>';print_r($owns);exit;			
	return $owns; 
	}
	function corporatevendors(){
		$managertype = JRequest::getVar( 'managertype','');
 		$industrytype = JRequest::getVar( 'industrytype','');
 		$state = JRequest::getVar( 'state','');	
 		$county = JRequest::getVar( 'divcounty','');	
		$compliance_filter = JRequest::getVar( 'compliance','');
		$verification = JRequest::getVar( 'verification','');
		
		if(!$state){
		$county = '';
		}		
		else{
		$county = $county;
		}		
 		//echo '<pre>'; print_r($_REQUEST); 
		$post = JRequest::get('request');
		$db = & JFactory::getDBO();
		$user =& JFactory::getUser();
		$usercreator = $this->getmasterfirmaccount($user->id);
      
		$whers_cond = 'U.userid='.$usercreator.'';
		
	 	 $query = "SELECT  V.company_name,V.city,V.state,V.company_phone,V.phone_ext,V.fax_id,V.tax_id,U.vendortype,U.vid,U.v_id,U.status,U.inhousevendors, W.name, W.lastname, W.id, W.subscribe, W.ccemail, W.subscribe_type from #__vendor_inviteinfo as U, #__cam_vendor_company as V, #__users as W where LOWER(U.inhousevendors) = (W.email) and V.user_id=W.id and W.block='0' and U.exclude!='yes' and W.search='' and ".$whers_cond." ".$where." ";
		$db->setQuery($query);
		$result = $db->loadObjectList();
		
			//To get the vendors based on industry
			if($industrytype){
			$checkvendors = "SELECT distinct(user_id) FROM #__cam_vendor_industries where industry_id=".$industrytype." ";
			$db->setQuery($checkvendors);
			$accpetvendor = $db->loadObjectList();
			
			if($result){
				foreach($result as $vid){
				$existing[] = $vid->v_id;
				}
			}	
			if($accpetvendor){
				foreach($accpetvendor as $inids){
				$indusids[] = $inids->user_id;
				}
			}
			if($indusids != '' && $existing!= ''){
			$common = array_intersect($indusids, $existing) ;
			}
			if($common){
			$indus_condition = implode(',',$common) ;
			}
			
			if($indus_condition)
			$query = $query . "AND V.user_id IN ("  . $indus_condition . ")" ;
			else
			$query = $query . "AND V.user_id IN ('  ')" ;
			}	
			
			if($county){
			$checkvendors1 = "SELECT distinct(user_id) FROM #__vendor_state_counties where county_id=".$county." ";
			$db->setQuery($checkvendors1);
			$accpetvendor1 = $db->loadObjectList();
			
			if($result){
				foreach($result as $vid){
				$existing[] = $vid->v_id;
				}
			}	
			if($accpetvendor1){
				foreach($accpetvendor1 as $county){
				$countys[] = $county->user_id;
				}
			}
			if($countys != '' && $existing!= ''){
			$common = array_intersect($countys, $existing) ;
			}
			if($common){
			$county_condition = implode(',',$common) ;
			}
			if($county_condition)
			$query = $query . "AND V.user_id IN ("  . $county_condition . ")" ;
			else
			$query = $query . "AND V.user_id IN ('')" ;
			}	
			
			//If selecting state and not selecting ny county
			if($state && !$county){
			 $checkvendorsstate = "SELECT distinct(user_id) FROM #__vendor_state_counties where state_id='".$state."' ";
			$db->setQuery($checkvendorsstate);
			$statevendors = $db->loadObjectList();
			if($result){
				foreach($result as $vid){
				$existing[] = $vid->v_id;
				}
			}	
			if($statevendors){
				foreach($statevendors as $county){
				$countys[] = $county->user_id;
				}
			}
			if($countys != '' && $existing!= ''){
			$common = array_intersect($countys, $existing) ;
			}
			if($common){
			$county_condition = implode(',',$common) ;
			}
			if($county_condition)
			$query = $query . "AND V.user_id IN ("  . $county_condition . ")" ;
			else
			$query = $query . "AND V.user_id IN (' ')" ;
			}
			//Completed
			if( $verification == 'ver' )
			$query = $query . " AND W.subscribe_type != 'free' " ;
			if( $verification == 'unver' )
			$query = $query . " AND W.subscribe_type = 'free' " ;
		//echo $query;
		/*$sort = JRequest::getVar('sort','');
		if( $sort == '' ){
			$sorting = " GROUP BY U.v_id order by W.subscribe_type='', W.subscribe_type='public', W.subscribe_type='all'  ";
		}
		if($sort == 'asc' || $sort == ''){
			$sorting = ' GROUP BY U.v_id order by V.company_name ASC ';
		}
		else{
			$sorting = 'GROUP BY U.v_id order by V.company_name DESC ';
		}*/
		
		$sort = JRequest::getVar('sort','');
		$type = JRequest::getVar('type','');
		
		if( $sort == 'asc' && $type == 'corporate' ){
			$sorting = ' GROUP BY U.v_id order by V.company_name ASC ';
		}
		else if( $sort == 'desc' && $type == 'corporate' ){
			$sorting = ' GROUP BY U.v_id order by V.company_name DESC ';
		}
		else{
			$sorting = " GROUP BY U.v_id order by V.company_name ASC  ";
		}
		
		
		$query = $query . ' '.$sorting.'  ' ;
		//echo $query; 
		$db->setQuery($query);
		$result = $db->loadObjectList();
		for( $p=0; $p<count($result); $p++ ){
			$c_status =	$this->checkcompliancestatus($result[$p]->id);
			$result[$p]->cstatus = $c_status ;
			
		}
				//echo "<pre>"; print_r($result); echo "</pre>";exit;		
		for( $s=0; $s<count($result); $s++ ){
		$only_state = $result[$s]->cstatus ;
					if($only_state){
						foreach($only_state as $statues){
							$final_state[] = $statues->status;
							$med_fina_state = '';
							$med_fina_state = array_unique($final_state);
							$result[$s]->final_status = '';
								if( count($med_fina_state) == 2 ) {
									$result[$s]->final_status = 'medium' ;
								}
								if( count($med_fina_state) == 1 &&  $med_fina_state[0] == 'fail') {
									$result[$s]->final_status = 'fail' ;
								}
								if( count($med_fina_state) == 1 &&  $med_fina_state[0] == 'success' ){
									$result[$s]->final_status = 'success' ;
								}
								$masteraccount = $this->getmasterfirmaccount($user->id);
								$result[$s]->termsandc = $this->gettermsconditions($masteraccount,$result[$s]->id);
										
							
						} 
						$final_state = '';
					}
					
		// Adding block unverified vendor rule
		$user =& JFactory::getUser();
		$masterid = $this->getmasterfirmaccount($user->id);
		$block_per = "SELECT block, block_complinace FROM #__cam_master_block_users where masterid ='".$masterid."' ";
		$db->setQuery($block_per);
		$block = $db->loadObject();
		if( $block->block == '1' )
			$result[$s]->unverified = 'hide' ;
		else	
			$result[$s]->unverified = 'show' ;
		
		if( $block->block_complinace == '1' )
			$result[$s]->block_nonc = 'hide' ;
		else	
			$result[$s]->block_nonc = 'show' ;
				
		//Completed
		
		}
	// Adding Vendor to CORPORATE PREFERRED VENDORS
	$masterid = $this->getmasterfirmaccount($user->id);
	for( $p=0; $p<count($result); $p++ ){
		$per_vendor = "SELECT id FROM #__cam_vendor_purchasedcodes where masterid ='".$masterid."' and vendorid ='".$result[$p]->id."' and publish=1";
		$db->setQuery($per_vendor);
		$per_vendor = $db->loadResult();
		if($per_vendor)
		$result[$p]->per_vendor = 'show';
		else
		$result[$p]->per_vendor = 'hide';
		}
		for( $pr=0; $pr<count($result); $pr++ ){
		 $star_vendor = "SELECT vid FROM #__vendor_inviteinfo where userid ='".$masterid."' and v_id ='".$result[$pr]->id."' AND invitation_type='pre'";
		$db->setQuery($star_vendor);
		$star_vendor = $db->loadResult();
		if($star_vendor)
		$result[$pr]->star_vendor = 'show';
		else
		$result[$pr]->star_vendor = 'hide';
		}
		
	    $user =& JFactory::getUser();
		$masterid = $this->getmasterfirmaccount($user->id);
		$act_type = "SELECT acount_type FROM #__cam_master_compliancereport where masterid ='".$masterid."' ";
		$db->setQuery($act_type);
		$act_type = $db->loadResult();
		
		
		for( $v=0; $v<count($result); $v++ ){
		$subscribe_type = "SELECT subscribe_type FROM #__users where id ='".$result[$v]->id."'";
		$db->setQuery($subscribe_type);
		$subscribe_type = $db->loadResult();
		if( $act_type == '1' && ( $subscribe_type == 'free' || $subscribe_type == '' ) )
			$result[$v]->acount_type = 'show' ;
		else	
			$result[$v]->acount_type = 'hide' ;
		}	
		
		return $result;
	}
	
	
		function corporatevendors_star(){
		$managertype = JRequest::getVar( 'managertype','');
 		$industrytype = JRequest::getVar( 'industrytype','');
 		$state = JRequest::getVar( 'state','');	
 		$county = JRequest::getVar( 'divcounty','');	
		$compliance_filter = JRequest::getVar( 'compliance','');
		$verification = JRequest::getVar( 'verification','');
		
		if(!$state){
		$county = '';
		}		
		else{
		$county = $county;
		}		
 		//echo '<pre>'; print_r($_REQUEST); 
		$post = JRequest::get('request');
		$db = & JFactory::getDBO();
		$user =& JFactory::getUser();
		$usercreator = $this->getmasterfirmaccount($user->id);
      
		$whers_cond = 'U.userid='.$usercreator.'';
		
	 	
		 $query = "SELECT  V.company_name,V.city,V.state,V.company_phone,V.phone_ext,V.fax_id,V.tax_id,U.vendortype,U.vid,U.v_id,U.status,U.inhousevendors, W.name, W.lastname, W.id, W.subscribe, W.ccemail, W.subscribe_type from #__vendor_inviteinfo as U, #__cam_vendor_purchasedcodes as P, #__cam_vendor_company as V, #__users as W where LOWER(U.inhousevendors) = (W.email) and V.user_id=W.id and W.block='0' and U.exclude!='yes' and W.search='' and ".$whers_cond." ".$where." and (U.invitation_type='pre' || P.vendorid=W.id )";
		$db->setQuery($query);
		$result = $db->loadObjectList();
		
			//To get the vendors based on industry
			if($industrytype){
			$checkvendors = "SELECT distinct(user_id) FROM #__cam_vendor_industries where industry_id=".$industrytype." ";
			$db->setQuery($checkvendors);
			$accpetvendor = $db->loadObjectList();
			
			if($result){
				foreach($result as $vid){
				$existing[] = $vid->v_id;
				}
			}	
			if($accpetvendor){
				foreach($accpetvendor as $inids){
				$indusids[] = $inids->user_id;
				}
			}
			if($indusids != '' && $existing!= ''){
			$common = array_intersect($indusids, $existing) ;
			}
			if($common){
			$indus_condition = implode(',',$common) ;
			}
			
			if($indus_condition)
			$query = $query . "AND V.user_id IN ("  . $indus_condition . ")" ;
			else
			$query = $query . "AND V.user_id IN ('  ')" ;
			}	
			
			if($county){
			$checkvendors1 = "SELECT distinct(user_id) FROM #__vendor_state_counties where county_id=".$county." ";
			$db->setQuery($checkvendors1);
			$accpetvendor1 = $db->loadObjectList();
			
			if($result){
				foreach($result as $vid){
				$existing[] = $vid->v_id;
				}
			}	
			if($accpetvendor1){
				foreach($accpetvendor1 as $county){
				$countys[] = $county->user_id;
				}
			}
			if($countys != '' && $existing!= ''){
			$common = array_intersect($countys, $existing) ;
			}
			if($common){
			$county_condition = implode(',',$common) ;
			}
			if($county_condition)
			$query = $query . "AND V.user_id IN ("  . $county_condition . ")" ;
			else
			$query = $query . "AND V.user_id IN ('')" ;
			}	
			
			//If selecting state and not selecting ny county
			if($state && !$county){
			 $checkvendorsstate = "SELECT distinct(user_id) FROM #__vendor_state_counties where state_id='".$state."' ";
			$db->setQuery($checkvendorsstate);
			$statevendors = $db->loadObjectList();
			if($result){
				foreach($result as $vid){
				$existing[] = $vid->v_id;
				}
			}	
			if($statevendors){
				foreach($statevendors as $county){
				$countys[] = $county->user_id;
				}
			}
			if($countys != '' && $existing!= ''){
			$common = array_intersect($countys, $existing) ;
			}
			if($common){
			$county_condition = implode(',',$common) ;
			}
			if($county_condition)
			$query = $query . "AND V.user_id IN ("  . $county_condition . ")" ;
			else
			$query = $query . "AND V.user_id IN (' ')" ;
			}
			//Completed
			if( $verification == 'ver' )
			$query = $query . " AND W.subscribe_type != 'free' " ;
			if( $verification == 'unver' )
			$query = $query . " AND W.subscribe_type = 'free' " ;
		//echo $query;
		/*$sort = JRequest::getVar('sort','');
		if( $sort == '' ){
			$sorting = " GROUP BY U.v_id order by W.subscribe_type='', W.subscribe_type='public', W.subscribe_type='all'  ";
		}
		if($sort == 'asc' || $sort == ''){
			$sorting = ' GROUP BY U.v_id order by V.company_name ASC ';
		}
		else{
			$sorting = 'GROUP BY U.v_id order by V.company_name DESC ';
		}*/
		
		$sort = JRequest::getVar('sort','');
		$type = JRequest::getVar('type','');
		
		if( $sort == 'asc' && $type == 'corporate' ){
			$sorting = ' GROUP BY U.v_id order by V.company_name ASC ';
		}
		else if( $sort == 'desc' && $type == 'corporate' ){
			$sorting = ' GROUP BY U.v_id order by V.company_name DESC ';
		}
		else{
			$sorting = " GROUP BY U.v_id order by V.company_name ASC  ";
		}
		
		
		$query = $query . ' '.$sorting.'  ' ;
		//echo $query; 
		$db->setQuery($query);
		$result = $db->loadObjectList();
		for( $p=0; $p<count($result); $p++ ){
			$c_status =	$this->checkcompliancestatus($result[$p]->id);
			$result[$p]->cstatus = $c_status ;
			
		}
				//echo "<pre>"; print_r($result); echo "</pre>";exit;		
		for( $s=0; $s<count($result); $s++ ){
		$only_state = $result[$s]->cstatus ;
					if($only_state){
						foreach($only_state as $statues){
							$final_state[] = $statues->status;
							$med_fina_state = '';
							$med_fina_state = array_unique($final_state);
							$result[$s]->final_status = '';
								if( count($med_fina_state) == 2 ) {
									$result[$s]->final_status = 'medium' ;
								}
								if( count($med_fina_state) == 1 &&  $med_fina_state[0] == 'fail') {
									$result[$s]->final_status = 'fail' ;
								}
								if( count($med_fina_state) == 1 &&  $med_fina_state[0] == 'success' ){
									$result[$s]->final_status = 'success' ;
								}
								$masteraccount = $this->getmasterfirmaccount($user->id);
								$result[$s]->termsandc = $this->gettermsconditions($masteraccount,$result[$s]->id);
										
							
						} 
						$final_state = '';
					}
					
		// Adding block unverified vendor rule
		$user =& JFactory::getUser();
		$masterid = $this->getmasterfirmaccount($user->id);
		$block_per = "SELECT block, block_complinace FROM #__cam_master_block_users where masterid ='".$masterid."' ";
		$db->setQuery($block_per);
		$block = $db->loadObject();
		if( $block->block == '1' )
			$result[$s]->unverified = 'hide' ;
		else	
			$result[$s]->unverified = 'show' ;
		
		if( $block->block_complinace == '1' )
			$result[$s]->block_nonc = 'hide' ;
		else	
			$result[$s]->block_nonc = 'show' ;
				
		
		//Completed
		
		}
		
		//$result = $db->loadObjectList();
       //echo '<pre>';print_r($result);exit;
		return $result;
	}
	
	
	//Function to get master firm userid when manager, firm, district manager loggedin
	function getmasterfirmaccount($manager){
	
	$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$query_user = "SELECT user_type,accounttype FROM #__users WHERE id=".$manager." ";
		$db->setQuery($query_user);
		$user_data = $db->loadObject();
		$user_type = $user_data->user_type ;
		$accounttype = $user_data->accounttype;		
		
			if($user_type == '12'){
				$query_c = "SELECT comp_id FROM #__cam_customer_companyinfo WHERE cust_id=".$manager." ";
				$db->setQuery($query_c);
				$cid = $db->loadResult();	
				$camfirmid = "SELECT cust_id FROM #__cam_camfirminfo WHERE id=".$cid." ";
				$db->setQuery($camfirmid);
				$camfirm = $db->loadResult();
				$masterid = "SELECT masterid FROM #__cam_masteraccounts WHERE firmid=".$camfirm." ";
				$db->setQuery($masterid);
				$master = $db->loadResult();
				
					if($master)
					$master = $master ;
					else
					$master = $manager ;
				}
			elseif($user_type == '13' && $accounttype!='master'){
				$masterid = "SELECT masterid FROM #__cam_masteraccounts WHERE firmid=".$manager." "; 
				$db->setQuery($masterid);
				$master = $db->loadResult();
				
					if($master)
					$master = $master ;
					else
					$master = $manager ;
			}
			else{
			$master = $manager;
			}	
			return $master ;
	}
	//COmpleted
	
	function getvendorw9insdata($vendorid){
		$user =& JFactory::getUser();
		$db = & JFactory::getDBO();
		$w9_data ="SELECT * from #__cam_vendor_compliance_w9docs  WHERE vendor_id=".$vendorid." and w9_status != '-1' "; //validation to status of docs
		$db->Setquery($w9_data);
		$vendor_w9_data = $db->loadObjectList();
		return $vendor_w9_data;
		}
		
	function getw9insdata($indus,$managerid)
	{
	
	   	$db=&JFactory::getDBO();
		$user=&JFactory::getUser();
		$master =	$this->getmasterfirmaccount($managerid);
		$whers_cond = 'masterid='.$master.'';
	  $query = "SELECT * FROM #__cam_master_w9_standards WHERE ".$whers_cond." and industry_id=".$indus."  ";
		$db->setQuery($query);
		$data_pre = $db->loadObject();
		
		return $data_pre;
	}
	
	function getgeneralinsdata($indus,$managerid)
	{
		$db=&JFactory::getDBO();
		$user=&JFactory::getUser();
		$master =	$this->getmasterfirmaccount($managerid);
		
		$whers_cond = 'masterid='.$master.'';
		$query = "SELECT * FROM #__cam_master_generalinsurance_standards WHERE ".$whers_cond." and industry_id=".$indus."  ";
		$db->setQuery($query);
		$data_pre = $db->loadObject();
		return $data_pre;
	}
	function getautoinsdata($indus,$managerid)
	{
		$db=&JFactory::getDBO();
		$user=&JFactory::getUser();
		$master =	$this->getmasterfirmaccount($managerid);
		
		$whers_cond = 'masterid='.$master.'';
		$query = "SELECT * FROM #__cam_master_autoinsurance_standards WHERE ".$whers_cond." and industryid=".$indus."  ";
		$db->setQuery($query);
		$data_auto = $db->loadObject();
		return $data_auto;
	}
	function getworkinsdata($indus,$managerid)
	{
		$db=&JFactory::getDBO();
		$user=&JFactory::getUser();
		$master =	$this->getmasterfirmaccount($managerid);
		
		$whers_cond = 'masterid='.$master.'';
		$query = "SELECT * FROM #__cam_master_workers_standards WHERE ".$whers_cond." and industryid=".$indus."  ";
		$db->setQuery($query);
		$data_work = $db->loadObject();
		return $data_work;
	}
	function getumbrellainsdata($indus,$managerid) 
	{
		$db=&JFactory::getDBO();
		$user=&JFactory::getUser();
		$master =	$this->getmasterfirmaccount($managerid);
		
		$whers_cond = 'masterid='.$master.'';
		$query = "SELECT * FROM #__cam_master_umbrellainsurance_standards WHERE ".$whers_cond." and industryid=".$indus."  ";
		$db->setQuery($query);
		$data_umbrella = $db->loadObject();
		return $data_umbrella;
	}
	function getlicinsdata($indus,$managerid) 
	{
		$db=&JFactory::getDBO();
		$user=&JFactory::getUser();
		$master =	$this->getmasterfirmaccount($managerid);
		
		$whers_cond = 'masterid='.$master.'';
		$query = "SELECT * FROM #__cam_master_licinsurance_standards WHERE ".$whers_cond." and industryid=".$indus."  ";
		$db->setQuery($query);
		$data_lic = $db->loadObject();
		return $data_lic;
	}
	function getomiinsdata($indus,$managerid) 
	{
		$db=&JFactory::getDBO();
		$user=&JFactory::getUser();
		$master =	$this->getmasterfirmaccount($managerid);
		
		$whers_cond = 'masterid='.$master.'';
		$query = "SELECT * FROM #__cam_master_errors_omissions WHERE ".$whers_cond." and industryid=".$indus."  ";
		$db->setQuery($query);
		$data_omi = $db->loadObject();
		return $data_omi;
	}
	
	function getvendorgeneralinsdata($vendorid){
	
		$user =& JFactory::getUser();
		$db = & JFactory::getDBO();
		$gli_data ="SELECT * from #__cam_vendor_liability_insurence  WHERE vendor_id=".$vendorid." and GLI_end_date > ".date('Y-m-d')." and GLI_status != '-1' "; //validation to status of docs
		$db->Setquery($gli_data);
		$vendor_gli_data = $db->loadObjectList();
		return $vendor_gli_data;
		}
		
	function getvendorautoinsdata($vendorid){
		$user =& JFactory::getUser();
		$db = & JFactory::getDBO();
		$aip_data ="SELECT * from #__cam_vendor_auto_insurance WHERE vendor_id=".$vendorid." and aip_end_date > ".date('Y-m-d')." and aip_status != '-1' "; //validation to status of docs
		$db->Setquery($aip_data);
		$vendor_aip_data = $db->loadObjectList();
		return $vendor_aip_data;
		}	
	
	function getvendorworkinsdata($vendorid){
		$user =& JFactory::getUser();
		$db = & JFactory::getDBO();
		$wci_data ="SELECT * from #__cam_vendor_workers_companies_insurance WHERE vendor_id=".$vendorid." and ( WCI_end_date > ".date('Y-m-d')." || WCI_end_date = 'Does Not Expire' )and WCI_status != '-1' "; //validation to status of docs
		$db->Setquery($wci_data);
		$vendor_wci_data = $db->loadObjectList();
		return $vendor_wci_data;
		}
	function getvendorumbrellainsdata($vendorid){ 
		$user =& JFactory::getUser();
		$db = & JFactory::getDBO();
		$umb_data ="SELECT * from #__cam_vendor_umbrella_license WHERE vendor_id=".$vendorid." and UMB_expdate > ".date('Y-m-d')." and UMB_status != '-1' "; //validation to status of docs
		$db->Setquery($umb_data);
		$vendor_umb_data = $db->loadObjectList();
		return $vendor_umb_data;
		}
	function getvendorlicinsdata($vendorid){
		$user =& JFactory::getUser();
		$db = & JFactory::getDBO();
		$lic_data ="SELECT * from #__cam_vendor_professional_license WHERE vendor_id=".$vendorid." and PLN_expdate > ".date('Y-m-d')." and PLN_status != '-1' "; //validation to status of docs
		$db->Setquery($lic_data);
		$vendor_lic_data = $db->loadObjectList();
		return $vendor_lic_data;
		}
	function getvendoroccinsdata($vendorid){
		$user =& JFactory::getUser();
		$db = & JFactory::getDBO();
		$occ_data ="SELECT * from #__cam_vendor_occupational_license WHERE vendor_id=".$vendorid." and ( OLN_expdate > ".date('Y-m-d')." || OLN_expdate = 'Does Not Expire') and OLN_status != '-1' "; //validation to status of docs
		$db->Setquery($occ_data);
		$vendor_occ_data = $db->loadObjectList();
		return $vendor_occ_data;
		}
	
	function getvendoromiinsdata($vendorid){
		$user =& JFactory::getUser();
		$db = & JFactory::getDBO();
		$omi_data ="SELECT * from #__cam_vendor_errors_omissions_insurance WHERE vendor_id=".$vendorid." and OMI_end_date > ".date('Y-m-d')." and OMI_status != '-1' "; 
		$db->Setquery($omi_data);
		$vendor_omi_data = $db->loadObjectList();
		return $vendor_omi_data;
		}
			
			
	function getmasterglobals(){
		$db=&JFactory::getDBO();
		$user =& JFactory::getUser();
		 $master =	$this->getmasterfirmaccount($user->id);	
		
	    $whers_cond = 'masterid ='.$master.'';
		$query = "SELECT * FROM #__cam_master_generalinsurance_standards WHERE ".$whers_cond." ";
		$db->setQuery($query);
		$data_pre = $db->loadObjectList();
		
		$query = "SELECT * FROM #__cam_master_autoinsurance_standards WHERE ".$whers_cond."";
		$db->setQuery($query);
		$data_auto = $db->loadObjectList();
		
		$query = "SELECT * FROM #__cam_master_workers_standards WHERE ".$whers_cond."";
		$db->setQuery($query);
		$data_work = $db->loadObjectList();

		$query = "SELECT * FROM #__cam_master_umbrellainsurance_standards WHERE ".$whers_cond." ";
		$db->setQuery($query);
		$data_umbrella = $db->loadObjectList();

		$query = "SELECT * FROM #__cam_master_licinsurance_standards WHERE ".$whers_cond." ";
		$db->setQuery($query);
		$data_lic = $db->loadObjectList();
		
		$query = "SELECT * FROM #__cam_master_errors_omissions WHERE ".$whers_cond." ";
		$db->setQuery($query);
		$data_omi = $db->loadObjectList();
		
			if( $data_w9 || $data_pre || $data_auto || $data_work || $data_umbrella || $data_lic || $data_omi ){
				$message = 'success';
			}
			else{
				$message = 'fail';
			}	
     
		return $message ;
		}	
		
		function getexcludevendors(){
	
 		$managertype = JRequest::getVar( 'managertype','');
 		$industrytype = JRequest::getVar( 'industrytype','');
 		$state = JRequest::getVar( 'state','');	
 		$county = JRequest::getVar( 'divcounty','');	
		if(!$state){
		$county = '';
		}		
		else{
		$county = $county;
		}		
 		//echo '<pre>'; print_r($_REQUEST); 
		$post = JRequest::get('request');
		$db = & JFactory::getDBO();
		$user =& JFactory::getUser();
		$usercreator = $user->id;
	 	$query = "SELECT V.company_name,V.city,V.state,V.company_phone,V.phone_ext,V.fax_id,V.tax_id,U.vendortype,U.vid,U.v_id,U.status,U.inhousevendors, W.name, W.lastname, W.id, W.subscribe, W.subscribe_type from #__vendor_inviteinfo as U, #__cam_vendor_company as V, #__users as W where LOWER(U.inhousevendors) = (W.email) and V.user_id=W.id and W.block='0' AND (U.exclude='yes' || U.search='yes' ) and U.userid=".$usercreator." ".$where." ";
		$db->setQuery($query);
		$result = $db->loadObjectList();
		
			//To get the vendors based on industry
			if($industrytype){
			$checkvendors = "SELECT distinct(user_id) FROM #__cam_vendor_industries where industry_id=".$industrytype." ";
			$db->setQuery($checkvendors);
			$accpetvendor = $db->loadObjectList();
			
			if($result){
				foreach($result as $vid){
				$existing[] = $vid->v_id;
				}
			}	
			if($accpetvendor){
				foreach($accpetvendor as $inids){
				$indusids[] = $inids->user_id;
				}
			}
			if($indusids != '' && $existing!= ''){
			$common = array_intersect($indusids, $existing) ;
			}
			if($common){
			$indus_condition = implode(',',$common) ;
			}
			
			if($indus_condition)
			$query = $query . "AND V.user_id IN ("  . $indus_condition . ")" ;
			else
			$query = $query . "AND V.user_id IN ('  ')" ;
			}	
			
			if($county){
			$checkvendors1 = "SELECT distinct(user_id) FROM #__vendor_state_counties where county_id=".$county." ";
			$db->setQuery($checkvendors1);
			$accpetvendor1 = $db->loadObjectList();
			
			if($result){
				foreach($result as $vid){
				$existing[] = $vid->v_id;
				}
			}	
			if($accpetvendor1){
				foreach($accpetvendor1 as $county){
				$countys[] = $county->user_id;
				}
			}
			if($countys != '' && $existing!= ''){
			$common = array_intersect($countys, $existing) ;
			}
			if($common){
			$county_condition = implode(',',$common) ;
			}
			if($county_condition)
			$query = $query . "AND V.user_id IN ("  . $county_condition . ")" ;
			else
			$query = $query . "AND V.user_id IN ('')" ;
			}	
			
			//If selecting state and not selecting ny county
			if($state && !$county){
			 $checkvendorsstate = "SELECT distinct(user_id) FROM #__vendor_state_counties where state_id='".$state."' ";
			$db->setQuery($checkvendorsstate);
			$statevendors = $db->loadObjectList();
			if($result){
				foreach($result as $vid){
				$existing[] = $vid->v_id;
				}
			}	
			if($statevendors){
				foreach($statevendors as $county){
				$countys[] = $county->user_id;
				}
			}
			if($countys != '' && $existing!= ''){
			$common = array_intersect($countys, $existing) ;
			}
			if($common){
			$county_condition = implode(',',$common) ;
			}
			if($county_condition)
			$query = $query . "AND V.user_id IN ("  . $county_condition . ")" ;
			else
			$query = $query . "AND V.user_id IN (' ')" ;
			}
			//Completed
		//echo $query;
		$query = $query . " group by W.id" ;
		$db->setQuery($query);
		$result = $db->loadObjectList();
		
		for( $p=0; $p<count($result); $p++ ){
			$c_status =	$this->checkcompliancestatus($result[$p]->id);
			$result[$p]->cstatus = $c_status ;
		}
		
		for( $s=0; $s<count($result); $s++ ){
		$only_state = $result[$s]->cstatus ;
					if($only_state){
						foreach($only_state as $statues){
							$final_state[] = $statues->status;
								if(in_array('fail',$final_state)){
									$result[$s]->final_status = 'fail' ;
								}
								else{
									$result[$s]->final_status = 'success' ;
								}
						} 
						$final_state = '';
					}
			
		}
		
		// Adding dispaly only verified vendors
		$user =& JFactory::getUser();
		$masterid = $this->getmasterfirmaccount($user->id);
		$act_type = "SELECT acount_type FROM #__cam_master_compliancereport where masterid ='".$masterid."' ";
		$db->setQuery($act_type);
		$act_type = $db->loadResult();
		
		
		for( $v=0; $v<count($result); $v++ ){
		$subscribe_type = "SELECT subscribe_type FROM #__users where id ='".$result[$v]->id."'";
		$db->setQuery($subscribe_type);
		$subscribe_type = $db->loadResult();
		if( $act_type == '1' && ( $subscribe_type == 'free' || $subscribe_type == '' ) )
			$result[$v]->acount_type = 'show' ;
		else	
			$result[$v]->acount_type = 'hide' ;
		}
		
		
		return $result;
	
	}	
	
	
	//Function to get all properties
	function getallproperties(){
	$user =& JFactory::getUser();
	$db=&JFactory::getDBO();
			if($user->user_type == 13 && $user->accounttype != 'master') {
			$totalmanagers = $this->gettotalmanagersofcamfirm();
			$whereas[] = "U.`property_manager_id` IN (".implode( ' , ' , $totalmanagers).") ";
			}
			else if($user->dmanager == 'yes'){
			$total_mangrs = $this->gettotalmanagersofdm() ;	
			$whereas[] = "U.`property_manager_id` IN (".implode( ' , ' , $total_mangrs).") ";
			}
			else if($user->user_type ==13 && $user->accounttype == 'master')
			{
			$total_mangrs = $this->getmastermanagers() ;
			$whereas[] = "U.`property_manager_id` IN (".implode( ' , ' , $total_mangrs).") ";
			}
			else{
			$whereas[] = "U.`property_manager_id` IN (".$user->id.") ";
			}
			$query = "SELECT U.*, V.salutation,V.name,V.lastname FROM #__cam_property as U, #__users as V where U.`property_manager_id` = V.`id` and publish!=1 "; 
			if($whereas) {
				$query .= " AND ".implode( ' AND ', $whereas )."   ".$sorting." ";
			}		
		$db->Setquery($query);
		$properties = $db->loadObjectList();
		
		return $properties;
 
	}
	//Completed
	
	function gettotalmanagersofcamfirm(){
	$db = JFactory::getDBO();
	$user = JFactory::getUser();
	$query = "SELECT id FROM #__cam_camfirminfo WHERE cust_id=".$user->id;
	$db->setQuery($query);
	$comp_id = $db->loadResult();
	$userid=array($user->id);
	$query_mans = "SELECT cust_id from #__cam_customer_companyinfo where comp_id = ".$comp_id." ";
	$db->setQuery($query_mans);
    $Managers_list = $db->loadObjectList();
	
	foreach( $Managers_list as $cf_mans)
		{
			$total_mangrs[] = $cf_mans->cust_id ;
		}
	if($total_mangrs){
		$totalcust_id1 = array_merge($userid,$total_mangrs); 
	}
	else{
		$totalcust_id1[] = $user->id; 
	}

	return $totalcust_id1; 	
	}
	
	function gettotalmanagersofdm(){
	$db = JFactory::getDBO();
	$user = JFactory::getUser();
	$dmmanagers = "SELECT DISTINCT managerid FROM #__cam_invitemanagers WHERE dmanager=".$user->id;
	$db->setQuery($dmmanagers);
	$dm_managers = $db->loadObjectlist();
		for($i=0; $i<count($dm_managers);$i++){
			$query = "SELECT id from #__users where id='".$dm_managers[$i]->managerid."' and block=0 " ;
			$db->setQuery($query);
			$total_mangrs[]=$db->loadResult();
			}
			/*if($Managers_list){
	foreach( $Managers_list as $cf_mans)
		{
			$total_mangrs[] = $cf_mans->id ;
		}
		}*/
	$userid=array($user->id);		
	if($total_mangrs){
		$totalcust_id1 = array_merge($userid,$total_mangrs); 
	}
	else{
		$totalcust_id1[] = $user->id; 
	}
	 return $totalcust_id1; 		
	}
	
	function getmastermanagers(){
			$user =& JFactory::getUser();
			$db=&JFactory::getDBO();
			$sql1 = "SELECT firmid from #__cam_masteraccounts where masterid=".$user->id." ";
			$db->Setquery($sql1);
			$subfirms = $db->loadObjectlist();
			
	if($subfirms)
		{
			for( $a=0; $a<count($subfirms); $a++ )
				{
					$firmid1[] = $subfirms[$a]->firmid;
					$sql = "SELECT id from #__cam_camfirminfo where cust_id=".$subfirms[$a]->firmid." ";
					$db->Setquery($sql);
					$companyid[] = $db->loadResult();
											
				}
				
        }
			
	if($companyid)
		{
         	for( $c=0; $c<count($companyid); $c++ )
				{
					$sql_cid = "SELECT cust_id from #__cam_customer_companyinfo where comp_id=".$companyid[$c]." ";
					$db->Setquery($sql_cid);
					$managerids = $db->loadObjectList();
						if($managerids) {
							foreach( $managerids as $last_mans){
								$total_mangrs[] = $last_mans->cust_id ;
							}
						}
               }
        }
	
	if($firmid1 && $total_mangrs )
		{
            $total_mangrs = array_merge($total_mangrs,$firmid1); 
        }
        if($firmid1){
            for( $d=0; $d<count($firmid1); $d++ ){
        $query = "SELECT id FROM #__cam_camfirminfo WHERE cust_id=".$firmid1[$d];
	$db->setQuery($query);
	$comp_id = $db->loadResult();
	$userid=array($user->id);
	$query_mans = "SELECT cust_id from #__cam_customer_companyinfo where comp_id = ".$comp_id." ";
	$db->setQuery($query_mans);
        $Managers_list1 = $db->loadObjectList();
                if($Managers_list1) {
                        foreach( $Managers_list1 as $Managers_list2){
                                $Managers_list[] = $Managers_list2->cust_id ;
                        }
                }
            }
            if($Managers_list){
        $total_mangrs = array_merge($Managers_list,$firmid1);
            } else {
         $total_mangrs = $firmid1;        
            }
        }
	/*if($firmid1){
            $total_mangrs = $firmid1;
        }
         */
        $userid=array($user->id);
        if($total_mangrs){
        $total_mangrs = array_merge($userid,$total_mangrs); 
		}
		else{
		$total_mangrs[] = $user->id; 
		}
		 
		return $total_mangrs;
	}
	function getallbasicjobs(){
		$db =& JFactory::getDBO();
		$user = JFactory::getUser();
		if($user->user_type == '13' && $user->accounttype == 'master') {
			$total_mangrs = $this->getmastermanagers_invites() ;
			$whereas[] = "cust_id IN (".implode( ' , ' , $total_mangrs).") ";
		}
		else if($user->user_type == '13' && $user->accounttype != 'master'){
			$totalmanagers = $this->gettotalmanagersofcamfirm_invites();
			$whereas[] = "cust_id IN (".implode( ' , ' , $totalmanagers).") ";
		}
		else if($user->user_type == '12' && $user->dmanager == 'yes'){
			$total_mangrs = $this->gettotalmanagersofdm_invites() ;	
			$whereas[] = "cust_id IN (".implode( ' , ' , $total_mangrs).") ";
		}
		else{
			$total_mangrs[] = $user->id ;
			$whereas[] = "cust_id IN (".implode( ' , ' , $total_mangrs).") ";
		}
		$sql_basic = "SELECT projectName, id FROM #__cam_rfpinfo where " . implode( ' AND ', $whereas ) . " AND jobtype='yes' AND rfp_type='rfp' order by createdDate DESC";
		$db->Setquery($sql_basic);
		$basicjobs = $db->loadObjectList();
		return $basicjobs;
	}
	
	function getmastermanagers_invites(){
			$user =& JFactory::getUser();
			$db=&JFactory::getDBO();
			$sql1 = "SELECT firmid from #__cam_masteraccounts where masterid=".$user->id." ";
			$db->Setquery($sql1);
			$subfirms = $db->loadObjectlist();
			
	if($subfirms)
		{
			for( $a=0; $a<count($subfirms); $a++ )
				{
					$firmid1[] = $subfirms[$a]->firmid;
					$sql = "SELECT id from #__cam_camfirminfo where cust_id=".$subfirms[$a]->firmid." ";
					$db->Setquery($sql);
					$companyid[] = $db->loadResult();
											
				}
				
        }
			
	if($companyid)
		{
         	for( $c=0; $c<count($companyid); $c++ )
				{
					$sql_cid = "SELECT cust_id from #__cam_customer_companyinfo where comp_id=".$companyid[$c]." ";
					$db->Setquery($sql_cid);
					$managerids = $db->loadObjectList();
						if($managerids) {
							foreach( $managerids as $last_mans){
								$total_mangrs[] = $last_mans->cust_id ;
							}
						}
               }
        }
		
	if($firmid1 && $total_mangrs )
		{
            $total_mangrs = array_merge($total_mangrs,$firmid1); 
        }
	if($firmid1){
            $total_mangrs = $firmid1;
        }	
        $userid=array($user->id);
        if($total_mangrs){
        $total_mangrs = array_merge($userid,$total_mangrs); 
		}
		else{
		$total_mangrs[] = $user->id; 
		}
		
		return $total_mangrs;
	}
	
	function gettotalmanagersofcamfirm_invites(){
	$db = JFactory::getDBO();
	$user = JFactory::getUser();
	$query = "SELECT id FROM #__cam_camfirminfo WHERE cust_id=".$user->id;
	$db->setQuery($query);
	$comp_id = $db->loadResult();
	$userid=array($user->id);
	$query_mans = "SELECT cust_id from #__cam_customer_companyinfo where comp_id = ".$comp_id." ";
	$db->setQuery($query_mans);
    $Managers_list = $db->loadObjectList();
	
	foreach( $Managers_list as $cf_mans)
		{
			$total_mangrs[] = $cf_mans->cust_id ;
		}
	if($total_mangrs){
		$totalcust_id1 = array_merge($userid,$total_mangrs); 
	}
	else{
		$totalcust_id1[] = $user->id; 
	}

	return $totalcust_id1; 	
	}
	
	function gettotalmanagersofdm_invites(){
	$db = JFactory::getDBO();
	$user = JFactory::getUser();
	$dmmanagers = "SELECT DISTINCT managerid FROM #__cam_invitemanagers WHERE dmanager=".$user->id;
	$db->setQuery($dmmanagers);
	$dm_managers = $db->loadObjectlist();
		for($i=0; $i<count($dm_managers);$i++){
			$query = "SELECT id from #__users where id='".$dm_managers[$i]->managerid."' and block=0 " ;
			$db->setQuery($query);
			$total_mangrs[]=$db->loadResult();
			}
			/*if($Managers_list){
	foreach( $Managers_list as $cf_mans)
		{
			$total_mangrs[] = $cf_mans->id ;
		}
		}*/
	$userid=array($user->id);		
	if($total_mangrs){
		$totalcust_id1 = array_merge($userid,$total_mangrs); 
	}
	else{
		$totalcust_id1[] = $user->id; 
	}
	 return $totalcust_id1; 		
	}
	
	//Function to get permission
	function getpermission($masterid){
		$db = JFactory::getDBO();
		$permission = "SELECT permission FROM #__cam_master_email_compliance_status WHERE masterid=".$masterid;
		$db->setQuery($permission);
		$perms = $db->loadResult();
		return $perms ;
	}	
	//Completed
	
	function getpermissionstandards(){
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$masteraccount = $this->getmasterfirmaccount($user->id);
		
		if($user->user_type =='16')
		{
		$mangerids = $this->getallmanageracounts();
		if($mangerids)
		$manager_ids = implode(',',$mangerids);
		
		$whers_cond = 'masterid IN ('.$manager_ids.')';
		}
		else
		$whers_cond = 'masterid='.$masteraccount.'';
		$permission = "SELECT permission FROM #__cam_master_email_compliance_status WHERE ".$whers_cond."";
		$db->setQuery($permission);
		$perms = $db->loadResult();
		
		return $perms ;
	}
	
	
	// Functio to get all managers under the manager
	function getallmanagersrecommend(){
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
			if($user->user_type == 13 && $user->accounttype != 'master') {
			$totalmanagers = $this->gettotalmanagersofcamfirmrecsadmin();
			$whereas[] = "id IN (".implode( ' , ' , $totalmanagers).") ";
			}
			else if($user->dmanager == 'yes'){
			$total_mangrs = $this->gettotalmanagersofcamfirmrecs() ;	
			$whereas[] = "id IN (".implode( ' , ' , $total_mangrs).") ";
			}
			else if($user->user_type ==13 && $user->accounttype == 'master')
			{
			$total_mangrs = $this->getmastermanagersrecs() ;
			$whereas[] = "id IN (".implode( ' , ' , $total_mangrs).") ";
			}
			else{
			$totalmanagers = $this->gettotalmanagersofcamfirmrecs();
			$whereas[] = "id IN (".implode( ' , ' , $totalmanagers).") ";
			}
			
			$query = "SELECT id, name, lastname FROM #__users  where block!=1 "; 
			if($whereas) {
				$query .= " AND ".implode( ' AND ', $whereas )."   ".$sorting." ";
			}
			$db->setQuery($query);
			$mans = $db->loadObjectList();
			return $mans ;
	}
	//Completed
	
	function getmastermanagersrecs(){
			$user =& JFactory::getUser();
			$db=&JFactory::getDBO();
			$sql1 = "SELECT firmid from #__cam_masteraccounts where masterid=".$user->id." ";
			$db->Setquery($sql1);
			$subfirms = $db->loadObjectlist();
			
	if($subfirms)
		{
			for( $a=0; $a<count($subfirms); $a++ )
				{
					$firmid1[] = $subfirms[$a]->firmid;
					$sql = "SELECT id from #__cam_camfirminfo where cust_id=".$subfirms[$a]->firmid." ";
					$db->Setquery($sql);
					$companyid[] = $db->loadResult();
											
				}
				
        }
			
	if($companyid)
		{
         	for( $c=0; $c<count($companyid); $c++ )
				{
					$sql_cid = "SELECT cust_id from #__cam_customer_companyinfo where comp_id=".$companyid[$c]." ";
					$db->Setquery($sql_cid);
					$managerids = $db->loadObjectList();
						if($managerids) {
							foreach( $managerids as $last_mans){
								$total_mangrs[] = $last_mans->cust_id ;
							}
						}
               }
        }
	
	if($firmid1 && $total_mangrs )
		{
            $total_mangrs = array_merge($total_mangrs,$firmid1); 
        }
        if($firmid1){
            for( $d=0; $d<count($firmid1); $d++ ){
        $query = "SELECT id FROM #__cam_camfirminfo WHERE cust_id=".$firmid1[$d];
	$db->setQuery($query);
	$comp_id = $db->loadResult();
	$userid=array($user->id);
	$query_mans = "SELECT cust_id from #__cam_customer_companyinfo where comp_id = ".$comp_id." ";
	$db->setQuery($query_mans);
        $Managers_list1 = $db->loadObjectList();
                if($Managers_list1) {
                        foreach( $Managers_list1 as $Managers_list2){
                                $Managers_list[] = $Managers_list2->cust_id ;
                        }
                }
            }
            if($Managers_list){
        $total_mangrs = array_merge($Managers_list,$firmid1);
            } else {
         $total_mangrs = $firmid1;        
            }
        }
	/*if($firmid1){
            $total_mangrs = $firmid1;
        }
         */
        $userid=array($user->id);
        if($total_mangrs){
        $total_mangrs = $total_mangrs; 
		}
		else{
		$total_mangrs[] = ''; 
		}
		 
		return $total_mangrs;
	}
	
	function gettotalmanagersofcamfirmrecsadmin(){
	$db = JFactory::getDBO();
	$user = JFactory::getUser();
	$query = "SELECT id FROM #__cam_camfirminfo WHERE cust_id=".$user->id;
	$db->setQuery($query);
	$comp_id = $db->loadResult();
	$userid=array($user->id);
	$query_mans = "SELECT cust_id from #__cam_customer_companyinfo where comp_id = ".$comp_id." ";
	$db->setQuery($query_mans);
    $Managers_list = $db->loadObjectList();
	
	foreach( $Managers_list as $cf_mans)
		{
			$total_mangrs[] = $cf_mans->cust_id ;
		}
	if($total_mangrs){
		$totalcust_id1 = $total_mangrs; 
	}
	else{
		$totalcust_id1[] = ''; 
	}

	return $totalcust_id1; 	
	}
	
	function gettotalmanagersofcamfirmrecs(){
	$db = JFactory::getDBO();
	$user = JFactory::getUser();
	// get camfirm admin of this manager
	$camadmin = "SELECT comp_id from #__cam_customer_companyinfo where cust_id = ".$user->id." ";
	$db->setQuery($camadmin);
    $companyid_man = $db->loadResult();
	
	$query_admin = "SELECT cust_id FROM #__cam_camfirminfo WHERE id=".$companyid_man;
	$db->setQuery($query_admin);
	$adminid = $db->loadResult();
	
	$query = "SELECT id FROM #__cam_camfirminfo WHERE cust_id=".$adminid;
	$db->setQuery($query);
	$comp_id = $db->loadResult();
	
	$userid=array($adminid);
	$query_mans = "SELECT cust_id from #__cam_customer_companyinfo where comp_id = ".$companyid_man." and cust_id != ".$user->id."";
	$db->setQuery($query_mans);
    $Managers_list = $db->loadObjectList();
	
	if($Managers_list)
	{
	foreach ($Managers_list as $cf_mans)
		{
			$total_mangrs[] = $cf_mans->cust_id ;
		}
		}
	if($total_mangrs){
		$totalcust_id1 = $total_mangrs; 
	}
	else{
		$totalcust_id1[] = ''; 
	}

	return $totalcust_id1; 	
	}
	
	// Function to vendor user id from invitation table
	function getvendorid($inviteid){
		$db = JFactory::getDBO();
		$query = "SELECT v_id FROM #__vendor_inviteinfo  where vid=".$inviteid." "; 
			$db->setQuery($query);
			$vendorid = $db->loadResult();
			return $vendorid ;
	}	
	//COmpleted
	//Function to save recommendations
	function save_rec($data){
		$row =& $this->getTable('recommendations');
		jimport('joomla.user.helper');
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		return true;
	}
	//Function to check previous record or not
	function checkprevious($sender, $manager, $vendor){
		$db = JFactory::getDBO();
		$query = "SELECT id FROM #__cam_manager_recommends where sender =".$sender." and managerid =".$manager." and vendorid =".$vendor." "; 
		$db->setQuery($query);
		$existid = $db->loadResult();
		return $existid ;
	}
	//Function to display all recommendations
	
	function getallrecommendations(){
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$query = "SELECT * FROM #__cam_manager_recommends where managerid =".$user->id." and display='0' "; 
		$db->setQuery($query);
		$alldata = $db->loadObjectList();
			for( $a=0; $a<count($alldata); $a++ ){
				$query = "SELECT name, lastname FROM #__users where id =".$alldata[$a]->sender." "; 
				$db->setQuery($query);
				$sendername = $db->loadObject();
				$alldata[$a]->sendername = $sendername->name.'&nbsp;'.$sendername->lastname ;
				
				$query_v = "SELECT company_name FROM #__cam_vendor_company where user_id =".$alldata[$a]->vendorid." "; 
				$db->setQuery($query_v);
				$vendor_name = $db->loadResult();
				$alldata[$a]->vendorname = $vendor_name ;
			}
		return $alldata ;
	}
	function getvendorsubscribe($vendorid){
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$query_sub = "SELECT subscribe_type FROM #__users where id =".$vendorid." "; 
		$db->setQuery($query_sub);
		$subscribe = $db->loadResult();
		return $subscribe;
	}
	
	function getblockvendors(){
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$query = "SELECT block, block_complinace FROM #__cam_master_block_users where masterid =".$user->id." "; 
		$db->setQuery($query);
		$status = $db->loadObject();
		return $status;
	}
	
	function getvendoremail($vendorid){
	
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
	 $query = "SELECT u.email, u.ccemail, v.company_name FROM #__users as u, #__cam_vendor_company as v where u.id =".$vendorid." and u.id=v.user_id"; 
		$db->setQuery($query);
		$vdata = $db->loadObject();
		
		return $vdata;
	}
	function getmailbody(){
		$db = JFactory::getDBO();
		$body_msg = "SELECT introtext  FROM #__content where id='294'";
		$db->setQuery($body_msg);
		$msg=$db->loadResult();
		return $msg;
	}
	function getmanagercompanyname(){
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$getc = "SELECT comp_name FROM #__cam_customer_companyinfo where cust_id =".$user->id."  ";
		$db->setQuery($getc);
		$companyname = $db->loadResult();
		return $companyname;
	}
	function getmanagermailbody(){
		$db = JFactory::getDBO();
		$body_msg = "SELECT introtext  FROM #__content where id='295'";
		$db->setQuery($body_msg);
		$msg=$db->loadResult();
		return $msg;
	}
	//Function to get all industried what vendor served
	function getvendorinformation($vendorid){
		$db = JFactory::getDBO();
		//Get vendor rating
		$ratecount = "SELECT V.apple FROM `#__cam_vendor_proposals` as U, `#__cam_rfpinfo` as V where U.proposedvendorid=".$vendorid." and V.apple!=0 and V.apple_publish=0 and U.proposaltype='Awarded' and U.rfpno = V.id ";
	$db->setQuery($ratecount);
	$count_vs = $db->loadObjectList();
	
		$camratingf = "SELECT camrating FROM `#__users` where id=".$vendorid."  ";
		$db->setQuery($camratingf);
		$cam_ratingf = $db->loadResult();
		
	if($count_vs){
		for($c=0; $c<count($count_vs); $c++){
		$total = $total + $count_vs[$c]->apple ;
		}
		$camrating = "SELECT camrating FROM `#__users` where id=".$vendorid."  ";
		$db->setQuery($camrating);
		$cam_rating = $db->loadResult();
		
		if($cam_rating) {
		$total = $total + $cam_rating ;
		$count = count($count_vs) + 1;
		$avgrating = $total  / $count;	
		$rating =  round($avgrating, 1); 
		}
		else {
		$avgrating = $total  / count($count_vs);	
		$rating =  round($avgrating, 1); 
		}
	}
	else if($cam_ratingf){
	$rating = round($cam_ratingf, 1); 
	}
	else{
	$rating = 4 ;
	} 
	
	//Get Vendor states
	$query_bstates = "SELECT V.state_id FROM #__vendor_state_counties as U, #__state as V where U.user_id=".$vendorid." and U.state_id=V.state_id GROUP BY V.state_name HAVING COUNT(*)>0";
		$db->setQuery($query_bstates);
		$result_bstates = $db->loadResultarray();
		$states = implode($result_bstates,',');
		$vendorinfor = $rating.'----'.$states ;
		
		return $vendorinfor;
	}
	
	//Function to get industries served
	function getvendorindustries($vendorid){
		$db = JFactory::getDBO();
		$query = "SELECT u.industry_name as industry FROM #__cam_industries as u, #__cam_vendor_industries as v where v.user_id =".$vendorid." and v.industry_id=u.id"; 
		$db->setQuery($query);
		$industry_data = $db->loadObjectList();
		return $industry_data;
		}
	
	//Function to get corporate vendors into JSON array
	function getcorporate_json()
	{
		$db = & JFactory::getDBO();	
		$user =& JFactory::getUser();		
		$post = JRequest::get('request');
		$usercreator = $this->getmasterfirmaccount($user->id);
	 	$query = "SELECT W.id, V.company_name as companyName, V.company_address as address, V.company_phone as companyPhone, V.phone_ext, V.alt_phone as alternatePhone, V.alt_phone_ext, W.cellphone, V.city, V.state, V.fax_id, V.tax_id, U.vid, W.name, W.lastname, W.email, W.subscribe, W.subscribe_type, V.image as company_logo from #__vendor_inviteinfo as U, #__cam_vendor_company as V, #__users as W where LOWER(U.inhousevendors) = (W.email) and V.user_id=W.id and W.block='0' AND U.exclude!='yes' and U.search!='yes'and W.search='' and U.userid=".$usercreator." GROUP BY W.id ";
		$db->setQuery($query);
		$result = $db->loadObjectList();
		
		for( $p=0; $p<count($result); $p++ ){
			$c_status =	$this->checkcompliancestatus($result[$p]->id);
			$result[$p]->cstatus = $c_status ;
		}
	
		for( $s=0; $s<count($result); $s++ ){
		$only_state = $result[$s]->cstatus ;
					if($only_state){
						foreach($only_state as $statues){
							$final_state[] = $statues->status;
							$med_fina_state = '';
							$med_fina_state = array_unique($final_state);
								if( count($med_fina_state) == 2 ) {
									$result[$s]->compliance = 'Compliant & Noncompliant' ;
								}
								if( count($med_fina_state) == 1 &&  $med_fina_state[0] == 'fail') {
									$result[$s]->compliance = 'Noncompliant' ;
								}
								if( count($med_fina_state) == 1 &&  $med_fina_state[0] == 'success' ){
									$result[$s]->compliance = 'Compliant' ;
									
									$masteraccount = $this->getmasterfirmaccount($user->id);
										$sql_terms = "SELECT termsconditions FROM #__cam_vendor_aboutus WHERE vendorid=".$masteraccount." "; 
										$db->setQuery($sql_terms);
										$terms_exist = $db->loadResult();
										
										if($terms_exist == '1'){
										$sql = "SELECT accepted FROM #__cam_vendor_terms WHERE vendorid=".$result[$s]->id." and masterid=".$masteraccount." "; 
										$db->setQuery($sql);
										$terms = $db->loadResult();
											if($terms == '1'){
											$result[$s]->compliance = 'Compliant' ;
											}
											else{
											$result[$s]->compliance = 'Noncompliant' ;
											}
										}
										else{
										
										}
										
										
								}
						} 
						$final_state = '';
						$med_fina_state = '';
					}
		// Adding block unverified vendor rule
		$user =& JFactory::getUser();
		$masterid = $this->getmasterfirmaccount($user->id);
		$block_per = "SELECT id FROM #__cam_master_block_users where masterid ='".$masterid."' ";
		$db->setQuery($block_per);
		$blockid = $db->loadResult();
		if( $blockid )
			$result[$s]->block_unverified = 'hide' ;
		else	
			$result[$s]->block_unverified = 'show' ;
		//Completed
		
	// Checking vendor is subscribed or not
	if( $result[$s]->subscribe == 'yes' && $result[$s]->subscribe_type == 'free' )
		$totalcompanies[$s]->verified = 'Unverified' ;
	else if( $result[$s]->subscribe == 'yes' && $result[$s]->subscribe_type != 'free' )	
		$result[$s]->verified = 'Verified' ;
	else
		$result[$s]->verified = 'Not subscribed' ;
	if( $result[$s]->company_logo )
	$result[$s]->company_logo = JURI::base().'components/com_camassistant/assets/images/vendors/'.$result[$s]->company_logo ;	
	else
	$result[$s]->company_logo = '' ;
			
	// To get the vendor industries
	$vendor_indus = $this->getvendorindustries($result[$s]->id);	
	$result[$s]->industriesServed = $vendor_indus ;
	//Adding vendor rating, states
	$vendor_cinfo = $this->getvendorinformation($result[$s]->id);
	$data_com = explode('----',$vendor_cinfo);
	$result[$s]->rating = $data_com[0] ;	
	$result[$s]->state = $data_com[1] ;	
		}
	return $result; 		
	
	}
	
	//Function to get Co-Workers Vendors
	
	function getcoworkers_json()
	{
		$post = JRequest::get('request');
		$db = & JFactory::getDBO();
		$user =& JFactory::getUser();
		if($user->user_type == 12){
		$getc = "SELECT comp_id FROM #__cam_customer_companyinfo where cust_id =".$user->id."  ";
		$db->setQuery($getc);
		$companyid = $db->loadResult();
		}
		else{
		$getc = "SELECT id FROM #__cam_camfirminfo where cust_id =".$user->id."  ";
		$db->setQuery($getc);
		$companyid = $db->loadResult();
		}	

	 	$query = "SELECT W.id, V.company_name as companyName, V.company_address as address, V.company_phone as companyPhone, V.phone_ext, V.alt_phone as alternatePhone, V.alt_phone_ext, W.cellphone, V.city, V.state,  V.fax_id, V.tax_id, W.name, W.lastname, W.email, W.subscribe, W.subscribe_type, V.image as company_logo from #__vendor_inviteinfo as U, #__cam_vendor_company as V, #__users as W where LOWER(U.inhousevendors) = (W.email) and V.user_id=W.id and W.block=0 and U.taxid=".$companyid." and W.search='' and U.userid != ".$user->id." GROUP BY W.id";
		
		
		//If user is master
		if($user->user_type == 13 && $user->accounttype == 'master') {
			$sql1 = "SELECT firmid from #__cam_masteraccounts where masterid=".$user->id." ";
			$db->Setquery($sql1);
			$subfirms = $db->loadObjectlist();
		if($subfirms)
		{
			$companyid = '';
			foreach($subfirms as $firmid)
				{
					$sql = "SELECT id from #__cam_camfirminfo where cust_id=".$firmid->firmid." ";
					$db->Setquery($sql);
					$companyid[] = $db->loadResult();
				}
			$cidarr = implode(',',$companyid);	
        }
		
		$query = "SELECT W.id, V.company_name as companyName, V.company_address as address, V.company_phone as companyPhone, V.phone_ext, V.alt_phone as alternatePhone, V.alt_phone_ext, W.cellphone, V.city, V.state,  V.fax_id, V.tax_id, W.name, W.lastname, W.email, W.subscribe, W.subscribe_type from #__vendor_inviteinfo as U, #__cam_vendor_company as V, #__users as W where LOWER(U.inhousevendors) = (W.email) and V.user_id=W.id and U.taxid IN(".$cidarr.") and W.search='' and U.userid != ".$user->id." GROUP BY W.id ";
		}	
		$db->setQuery($query);
		$result = $db->loadObjectList();
	
		for( $p=0; $p<count($result); $p++ ){
			$c_status =	$this->checkcompliancestatus($result[$p]->id);
			$result[$p]->cstatus = $c_status ;
		}
		
		for( $s=0; $s<count($result); $s++ ){
		$only_state = $result[$s]->cstatus ;
					if($only_state){
						foreach($only_state as $statues){
							$final_state[] = $statues->status;
							$med_fina_state = '';
							$med_fina_state = array_unique($final_state);
							
								if( count($med_fina_state) == 2 ) {
									$result[$s]->compliance = 'Compliant & Noncompliant' ;
								}
								if( count($med_fina_state) == 1 &&  $med_fina_state[0] == 'fail') {
									$result[$s]->compliance = 'Noncompliant' ;
								}
								if( count($med_fina_state) == 1 &&  $med_fina_state[0] == 'success' ){
										$result[$s]->compliance = 'Compliant' ;
										$masteraccount = $this->getmasterfirmaccount($user->id);
										$sql_terms = "SELECT termsconditions FROM #__cam_vendor_aboutus WHERE vendorid=".$masteraccount." "; 
										$db->setQuery($sql_terms);
										$terms_exist = $db->loadResult();
										
										if($terms_exist == '1'){
										$sql = "SELECT accepted FROM #__cam_vendor_terms WHERE vendorid=".$result[$s]->id." and masterid=".$masteraccount." "; 
										$db->setQuery($sql);
										$terms = $db->loadResult();
											if($terms == '1'){
											$result[$s]->compliance = 'Compliant' ;
											}
											else{
											$result[$s]->compliance = 'Noncompliant' ;
											}
										}
										else{
										
										}
										
											
								}
						} 
						$final_state = '';
						$med_fina_state = '';
					}
		// Adding block unverified vendor rule
	$user =& JFactory::getUser();
	$masterid = $this->getmasterfirmaccount($user->id);
	$block_per = "SELECT id FROM #__cam_master_block_users where masterid ='".$masterid."' ";
	$db->setQuery($block_per);
	$blockid = $db->loadResult();
	if( $blockid )
		$result[$s]->block_unverified = 'hide' ;
	else	
		$result[$s]->block_unverified = 'show' ;

	// Checking vendor is subscribed or not
	if( $result[$s]->subscribe == 'yes' && $result[$s]->subscribe_type == 'free' )
		$totalcompanies[$s]->verified = 'Unverified' ;
	else if( $result[$s]->subscribe == 'yes' && $result[$s]->subscribe_type != 'free' )	
		$result[$s]->verified = 'Verified' ;
	else
		$result[$s]->verified = 'Not subscribed' ;	
	
	if( $result[$s]->company_logo )
	$result[$s]->company_logo = JURI::base().'components/com_camassistant/assets/images/vendors/'.$result[$s]->company_logo ;	
	else
	$result[$s]->company_logo = '' ;
	
	// To get the vendor industries
	$vendor_indus = $this->getvendorindustries($result[$s]->id);	
	$result[$s]->industriesServed = $vendor_indus ;
	//Adding vendor rating, states
	$vendor_cinfo = $this->getvendorinformation($result[$s]->id);
	$data_com = explode('----',$vendor_cinfo);
	$result[$s]->rating = $data_com[0] ;	
	$result[$s]->state = $data_com[1] ;	
		}
		return $result;
	}

	//Function to get all codes of master user
	function getallcodes(){
		$db = & JFactory::getDBO();
		$user =& JFactory::getUser();
		$sql_codes = "SELECT * FROM #__cam_master_vendorcodes where masterid ='".$user->id."' and publish='1' ";
		$db->setQuery( $sql_codes );
		$totalcodes = $db->loadObjectList();
		for( $t=0; $t<count($totalcodes); $t++ ){
			$soldcodes = $this->getcountvendors_sold($totalcodes[$t]->id);
			$totalcodes[$t]->sold = $soldcodes ;
		}
		return $totalcodes;
	}
	
	//Function to get all cancelled codes of master user
	function getallcancelledcodes(){
		$db = & JFactory::getDBO();
		$user =& JFactory::getUser();
		$sql_codes = "SELECT * FROM #__cam_master_vendorcodes where masterid ='".$user->id."' and publish='0' ";
		$db->setQuery( $sql_codes );
		$totalcodes = $db->loadObjectList();
		for( $t=0; $t<count($totalcodes); $t++ ){
			$soldcodes = $this->getcountvendors_sold($totalcodes[$t]->id);
			$totalcodes[$t]->sold = $soldcodes ;
		}
		return $totalcodes;
	}
	
	//Function to get total sold of codes
	function getcountvendors_sold($codeid){
		$db = & JFactory::getDBO();
		$user =& JFactory::getUser();
		$sql_codes = "SELECT count(distinct(vendorid)) FROM #__cam_vendor_purchasedcodes where masterid ='".$user->id."' and codeid=".$codeid." ";
		$db->setQuery( $sql_codes );
		$count_sold = $db->loadResult();
		return $count_sold;
	}
	//Completed
	
	//Function to store code information
	function storecodedata($data){
	$row =& $this->getTable('preferredcodes');
		jimport('joomla.user.helper');
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		return true;
	}
	
	//Function to get the code data to modify the code
	function getcodeinfo($codeid){
		$db = & JFactory::getDBO();
		$user =& JFactory::getUser();
		$sql_cdata = "SELECT * FROM #__cam_master_vendorcodes where id ='".$codeid."' and masterid = '".$user->id."' ";
		$db->setQuery( $sql_cdata );
		$codeinfo = $db->loadObject();
		return $codeinfo;
	}
	
	//Function to calculate purchased code price
	function gettotalprice($code,$renewal,$cost,$vendorid){
		if( $renewal == 'none' )
			$price = $cost;
		else
			$price = $this->getrenewalprice($code,$cost,$vendorid);	
		return 	$price;
	}
	
	//Function to get renewal price
	function getrenewalprice($code,$cost,$vendorid){
		$db = & JFactory::getDBO();
		$sql_codes = "SELECT count(id) FROM #__cam_vendor_purchasedcodes where codeid=".$code." and vendorid=".$vendorid." ";
		$db->setQuery( $sql_codes );
		$count_trans = $db->loadResult();
		$count_sold = $count_trans * $cost;
		return $count_sold;
	}
	//Function to get the price total earned
	function gettotalearned($code){
		$db = & JFactory::getDBO();
		$sql_earned = "SELECT count(id) FROM #__cam_vendor_purchasedcodes where codeid=".$code."";
		$db->setQuery( $sql_earned );
		$count_ids = $db->loadResult();
		
		//Get the code cost
		$sql_cost = "SELECT cost FROM #__cam_master_vendorcodes where id=".$code."";
		$db->setQuery( $sql_cost );
		$codecost = $db->loadResult();
		$total_earned = $count_ids * $codecost;
		return $total_earned;	
	}
	//Function to get requested money already
	function gettotalrequested($codeid){
		$db = & JFactory::getDBO();
		$user =& JFactory::getUser();
		$sql_request = "SELECT SUM(tf_money) FROM #__cam_transfer_money where codeid=".$codeid." and masterid=".$user->id." ";
		$db->setQuery( $sql_request );
		$requested = $db->loadResult();
		return $requested;	
	}
	//Function to get balance 
	function getbalancemoney($codeid){
		$db = & JFactory::getDBO();
		$total_earned = $this->gettotalearned($codeid);
		$alreay_requested = $this->gettotalrequested($codeid);
		$balance = $total_earned - $alreay_requested;
		//$balance = $total_earned - '0.00';
		if( $balance > 0 )
			$result = "yes---".$balance."---".$alreay_requested;
		else
			$result = "no---".$balance."---".$alreay_requested;	
		return $result;
	}
	
	//Function to save request money information
	function saverequest($data){
		$row =& $this->getTable('requestmoney');
	//echo "<pre>"; print_r($row);print_r($post); exit;
		jimport('joomla.user.helper');
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
	}
	//Function to cancel the recurring payments
	function recurrings_cancel($code){
		$db = & JFactory::getDBO();
		$sql_subids = "SELECT DISTINCT(subscribeid) FROM #__cam_vendor_purchasedcodes where codeid=".$code."";
		$db->setQuery( $sql_subids );
		$subscribeids = $db->loadObjectList();
		for( $s=0; $s<count( $subscribeids ); $s++ ){
			$cancelrecurrings = $this->cancel_subscriptions( $subscribeids[$s]->subscribeid, 'Cancel' );
		}
		
	}
	//Functuion to cancel the recurring payments
	function cancel_subscriptions( $profile_id, $action ) {
	$api_username  = 'accounting_api1.camassistant.com';
	$api_password = 'M2BTUK6X9Y3USB9E';
	$api_signature = 'AjE.ZewL5mG6AiztkysoRpX08PrkAPefU6ogzPSYce9zfd9.VuO8QUxN';
	$api_version = '67.0';
	$modify = '2';
	$amount = '0.02';
    $api_request = 'USER=' . $api_username
                .  '&PWD=' . $api_password
                .  '&SIGNATURE=' . $api_signature
                .  '&VERSION=' . $api_version
                .  '&METHOD=ManageRecurringPaymentsProfileStatus'
                .  '&PROFILEID=' . urlencode( $profile_id )
                .  '&ACTION=' . urlencode( $action )
                .  '&NOTE=' . urlencode( 'Profile modified at store' )
				.  '&MODIFY=' . $modify
				.  '&A3=' . $amount
				;
     $ch = curl_init();
    curl_setopt( $ch, CURLOPT_URL, 'https://api-3t.paypal.com/nvp' ); // For live transactions, change to 'https://api-3t.paypal.com/nvp'
    curl_setopt( $ch, CURLOPT_VERBOSE, 1 );
    // Uncomment these to turn off server and peer verification
    // curl_setopt( $ch, CURLOPT_SSL_VERIFYPEER, FALSE );
    // curl_setopt( $ch, CURLOPT_SSL_VERIFYHOST, FALSE );
    curl_setopt( $ch, CURLOPT_RETURNTRANSFER, 1 );
    curl_setopt( $ch, CURLOPT_POST, 1 );
     // Set the API parameters for this transaction
    curl_setopt( $ch, CURLOPT_POSTFIELDS, $api_request );
     // Request response from PayPal
    $response = curl_exec( $ch );
     // If no response was received from PayPal there is no point parsing the response
    if( ! $response )
        die( 'Calling PayPal to change_subscription_status failed: ' . curl_error( $ch ) . '(' . curl_errno( $ch ) . ')' );
     curl_close( $ch );
     // An associative array is more usable than a parameter string
    parse_str( $response, $parsed_response );
	//echo "<pre>"; print_r($parsed_response); exit;
     return $parsed_response;
}


	//function to send the mail to vendor when he added to thwe preferred venors list
	function sendmailtovendor($vendorid){
		$user =& JFactory::getUser();
		$db = & JFactory::getDBO();
		//get article text
		$mailbody = $this->getmailtext();
		$mastercname = $this->getmasterdetails();
		$vendorinfo = $this->getvendordetails($vendorid);
		$managername = $user->name.'&nbsp;'.$user->lastname;
		
		$body = str_replace('[Vendor Company Name]',$vendorinfo->company_name,$mailbody);
		$body = str_replace('[Manager Name]',$managername,$body);
		$body = str_replace('[Management Company Name]',$mastercname,$body);
		
		$mailfrom = $user->email;
		$fromname = 'MyVendorCenter.com';
		$mailsubject = "You've been added as a Preferred Vendor";
		$to = $vendorinfo->email;
		$ccemails = $vendorinfo->ccemail;
		
		$result = JUtility::sendMail($mailfrom, $fromname, $to, $mailsubject, $body, $mode = 1);
		//$to_support = 'rize.cama@gmail.com';
		$to_support = 'vendoremails@myvendorcenter.com';
		$result = JUtility::sendMail($mailfrom, $fromname, $to_support, $mailsubject, $body, $mode = 1);
		$cclist = explode(';',$ccemails);
			for($c=0; $c<=count($cclist); $c++){
				$listcc = $cclist[$c];
				if($listcc){
					$result = JUtility::sendMail($mailfrom, $fromname, $listcc, $mailsubject, $body, $mode = 1);
				}
			} 
		
	}
	//Completed	
	function getmailtext(){
	$db = & JFactory::getDBO();
	$body_msg = "SELECT introtext  FROM #__content where id='305'";
	$db->setQuery($body_msg);
	$msg=$db->loadResult();
	return $msg;
	}
	//Function to get master company name
	function getmasterdetails(){
		$user =& JFactory::getUser();
		$db = & JFactory::getDBO();
		$masterdata = "SELECT comp_name  FROM #__cam_customer_companyinfo where cust_id=".$user->id." ";
		$db->setQuery($masterdata);
		$master_c_name = $db->loadResult();
		return $master_c_name;
	}
	function getvendordetails($vendorid){
		$db = & JFactory::getDBO();
		$sql_vcname = "SELECT V.company_name, U.email, U.ccemail FROM #__cam_vendor_company as V, #__users as U where V.user_id=".$vendorid." and V.user_id=U.id";
		$db->setQuery( $sql_vcname );
		$vendordata = $db->loadObject();
		return $vendordata;
	}
	//Function to get vendor expiored ddate
	function getexpireddate($code,$vendorids){
		$db =& JFactory::getDBO();
		$user =& JFactory::getUser();
		$sql12_codename = "SELECT VP.renewal_date FROM #__cam_vendor_purchasedcodes as VP, #__cam_master_vendorcodes as MV where VP.vendorid=".$vendorids." and VP.masterid=".$user->id." and VP.codeid=".$code." and VP.codeid=MV.id and MV.cost!='0.00' order by renewal_date DESC ";
		$db->Setquery($sql12_codename);
		$expireddate = $db->loadResult();
		return $expireddate;
	}
	function getopeninvitationtext(){
	
	$db = JFactory::getDBO();
	$body_msg = "SELECT introtext  FROM #__content where id='312'";
	$db->setQuery($body_msg);
	
	$msg=$db->loadResult();
	
	return $msg;
	}
	function getpersonalinvitationtext(){
	
	$db = JFactory::getDBO();
	$body_msg = "SELECT introtext  FROM #__content where id='313'";
	$db->setQuery($body_msg);
	$msg=$db->loadResult();
	return $msg;
	}
	//sreenu
	function getmanagermailtext()
	{
	    $db= JFactory::getDBO();
		$user=JFactory::getUser();
		//To get the manager company
		$companyname ="SELECT comp_name  FROM #__cam_customer_companyinfo where cust_id=".$user->id."";
		$db->setQuery( $companyname );
		$c_name = $db->loadResult();
		$managerid ="SELECT managerid FROM #__cam_manager_emailtext where managerid=".$user->id."";
		$db->setQuery( $managerid );
		$managerid = $db->loadResult();
		if($managerid)
		$query_rejectedemail ="SELECT email_text FROM #__cam_manager_emailtext where managerid=".$user->id."";
		else
		$query_rejectedemail ="SELECT introtext  FROM #__content where id='316'";
		$db->setQuery( $query_rejectedemail );
		$body = $db->loadResult();
		$body = html_entity_decode($body);
		$body = str_replace("[Manager's Full Name]",$user->name.' '.$user->lastname,$body);
		$body = str_replace("[Manager's Primary Phone Number]",$user->phone,$body);
		$body = str_replace('[Management Company]',$c_name,$body);
		return $body;
	}
	
	function getsavedetails($data)
	{
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$date = date('Y-m-d H:i');
		$clientid = "SELECT id FROM #__users where username='".$data['vendoremailid']."'";
		$db->setQuery( $clientid );
		$clientid = $db->loadResult();
		$query = "insert into #__cam_board_mem (`id`, `user_id`,`email`,property_name,`accept`,date,link_invite) VALUES ('','".$user->id."','".$data['vendoremailid']."','".$data['propertyid']."','".$data['accept']."','".$date."','2')";
		$db->setQuery($query);
		$savedata = $db->query();
		$id = $db->insertid();
		$propertyname = "SELECT property_name FROM #__cam_property where id=".$data['propertyid']."";
		$db->setQuery( $propertyname );
		$propertyname = $db->loadResult();
		 $saveinfo = "insert into #__cam_propertyowner_link (id,user_id,boardmem_id,property_id,email,propertyinvitation,property_name,propertyowner_id) VALUES ('','".$user->id."','".$id."','".$data['propertyid']."','".$data['vendoremailid']."','2','".$propertyname."','".$clientid."')";
		$db->setQuery($saveinfo);
		$saveinfo = $db->query();
		return $saveinfo ;
	}
	function saveinvitationdetails($data)
	{
		$db= JFactory::getDBO();
		$user=JFactory::getUser();
		$date = date('Y-m-d H:i');
		$saveinfo = "insert into #__cam_propertyowner_link (id,user_id,property_id,email,propertyinvitation,boardmem_id) VALUES ('','".$user->id."','".$data['propertyid']."','".$data['email']."','2','".$data['boardmemeberid']."')";
		$db->setQuery($saveinfo);
		$saveinfo = $db->query();
		return $saveinfo;
	}
	
	function checkmanagermail($mail){
	$db= JFactory::getDBO();
	$user=JFactory::getUser();
	$sql = "SELECT email FROM #__cam_board_mem where user_id=".$user->id." AND email ='".$mail."' AND accept='yes' ";
	$db->setQuery( $sql );
	$mails = $db->loadResult();
	return $mails;
	
	}
	function getpropertyowner_info()
	{
	    $db=&JFactory::getDBO();
		$id = JRequest::getVar("id",'');
		$query_1 = "SELECT email, user_id FROM #__cam_board_mem WHERE id = ".$id;
		$db->setQuery($query_1);
		$user = $db->loadObject();
		 $query_2 = "select U.name, U.lastname, U.email, U.phone, U.extension, U.cellphone ,P.street,P.manages, P.property_manager_id ,P.fax_no,P.id, P.altemail, B.board_position,B.salutation, P.property_name,S.state,S.zipcode,S.altemail,S.altphone_ext, S.steetaddress from #__users as U , #__cam_property as P, #__cam_board_mem as B ,#__cam_propertyowner_info as S where U.email= '".$user->email."' AND P.property_manager_id='".$user->user_id."' AND P.manages=U.id AND B.email=U.email AND P.manages = S.user_id";
		$db->setQuery($query_2);
		$data1 = $db->loadObject();
		
		return $data1;
		
	}
			
	function getprevious()
	{
	$db =& JFactory::getDBO();
	$user=JFactory::getUser();
	
		$sort = JRequest::getVar('sort','');
		if($sort == 'asc')
			$sorting = 'order by vendoremailid ASC';
		else if($sort == 'desc' )
			$sorting = 'order by vendoremailid DESC';
		else
			$sorting = 'order by date DESC';
		
	  $query  = "SELECT id, email, date FROM  #__cam_board_mem  where user_id = ". $user->id ." and  published='0' and accept='yes' GROUP BY email ".$sorting." " ; 
	$db->setQuery($query);
	$invitations = $db->loadObjectList();

		for( $i=0; $i<count($invitations); $i++ ){
			$querys  = "SELECT id FROM  #__users  where email = '". $invitations[$i]->email ."' or ccemail LIKE '%".$invitations[$i]->email."%' " ;
				$db->setQuery($querys);
				$exid = $db->loadResult();
				//print_r($exid);exit; 
				if($exid){
				$invitations[$i]->status = 'accepted';
				}
				else{
					$invitations[$i]->status = 'notaccepted';
					/*$query_cc  = "SELECT ccemail FROM  #__users  where user_type='11' " ; 
					$db->setQuery($query_cc);
					$ccmails = $db->loadObjectList(); 
					for( $d=0; $d<count($ccmails); $d++ ){
					$cclist = explode(';',$ccmails[$d]->ccemail);
					for($c=0; $c<=count($cclist); $c++){
						$listcc = $cclist[$c];
							if($listcc){
								if( $listcc ==  $invitations[$i]->vendoremailid )
									$invitations[$i]->status = 'accepted';
							}
						}
					}*/	
				}
		}
		
	return $invitations;
	}
	function store_permissions($data)
	{
     
	$row =& $this->getTable('propertypermisisons');
	//echo "<pre>"; print_r($row);print_r($post); exit;
		jimport('joomla.user.helper');
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		return true;
		
	}
	
	function getallmanageracounts()
	{
	$db =& JFactory::getDBO();
	$user=JFactory::getUser();
    $query  = "SELECT user_id as property_manager_id FROM  #__cam_propertyowner_link where propertyowner_id ='".$user->id."' AND link_value=1 AND vendors_p='1'" ;
	$db->setQuery($query);
	$manager_id = $db->loadObjectList();
	//echo '<pre>';print_r($manager_id);exit;
	foreach($manager_id as $id ){
		$managers[] = $id->property_manager_id;
	}	

  return $managers ;
	}
	
	function getStates(){
		$db =& JFactory::getDBO();
//		$query = "SELECT code,state FROM #__cam_vendor_states ";
		$query = "SELECT * FROM #__state";
		$db->setQuery($query);
        $states=$db->loadObjectList();
		return $states;

}
  function client_permissions()
	{
	    $pid = JRequest::getVar('id','');
	    $db =& JFactory::getDBO();
		$user =& JFactory::getUser();
		$bid = JRequest::getVar('bid','');
		$per = "SELECT vendors_p,proposals_p,invite_p,approval_p, awarding_p from #__cam_propertyowner_link where boardmem_id ='".$bid."'";
		$db->setQuery( $per );
		$permission = $db->loadObject();
		return $permission;
	}

   function editpropertymanager_info()
	{
	   $db =& JFactory::getDBO();
	   $user =& JFactory::getUser();
	   $pid = JRequest::getVar('id','');
	   $bid = JRequest::getVar('bid','');
	   $unlinkinfo = "SELECT B.streeaddress,B.zipcode, B.board_position, B.altextension, B.email,B.salutation,B.firstname,B.lastname,B.state, B.altemail, B.phone,B.extension,B.altphone,B.fax,P.property_name from #__cam_board_mem as B, #__cam_property as P where B.property_name = '".$pid."' AND B.user_id='".$user->id."' AND B.id = '".$bid."'";
	  $db->setQuery($unlinkinfo);
	  $managerinfo = $db->loadObject();
	  return $managerinfo;	
	}
	function getProperties() 
	{
		global $mainframe;
		$db=&JFactory::getDBO();
		// Camfirm Company id
		$user =& JFactory::getUser();
		if($user->user_type == 13 && $user->accounttype != 'master') {
			$totalmanagers = $this->gettotalmanagersofcamfirm();
			$whereas[] = "U.`property_manager_id` IN (".implode( ' , ' , $totalmanagers).") ";
			}
			else if($user->dmanager == 'yes'){
			$total_mangrs = $this->gettotalmanagersofdm() ;	
			$whereas[] = "U.`property_manager_id` IN (".implode( ' , ' , $total_mangrs).") ";
			}
			else if($user->user_type ==13 && $user->accounttype == 'master')
			{
			$total_mangrs = $this->getmastermanagers() ;
			$whereas[] = "U.`property_manager_id` IN (".implode( ' , ' , $total_mangrs).") ";
			}
			else{
			$whereas[] = "U.`property_manager_id` IN (".$user->id.") ";
			}

			
			$query = "SELECT U.id as value, U.property_name as text FROM #__cam_property as U, #__users as V where  U.publish='0' and U.`property_manager_id` = V.`id` "; 
		
			if($whereas) {
				$query .= " AND ".implode( ' AND ', $whereas )."   ".$sorting." order by U.property_name ASC ";
			}
			
			$db->Setquery($query);
			$propertyList = $db->loadObjectList();
			//echo '<pre>';print_r($propertyList);exit;
			return $propertyList;
}
       function getpropertyowner_details() 
         {

        $db =& JFactory::getDBO();
		
        $propertyid = JRequest::getVar('id','');
        $boardmem_id = JRequest::getVar('bid','');
        $getclientid = "SELECT propertyowner_id from #__cam_propertyowner_link where boardmem_id ='".$boardmem_id."'";
		$db->setQuery($getclientid);
		$user = $db->loadResult();
	    $query = "SELECT U.name,U.id,U.lastname,S.state,S.steetaddress,S.zipcode,U.email,S.altemail,S.city,S.altphone_ext,U.phone,U.extension,U.cellphone,S.fax from #__cam_propertyowner_info as S,#__users as U where S.user_id='".$user."' AND U.id='".$user."'";
		$db->setQuery($query);
		$properyownerinfo = $db->loadObject();
		return $properyownerinfo;	
		}

      function getpropertyownermanagers()
          {
        $db =& JFactory::getDBO();
		$user =& JFactory::getUser();
        $query_1 = "SELECT DISTINCT(user_id) as property_manager_id FROM #__cam_propertyowner_link where propertyowner_id ='".$user->id."' AND link_value = '1' AND 	vendors_p ='1'";
		$db->setQuery($query_1);
		$properyownerinfo = $db->loadObjectList();
		return $properyownerinfo;
        }

function getexistingid($managerid){
		$db = JFactory::getDBO();
		$query_rfpmail ="SELECT id, email_text from #__cam_manager_emailtext where managerid=".$managerid." ";
		$db->setQuery( $query_rfpmail );
		$mailid = $db->loadObject();
		return $mailid;
	}
	function store_mailtext($post){
	
		$row = & $this->getTable('manageremailmessage');
		if (!$row->bind($post)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
		
	}
 
  function updatepropertyinfo($data)
	{
	//echo '<pre>';print_r($data);exit;
	 	// give me JTable object	
		$row =& $this->getTable('propertylink');
		jimport('joomla.user.helper');
		
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		// Store the  detail record into the database
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		return true;
	}
	
	function checkclientavailable($propertyid,$propertyownerid)
	{
			$db = JFactory::getDBO();
			$user = JFactory::getUser();
			$checkclient ="SELECT id FROM #__cam_propertyowner_link where property_id='".$propertyid."' AND propertyowner_id='".$propertyownerid."' AND user_id='".$user->id."'";
			$db->setQuery( $checkclient );
			$checkclient = $db->loadResult();
			return $checkclient;
	}	
	
	function getblockedvendors()
	{
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$managerid =$this->getmasterfirmaccount($user->id);
		$blok_vendor = "SELECT block, block_complinace FROM #__cam_master_block_users where masterid=".$managerid."";
		$db->Setquery($blok_vendor);
		$block = $db->loadObject();
		return $block;
	}
function total_vendors(){
		$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
		$masterid = $this->getmasterfirmaccount($user->id);
		
        $total_mangrs = $this->getmastermanagers_invite($masterid);
		$whereas[] = "`managerid` IN (".implode( ' , ' , $total_mangrs).") ";
		$query  = "SELECT id, vendoremailid,managerid, date FROM  #__cam_newvendorinvitations  where publish='0'" ;
	    $query .= " AND ".implode( ' AND ', $whereas )." ";
		$db->setQuery($query);
		$managers_mans = $db->loadObjectList();
		for( $i=0; $i<count($managers_mans); $i++ ){
			$querys  = "SELECT id FROM  #__users  where user_type='11' and ( username = '". $managers_mans[$i]->vendoremailid ."' or email ='".$managers_mans[$i]->vendoremailid."' )" ;
			$db->setQuery($querys);
			$exid = $db->loadResult(); 
		if($exid){
				$invitations[$i]->vendor_id = $exid;
				}
		}
		if( $invitations ) {
		foreach ($invitations as $res ) {
		 $vendor_id[] = $res->vendor_id;
		}
		$vendor_id = array_unique($vendor_id);
		$vendor_ids =count($vendor_id);
		} 
		else 
		$vendor_ids = 0; 
		return $vendor_ids;
	}

	function getmastermanagers_invite($masterid){
			$user =& JFactory::getUser();
			$db=&JFactory::getDBO();
			$sql1 = "SELECT firmid from #__cam_masteraccounts where masterid=".$masterid." ";
			$db->Setquery($sql1);
			$subfirms = $db->loadObjectlist();
			
			
	if($subfirms)
		{
			for( $a=0; $a<count($subfirms); $a++ )
				{
					$firmid1[] = $subfirms[$a]->firmid;
					$sql = "SELECT id from #__cam_camfirminfo where cust_id=".$subfirms[$a]->firmid." ";
					$db->Setquery($sql);
					$companyid[] = $db->loadResult();
											
				}
				
        }
		
	if($companyid)
		{
         	for( $c=0; $c<count($companyid); $c++ )
				{
					$sql_cid = "SELECT cust_id from #__cam_customer_companyinfo where comp_id=".$companyid[$c]." ";
					$db->Setquery($sql_cid);
					$managerids = $db->loadObjectList();
						if($managerids) {
							foreach( $managerids as $last_mans){
								$total_mangrs[] = $last_mans->cust_id ;
							}
						}
               }
        }
	
	if($firmid1 && $total_mangrs )
		{
            $total_mangrs = array_merge($total_mangrs,$firmid1); 
        }
        if($firmid1){
            for( $d=0; $d<count($firmid1); $d++ ){
        $query = "SELECT id FROM #__cam_camfirminfo WHERE cust_id=".$firmid1[$d];
	$db->setQuery($query);
	$comp_id = $db->loadResult();
	$userid=array($user->id);
	$query_mans = "SELECT cust_id from #__cam_customer_companyinfo where comp_id = ".$comp_id." ";
	$db->setQuery($query_mans);
        $Managers_list1 = $db->loadObjectList();
                if($Managers_list1) {
                        foreach( $Managers_list1 as $Managers_list2){
                                $Managers_list[] = $Managers_list2->cust_id ;
                        }
                }
            }
            if($Managers_list){
        $total_mangrs = array_merge($Managers_list,$firmid1);
            } else {
         $total_mangrs = $firmid1;        
            }
        }
	/*if($firmid1){
            $total_mangrs = $firmid1;
        }
         */
        $userid=array($masterid);
        if($total_mangrs){
        $total_mangrs = array_merge($userid,$total_mangrs); 
		}
		else{
		$total_mangrs[] = $masterid; 
		}
		
		return $total_mangrs;
	}
//completed
  
}
?>
