<?php
/**
 * @version		1.0.0 cam assistant $
 * @package		cam_assistant
 * @copyright	Copyright ï¿½ 2010 - All rights reserved.
 * @license		GNU/GPL
 * @author
 * @author mail	nobody@nobody.com
 *
 *
 * @MVC architecture generated by MVC generator tool at http://www.alphaplug.com
 */

// no direct access
defined('_JEXEC') or die('Restricted access');

jimport( 'joomla.application.component.model' );


class vendorsModelvendors extends Jmodel
{
	//assigning variables
	var $_data;
	var $_total = null;
	var $_pagination = null;
	var $_jobs_index = null;

	function __construct(){
		parent::__construct();

		global $mainframe, $context;
		//initialize class property
	    $this->_table_prefix = '#__cam_';
		global $jobs_index;
		global $mainframe;
		// echo "<pre>"; print_r($_REQUEST); exit;
	    //DEVNOTE: Get the pagination request variables
		$limitstart = JRequest::getVar('limitstart', '0');
		// In case limit has been changed, adjust it
		$limitstart = ($limit != 0 ? (floor($limitstart / $limit) * $limit) : 0);
		$Prp_type = JRequest::getVar('Prp_type','');

		if($Prp_type == 'Draft')
		$limit = $this->get_Configuration_Params('draftproposals_limit');
		else if($Prp_type == 'ITB' || $Prp_type == 'review')
		$limit = $this->get_Configuration_Params('draftproposals_limit');
		else if($Prp_type == 'Submit')
		$limit = $this->get_Configuration_Params('submittedproposals_limit');
		else if($Prp_type == 'Review')
		$limit = $this->get_Configuration_Params('reviewproposals_limit');
		else if($Prp_type == 'Awarded')
		$limit = $this->get_Configuration_Params('awardedproposals_limit');
		else if($Prp_type == 'Unawarded')
		$limit = $this->get_Configuration_Params('unawarderproposals_limit');
		/*else if($_REQUEST['task'] == 'vendor_available_jobs')
		$limit = $this->get_Configuration_Params('av_page');*/
		else
		$limit=100;

		if ($_REQUEST['viewall']=='all'){
		$limit='0';
		$limitstart='0';
		}
		$limitstart = JRequest::getVar('limitstart', '0');
		$this->setState('limit', $limit);
		$this->setState('limitstart', $limitstart);
	}

	//function to get Splrequirements in Review RFP
	function get_Review_SplRequiremntCats()
	{
		global $mainframe;
		$db=&JFactory::getDBO();
	    //$rfp_id = JRequest::getVar('rfpid','');
		$rfp_id = JRequest::getVar('rfp_id','');
	    $user = JFactory::getUser();
		$sql = " SELECT b.req_parentid as main_id, a.req_title as main_title FROM jos_cam_rfpreq_categories as a , jos_cam_rfpreq_info as b  WHERE a.req_id = b.req_parentid 	 and b.rfp_id = ".$rfp_id."   group by b.req_parentid order by b.req_parentid ";
		$db->Setquery($sql);
		$main_cat = $db->loadObjectList();
		$SPLRequirements_details['main'] = $main_cat;
		$sql = " SELECT DISTINCT b.req_parentid as main_id,b.price, b.req_subparentid as sub_id, a.req_title as sub_title FROM jos_cam_rfpreq_categories as a , jos_cam_rfpreq_info as b  WHERE a.req_id = b.req_subparentid and b.rfp_id = ".$rfp_id." AND  b.req_subparentid != 0  order by b.req_parentid ";
		$db->Setquery($sql);
		$sub_cat = $db->loadObjectList();
		$SPLRequirements_details['sub'] = $sub_cat;
		$sql = " SELECT b.req_parentid as main_id,b.price, b.req_subparentid as sub_id, b.req_id as child_id, a.req_title as child_title FROM jos_cam_rfpreq_categories as a , jos_cam_rfpreq_info as b  WHERE a.req_id = b.req_id and b.rfp_id = ".$rfp_id." AND b.req_parentid != 0 AND req_subparentid != 0  order by b.req_parentid ";
		$db->Setquery($sql);
		$SPLRequirements_details['child'] = $db->loadObjectList();
		// echo "<pre>"; print_r($SPLRequirements_details);  exit;
		return $SPLRequirements_details;
	}

	//code to validate RFP special requirements against vendor docs
	function RFP_specialrequirments_validation($rfpid,$vendor_id)
	{
			$flag = 0;
			$db=&JFactory::getDBO();

			//code to validate specialrequirements
			$sql = "SELECT distinct(req_parentid ) FROM #__cam_rfpreq_info WHERE rfp_id ='".$rfpid."'";
			$db->Setquery($sql);
			$main = $db->loadResultArray();
			$sql = "SELECT req_subparentid  FROM #__cam_rfpreq_info WHERE req_subparentid !=0 AND rfp_id ='".$rfpid."'";
			$db->Setquery($sql);
			$sub = $db->loadResultArray();

			for($m = 0; $m<count($main); $m++)
			{
				if($flag == 0)
				{
				  switch($main[$m])
				  {

				  case 1:
				  			if($flag == 0)
							{
							 for($h=0;$h<count($sub); $h++)
							 {
								 switch($sub[$h])
								  {

								     case 17:
									         if($flag == 0)
							                 {
										      $sql = "SELECT id  FROM #__cam_vendor_professional_license  WHERE PLN_status = 1 AND vendor_id=".$vendor_id;
											  $db->Setquery($sql);
											  $PLN = $db->loadResultArray();
										      $PLN_cnt = count($PLN) ;
											  if($PLN_cnt== 0){
												$flag = 1;
													}
											  }
									  case 18:
									          if($flag == 0)
							                 {
												 $sql = "SELECT id  FROM #__cam_vendor_occupational_license WHERE OLN_status = 1 AND vendor_id=".$vendor_id;
												  $db->Setquery($sql);
												  $OLN = $db->loadResultArray();
												  $OLN_cnt = count($OLN) ;
												  if($OLN_cnt== 0){
														$flag = 1;
													}
											 }

									} //switch($sub[$h])
							} //for($h=0;$h<count($sub); $h++)
							}
				   case 3:
						    if($flag == 0)
							{
								for($s=0;$s<count($sub); $s++)
								{
									  switch($sub[$s])
									  {

										 case 11:
												if($flag==0)
												{
								  $sql56 = "SELECT req_id  FROM #__cam_rfpreq_info WHERE rfp_id=".$rfpid;
								  $db->Setquery($sql56);
								  $req_id = $db->loadResult();
							 $sql2 = "SELECT id  FROM #__cam_vendor_workers_companies_insurance WHERE WCI_end_date>= '".$today."' and WCI_status = 1 AND vendor_id=".$vendor_id;
								  $db->Setquery($sql2);
								  $WCI = $db->loadResultArray();
								  $WCI_cnt = count($WCI) ;
								  if($WCI_cnt == 0){
								  $flag = 1;
								  		}
								if ($req_id=='19' &&  $flag=='0'){
							 	    $sql26 = "SELECT excemption  FROM #__cam_vendor_workers_companies_insurance WHERE WCI_end_date>= '".$today."' and WCI_status = 1 AND vendor_id=".$vendor_id;
									$db->Setquery($sql26);
								   $excemption = $db->loadObjectlist();
								  //$excemption=$excemption1[0]->excemption;
								  //echo "<pre>"; print_r($excemption);
								  // $WCI_cnt1 = count($excemption) ;
								   for($d=0;$d<count($excemption); $d++){
								//echo "<pre>"; print_r($excemption[$d]->excemption);
								          if(($excemption[$d]->excemption!= 0)&&($excemption[$d]->excemption!='')){
									         $flag=1;
									             } else {
									        $flag=0;
									        	}
								     	 	}
										 }//echo $flag; echo $vendor_id; echo '</br>';

							    }
										  case 12:
												if($flag==0)
												{

														$sql = "SELECT GLI_policy_aggregate FROM #__cam_vendor_liability_insurence  WHERE GLI_status = 1 AND vendor_id=".$vendor_id;

														$db->Setquery($sql);
														$amount = $db->loadObjectlist();
														$spl_amount="SELECT price FROM #__cam_rfpreq_info WHERE rfp_id='".$rfpid."' and req_subparentid='12'";
														$db->Setquery($spl_amount);
														$amount1 = $db->loadResult();
														$amount2 = doubleval(str_replace(",","",$amount1));
														for($L=0;$L<count($amount); $L++){
														  if($amount2 > $amount[$L]->GLI_policy_aggregate){
															 $flag=1;
																 } else {
															$flag=0;
															}
														}

												}
									  } //switch($main[$m])
								} //for($s=0;$s<count($sub); $s++)
							}
				 }
				}
			}	//for($m = 0; $m < count($main); $m++)

			 return $flag;
	}

	//code to get currently existing open jobs
		function get_openjobs()
		{
			$db = JFactory::getDBO();
			$user = JFactory::getUser();
			$m= date("m"); // Month value
			$de= date("d"); //today's date
			$y= date("Y"); // Year value
			$today = date('m-d-Y', mktime(0,0,0,$m,($de+1),$y));
			//$today = date('m-d-Y');
			$sql = "SELECT id,industry_id,property_id FROM #__cam_rfpinfo where  publish=1 AND rfp_type = 'rfp' ";
			$db->Setquery($sql);
			$res = $db->loadObjectList();

			for($a=0; $a<count($res); $a++)
			{
				//validation for county edited by sateesh
				$sql_countyid = "SELECT divcounty FROM #__cam_property  WHERE  id=".$res[$a]->property_id;
				$db->setQuery($sql_countyid);
				$countyid = $db->loadResult();
				//validation for industry
					//Code to get the rfp industies
			 $sql_industries = "SELECT industry_id from #__cam_rfpindustries WHERE rfpid= ".$res[$a]->id." ";
			$db->Setquery($sql_industries);
							/*	if($res[$a]->id == '592972' ){
	echo $sql_industries; echo "<br>";
}*/
			$indus = $db->loadResultArray();
			if($indus){
			$indus1=implode(',',$indus);
			}
			//Completed

 $sql = "SELECT U.id FROM #__cam_vendor_industries as U,#__vendor_state_counties as V where U.user_id = '".$user->id."' AND V.county_id = '".$countyid."' AND V.user_id = U.user_id AND U.industry_id IN (".$indus1.")";
 $indus1 = '';
/*  if($res[$a]->id == '592972' ){
	echo $sql;		echo "<br>";
}
*/
				$db->Setquery($sql);
 				$res2 = $db->loadResult();

				if($res2 != '')
				{
					 $sql = "SELECT id FROM #__cam_vendor_availablejobs  where rfp_id = ".$res[$a]->id." AND user_id = ".$user->id;
					$db->Setquery($sql);
					$res3 = $db->loadResult();
					$flag = $this->RFP_specialrequirments_validation($res[$a]->id,$user->id);
					//code to validate excluded vendor info
					$camfirm_details= "SELECT cust_id FROM #__cam_rfpinfo where id='".$res[$a]->id."'";
					$db->Setquery($camfirm_details);
					$camfirm_id =$db->loadResult();

				 	$ex_vendor = "SELECT  v_id FROM  #__vendor_inviteinfo WHERE (vendortype = 'exclude' or (vendortype='preferred and status=1')) AND userid = ".$camfirm_id." AND v_id = ".$user->id;
					$db->setQuery($ex_vendor);
					$is_excluded = $db->loadResult();
					//echo "<br><br>";echo "Res3:&nbsp;&nbsp;".$res3; echo "<br>"; echo "Flag:&nbsp;&nbsp;".$flag; echo "<br>"; echo "Exclude:&nbsp;&nbsp;".$is_excluded; echo "<br><br>";
					if($res3 == '' && $flag == 0 && $is_excluded == '')
					{
					//echo "can"; exit;
					$sql = "insert into #__cam_vendor_availablejobs values ('','".$res[$a]->id."','".$user->id."','".$res[$a]->property_id."','0','1','0')";
					$db->SetQuery($sql);
					$db->query();
					}
					//exit;
				}
			}
		}


	//code to get max bids allowed for an RFP
     function get_RFP_Maxbids()
	 {
	    //validation to redirect to vendor bidding form
		/*$rfp_id = JRequest::getVar('rfp_id','');
		$user = JFactory::getUser();
		$db = JFactory::getDBO();
		$sql = "SELECT maxProposals FROM #__cam_rfpinfo WHERE id=".$rfp_id;
		$db->Setquery($sql);
		$Max_bids = $db->loadResult();
		$prp_sql = "SELECT count(distinct(proposedvendorid)) FROM jos_cam_vendor_proposals WHERE rfpno=".$rfp_id." AND proposaltype IN ('ITB','review','Draft','Submit') AND Alt_bid != 'yes' ";
		$db->Setquery($prp_sql);
		$Prp_bids = $db->loadResult();
		if($Max_bids > $Prp_bids)
		$flag = '1';
		else if($Max_bids == $Prp_bids)
		$flag = 0;
		return $flag;*/

	    //validation to redirect to vendor bidding form
		$rfp_id = JRequest::getVar('rfp_id','');
		$user = JFactory::getUser();
		$db = JFactory::getDBO();
		$m= date("m"); // Month value
		$de= date("d"); //today's date
		$y= date("Y"); // Year value
		$today = date('m-d-Y', mktime(0,0,0,$m,($de+1),$y));
		//$today = date('m-d-Y');
		$is_allow = '';
		$sql = "SELECT maxProposals,proposalDueDate,proposalDueTime FROM #__cam_rfpinfo WHERE rfp_type = 'rfp' AND id=".$rfp_id;
		$db->Setquery($sql);
		$records = $db->loadAssocList();
		//echo "<pre>"; print_r($records);

		$duedate = $this->get_duedate($records[0]['proposalDueTime'],$records[0]['proposalDueDate']);
		$time_left_details = $this->fnCalculateEndDateTime($duedate);
		//echo "<pre>"; print_r($time_left_details);
		 if($time_left_details['days'] == 0)
		 $time_left_details['days'] = '';
		 else
		 $time_left_details['days'] = $time_left_details['days'].' Day(s) &nbsp;';
		 $records[$d]['time_left'] = $time_left_details['days'].$time_left_details['hours'].'&nbsp;Hr(s)'.'&nbsp;'.$time_left_details['minutes'].'&nbsp;Mins';

		 if(($time_left_details['days'] == '0' ||  $time_left_details['days'] < 0) && ($time_left_details['hours'] == 0 || $time_left_details['hours'] < 0) && ($time_left_details['minutes'] == 0 || $time_left_details['minutes'] < 0))
		 {
		  $is_allow = 'not allowed';
		  }
		$Max_bids = $records[0]['maxProposals'];
		$prp_sql = "SELECT count(distinct(proposedvendorid)) FROM jos_cam_vendor_proposals WHERE rfpno=".$rfp_id." AND proposaltype IN ('ITB','review','Draft','Submit','resubmit') AND Alt_bid != 'yes' ";
		$db->Setquery($prp_sql);
		$Prp_bids = $db->loadResult();
		if($Max_bids > $Prp_bids)
		$flag = '1';

		else if($Max_bids == $Prp_bids)
		$flag = 0;
		return $flag;


	 }

	//function to get count of jobs
	function get_count_jobs()
	{
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$m= date("m"); // Month value
		$de= date("d"); //today's date
		$y= date("Y"); // Year value
		$today = date('m-d-Y', mktime(0,0,0,$m,($de+1),$y));
		//$today = date('m-d-Y');
		/*$sql = "SELECT A.rfp_id,A.prp_id,R.projectName,R.proposalDueDate,P.property_name  FROM #__cam_vendor_availablejobs as A  LEFT JOIN #__cam_rfpinfo as R ON A.rfp_id = R.id LEFT JOIN #__cam_property as P ON A.prp_id = P.id WHERE A.status = 0 AND R.proposalDueDate >= '".$today."' AND A.user_id=".$user->id." AND R.publish=1 order by R.proposalDueDate,R.proposalDueTime 	 ASC";		*/
		/* $sql = "SELECT A.id, A.rfp_id,A.prp_id,R.projectName,R.proposalDueDate,P.property_name,R.proposalDueTime,A.status  FROM #__cam_vendor_availablejobs as A
				  LEFT JOIN #__cam_rfpinfo as R ON A.rfp_id = R.id
				  LEFT JOIN #__cam_property as P ON A.prp_id = P.id
				  WHERE A.status = 0 AND R.proposalDueDate >= '".$today."' AND  A.user_id=".$user->id." AND R.publish=1 order by R.proposalDueDate,R.proposalDueTime  ASC";*/
				  $sql = "SELECT A.id, A.rfp_id,A.prp_id,R.projectName,R.proposalDueDate,P.property_name,P.property_name,P.divcounty,R.industry_id,R.proposalDueTime,A.status  FROM #__cam_vendor_availablejobs as A
				  LEFT JOIN #__cam_rfpinfo as R ON A.rfp_id = R.id
				  LEFT JOIN #__cam_property as P ON A.prp_id = P.id
				  WHERE A.status = 0 AND R.rfp_type = 'rfp' AND A.user_id=".$user->id." AND R.publish=1 and A.publish=1 order by R.proposalDueDate,R.proposalDueTime  ASC";
		//$db->Setquery($All_prp_Draft_sql);
		$db->Setquery($sql);
		$records = $db->loadAssocList();

		//echo "<pre>"; print_r($records);
		for($a=0,$b=0; $a<count($records); $a++)
		{
			$db = JFactory::getDBO();
			$sql = "SELECT maxProposals FROM #__cam_rfpinfo WHERE id=".$records[$a]['rfp_id'];
			$db->Setquery($sql);
			$Max_bids = $db->loadResult();
			$prp_sql = "SELECT count(distinct(proposedvendorid)) FROM jos_cam_vendor_proposals WHERE rfpno=".$records[$a]['rfp_id']." AND proposaltype IN ('ITB','review','resubmit','Draft','Submit') AND Alt_bid != 'yes' ";
			$db->Setquery($prp_sql);
			$Prp_bids = $db->loadResult();
			if($Max_bids > $Prp_bids)
			{
			$st = 'Allow';
			$records[$a]['bid_status'] = $st;
			$new_records[$b] = $records[$a];
			$b++;
			}

		}

		$records = $new_records;
		// echo count($records);
		//echo "<pre>"; print_r($records);
		/*for($d=0,$c=0; $d<count($records); $d++)
		{
			$main = explode('-',$records[$d]['proposalDueDate']);
			$date = $main[2].'-'.$main[0].'-'.$main[1];
			$newdate = strtotime ( '-1 day' , strtotime ( $date ) ) ;
			$records[$d]['proposalDueDate'] = date ( 'm-d-Y' , $newdate );
			$duedate = $this->get_duedate($records[$d]['proposalDueTime'],$records[$d]['proposalDueDate']);
			$time_left_details = $this->fnCalculateEndDateTime($duedate);
			//echo "<pre>"; print_r($time_left_details);
			 if($time_left_details['days'] == 0)
			 $time_left_details['days'] = '';
			 else
			 $time_left_details['days'] = $time_left_details['days'].' Day(s) &nbsp;';
			 $records[$d]['time_left'] = $time_left_details['days'].$time_left_details['hours'].'&nbsp;Hr(s)'.'&nbsp;'.$time_left_details['minutes'].'&nbsp;Mins';
			if(($time_left_details['days'] > 0  || $time_left_details['hours'] > 0 || $time_left_details['minutes'] > 0))
			 {
			 $records[$d]['time_diff'] = $time_left_details['time_diff'];
			 $final_records[$c] = $records[$d];
			  $c++;
			 }
			 else if(($time_left_details['days'] == '' ||  $time_left_details['days'] < 0) && ($time_left_details['hours'] == 0 || $time_left_details['hours'] < 0) && ($time_left_details['minutes'] == 0 || $time_left_details['minutes'] < 0))
			 {
			  $records[$d]['time_over'] = '0Hrs';
			  //unset($records[$d]);
			  }


		}*/
		//echo "<pre>"; print_r($final_records);
		//echo count($final_records);
		return $records;
	}


	//function to get pagination for available jobs
	function getPagination_Jobs()
	{
		// Lets load the content if it doesnï¿½t already exist
		if (empty($this->_pagination))
		{
		jimport('joomla.html.pagination');
		$total = $this->get_count_jobs();
		//$total = $this->get_available_jobs();
		$total = count($total);
		//echo $this->getState('limitstart'); echo '----'; echo $this->getState('limit'); echo '<br/>';
		$this->_pagination = new JPagination($total, $this->getState('limitstart'), $this->getState('limit') );
		}
		return $this->_pagination;
	}
	//function to get vendor available jobs

	function get_available_jobs()
	{
	    /*****************code to send to fnd**************************/
		global $mainframe;
	    $db = JFactory::getDBO();
		$user = JFactory::getUser();
		$m= date("m"); // Month value
		$de= date("d"); //today's date
		$y= date("Y"); // Year value
		$today = date('m-d-Y', mktime(0,0,0,$m,($de+1),$y));
		//$today = date('m-d-Y');

		$query = "SELECT A.id, A.rfp_id,A.prp_id,R.projectName,R.proposalDueDate,A.not_interested,P.property_name,P.property_name,P.divcounty,R.industry_id,R.proposalDueTime,A.status  FROM #__cam_vendor_availablejobs as A
				  LEFT JOIN #__cam_rfpinfo as R ON A.rfp_id = R.id
				  LEFT JOIN #__cam_property as P ON A.prp_id = P.id
				  WHERE A.status = 0 AND R.rfp_type = 'rfp' AND  A.user_id=".$user->id." AND R.publish=1 and ( A.publish=1 or A.publish=0 )  order by R.proposalDueDate,R.proposalDueTime  ASC";

		//$res_records = $this->_getList($query,$this->getState("limitstart"),$this->getState("limit"));
		$db->Setquery($query);
		$res_records = $db->loadAssocList();

		//code to get county, industry name
		for($t=0; $t<count($res_records); $t++)
		{
		$sql = "SELECT S.County,I.industry_name FROM #__cam_counties as S,  #__cam_industries as I WHERE S.id = ".$res_records[$t]['divcounty']." AND I.id=".$res_records[$t]['industry_id'];
		$db->Setquery($sql);
		$xyz = $db->loadAssocList();
		$res_records[$t]['County'] = $xyz[0]['County'];
		$res_records[$t]['industry_name'] = $xyz[0]['industry_name'];
		}
		$records = $res_records;

		for($d=0,$c=0; $d<count($records); $d++)
		{
			$main = explode('-',$records[$d]['proposalDueDate']);
			$date = $main[2].'-'.$main[0].'-'.$main[1];
			//$newdate = strtotime ( '-1 day' , strtotime ( $date ) ) ;
			$newdate = strtotime ($date) ;
			$records[$d]['proposalDueDate'] = date ( 'm-d-Y' , $newdate );
			$duedate = $this->get_duedate($records[$d]['proposalDueTime'],$records[$d]['proposalDueDate']);
			$time_left_details = $this->fnCalculateEndDateTime($duedate);
//			echo "<pre>"; print_r($time_left_details);
			 if($time_left_details['days'] == 0)
			 $time_left_details['days'] = '';
			 else
			 $time_left_details['days'] = $time_left_details['days'].' Day(s) &nbsp;';
			 $records[$d]['time_left'] = $time_left_details['days'].$time_left_details['hours'].'&nbsp;Hr(s)'.'&nbsp;'.$time_left_details['minutes'].'&nbsp;Mins';
			// if(($time_left_details['days'] > 0  || $time_left_details['hours'] > 0 || $time_left_details['minutes'] > 0))
			// {
			 $records[$d]['time_diff'] = $time_left_details['time_diff'];
			 $new_records[$c] = $records[$d];
			 $c++;
			// }
			 //else if(($time_left_details['days'] == '' ||  $time_left_details['days'] < 0) && ($time_left_details['hours'] == 0 || $time_left_details['hours'] < 0) && ($time_left_details['minutes'] == 0 || $time_left_details['minutes'] < 0))
			// {
			 // $records[$d]['time_over'] = '0Hrs';
			  //unset($records[$d]);
			 // } */


		}

		//echo count($new_records);
		$records = $new_records;
		// echo "<pre>"; print_r($records);

		// Decode to object
		for($i=0; $i<count($records); $i++)
		{
		array_unshift($records[$i],$records[$i]['time_diff']);
		array_pop($records[$i]);
		}
		if($records)
		{
		asort($records);
		sort($records);
		}
		//echo count($records);
		//echo $this->getState('limit'); echo '-----'; echo $this->getState('limitstart');
		for($p=0,$q=0; $p<count($records); $p++)
		{
			$db = JFactory::getDBO();
			$sql = "SELECT maxProposals FROM #__cam_rfpinfo WHERE id=".$records[$p]['rfp_id'];
			$db->Setquery($sql);
			$Max_bids = $db->loadResult();
			$prp_sql = "SELECT count(distinct(proposedvendorid)) FROM jos_cam_vendor_proposals WHERE rfpno=".$records[$p]['rfp_id']." AND proposaltype IN ('ITB','review','resubmit','Draft','Submit') AND Alt_bid != 'yes' ";
			$db->Setquery($prp_sql);
			$Prp_bids = $db->loadResult();
			if($Max_bids > $Prp_bids)
			{
				/*$st = 'Allow';
				$records[$p]['bid_status'] = $st;
				$p_records[$q] = $records[$p];
				$q++;*/
				$st = 'Allow';
				$records[$p]['bid_status'] = $st;
				$records[$p]['slots'] = 'notfull';
				$p_records[$q] = $records[$p];
				$q++;
			}
			else{
				$st = 'Allow';
				$records[$p]['bid_status'] = $st;
				$records[$p]['slots'] = 'full';
				$p_records[$q] = $records[$p];
				$q++;
			}
			
		}
		$records = $p_records;
		// echo count($records);

		if($this->getState('limitstart') != 0)
		{
			$ind = $mainframe->getUserStateFromRequest( "limitstart", 'limitstart', 0 );
			$ind = $ind;
		}
        else
		{
		$ind=0;
		}
		//echo count($res_records);
		for($a = $ind, $b=0; $a<count($records); $a++)
		{

			if($b<$this->getState('limit') || $this->getState('limit') == 0 )
			{
				//echo $b.'------'.$a.'---------'.$this->getState('limitstart'); echo "<br/>";
				$st = 'Allow';
				$records[$a]['bid_status'] = $st;
				$rec[$b] = $records[$a];
				$b++;
			}

		}
		// echo count($rec);
		//echo "<pre>"; print_r($rec);
		//To check the rfp invitations
			$db = JFactory::getDBO();
			$sql_inv = "SELECT rfpid FROM #__rfp_invitations WHERE vendorid=".$user->id;
			$db->Setquery($sql_inv);
			$invites = $db->loadObjectList();
			foreach($invites as $irfpid){
			$invitesar[] = $irfpid->rfpid;
			}
		for($mn=0; $mn<count($rec); $mn++){
			if($invitesar){
			$invitesar = $invitesar ;
			}
			else {
			$invitesar[] = '';
			}
		if(in_array($rec[$mn]['rfp_id'],$invitesar)) {
		$rec[$mn]['invite'] = 'yes';
		}
		else{
		$rec[$mn]['invite'] = 'no';
		}
		
		}

		//Completed	
								//echo "<pre>"; print_r($rec); exit;
		return $rec;
	}



	function get_ACH_ACCOUNT_popup()
	{
	    /*****************code to send to fnd**************************/
	    JHTML::_('behavior.modal');
		$url	= 'index2.php?option=com_content&view=article&id=48&Itemid=113';
		$status = 'width=400,height=350,menubar=yes,resizable=yes';
		//$text = '<img src="templates/camassistant_left/s/upload_certificate.gif" alt="Upload Certificate"  width="113" height="22" />';
		$text = '<strong class="blue_small2">SET UP MY ACH ACCOUNT</strong>';
        $attribs['rel']	= "{handler: 'iframe', size: {x: 680, y: 530}}";
		$attribs['class']	= 'modal';
		$attribs['title']	= JText::_( 'SET UP MY ACH ACCOUNT' );
		$attribs['style'] = "text-decoration:none";
		//$attribs['onclick'] = "window.open(this.href,'win2','".$status."'); return false;";
		$output = JHTML::_('link', JRoute::_($url), $text, $attribs);
		return $output;
		/*****************end of code to send to fnd**************************/
	}


	//function to get billing centre data of user
	function get_billing_data()
	{
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$sql = "SELECT id,payment_preference FROM #__cam_vendor_billing_centre WHERE user_id=".$user->id;
		$db->Setquery($sql);
		$data = $db->loadObjectList();
		return $data;
	}
	//function to save billing centre info
	function save_billing_centre($data)
	{
		// give me JTable object
		//echo "<pre>"; print_r($data); exit;
		$row = & $this->getTable('vendor_billing_centre');
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		//echo "<pre>"; print_r($row); exit;
		// Create the timestamp for the date field
		// Store the  detail record into the database
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
	}
	//function to get popup in vendor billing center page
	function get_billing_pledge_popup()
	{
	    /*****************code to send to fnd**************************/
	    JHTML::_('behavior.modal');
		$url	= 'index.php?option=com_camassistant&controller=vendors&task=billing_pledge_form';
		$status = 'width=400,height=350,menubar=yes,resizable=yes';
		//$text = '<img src="templates/camassistant_left/images/upload_certificate.gif" alt="Upload Certificate"  width="113" height="22" />';
		$text = '<strong class="blue_small2">enable</strong>';
        $attribs['rel']	= "{handler: 'iframe', size: {x: 680, y: 530}}";
		$attribs['class']	= 'modal';
		$attribs['title']	= JText::_( 'Pledge My Receivables' );
		$attribs['style'] = "text-decoration:none";
		//$attribs['onclick'] = "window.open(this.href,'win2','".$status."'); return false;";
		$output = JHTML::_('link', JRoute::_($url), $text, $attribs);
		return $output;
		/*****************end of code to send to fnd**************************/
	}

	function get_documentation()
	{
	    /*****************code to send to fnd**************************/
	    JHTML::_('behavior.modal');
		$url	= 'index2.php?option=com_jefaqpro&view=category&layout=categorylist&task=lists&catid=2&faq=37&Itemid=41?hidden=popup#mymenu1-37-label';
		//$status = 'width=400,height=350,menubar=yes,resizable=yes';
		//$text = '<img src="templates/camassistant_left/images/upload_certificate.gif" alt="Upload Certificate"  width="113" height="22" />';
		$text = '<strong class="blue_small2">documentation</strong>';
        $attribs['rel']	= "{handler: 'iframe', size: {x: 680, y: 400}}";
		$attribs['class']	= 'modal';
		$attribs['title']	= JText::_( 'documentation' );
		$attribs['style'] = "text-decoration:none";
		//$attribs['onclick'] = "window.open(this.href,'win2','".$status."'); return false;";
		$output = JHTML::_('link', JRoute::_($url), $text, $attribs);
		return $output;
		/*****************end of code to send to fnd**************************/
	}

	function get_rate_schedule()
	{
	    /*****************code to send to fnd**************************/
	    JHTML::_('behavior.modal');
		$url	= 'index2.php?option=com_jefaqpro&view=category&layout=categorylist&task=lists&catid=2&faq=2&Itemid=41?hidden=popup#mymenu1-2-label';
		//$status = 'width=400,height=350,menubar=yes,resizable=yes';
		//$text = '<img src="templates/camassistant_left/images/upload_certificate.gif" alt="Upload Certificate"  width="113" height="22" />';
		$text = '<strong class="blue_small2">Rate Schedule</strong>';
        $attribs['rel']	= "{handler: 'iframe', size: {x: 680, y: 400}}";
		$attribs['class']	= 'modal';
		$attribs['title']	= JText::_( 'Rate Schedule' );
		$attribs['style'] = "text-decoration:none";
		//$attribs['onclick'] = "window.open(this.href,'win2','".$status."'); return false;";
		$output = JHTML::_('link', JRoute::_($url), $text, $attribs);
		return $output;
		/*****************end of code to send to fnd**************************/
	}
	//function to get popup in vendor billing center page
	function get_enable_this_option_popup()
	{
	    /*****************code to send to fnd**************************/
	    JHTML::_('behavior.modal');
		$url	= 'index.php?option=com_camassistant&controller=vendors&task=billing_pledge_form';
		$status = 'width=400,height=350,menubar=yes,resizable=yes';
		//$text = '<img src="templates/camassistant_left/images/upload_certificate.gif" alt="Upload Certificate"  width="113" height="22" />';
		$text = '<strong class="blue_small2">ENABLE THIS OPTION</strong>';
        $attribs['rel']	= "{handler: 'iframe', size: {x: 680, y: 530}}";
		$attribs['class']	= 'modal';
		$attribs['title']	= JText::_( 'Enable This Option' );
		$attribs['style'] = "text-decoration:none";
		//$attribs['onclick'] = "window.open(this.href,'win2','".$status."'); return false;";
		$output = JHTML::_('link', JRoute::_($url), $text, $attribs);
		return $output;
		/*****************end of code to send to fnd**************************/
	}


	function get_pledge_status()
	{
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$sql = "SELECT pledge FROM #__cam_vendor_company WHERE user_id=".$user->id;
		$db->Setquery($sql);
		$pledge = $db->loadResult();
		return $pledge;
	}

	//function to get liscense categories in vendor compliance doc page
	function get_GLI_policy_configurations()
	{
		$db = JFactory::getDBO();
		$sql = "SELECT vendor_policy_limits,vendor_aggregate FROM #__cam_configuration";
		$db->Setquery($sql);
		$GLI = $db->loadObjectList();
		return $GLI;
	}

	//function to get liscense categories in vendor compliance doc page
	function get_liscense_categories()
	{
		$db = JFactory::getDBO();
		$sql = "SELECT * FROM #__compliance_license_categories order by category_name";
		$db->Setquery($sql);
		$categories = $db->loadObjectList();
		return $categories;
	}

	//function to get list of states
	function get_edit_compliance_states()
	{
		$db = JFactory::getDBO();
		$sql = "SELECT * FROM #__cam_vendor_states WHERE id != '38' order by state";
		$db->Setquery($sql);
		$states = $db->loadObjectList();
		return $states;
	}

	//function to delete upld cert file
	function get_delete_upld_cert()
	{
		$filename = JRequest::getVar('filename','');
		$tbl = JRequest::getVar('tbl','');
		$suffix = JRequest::getVar('suffix','');
		$id = JRequest::getVar('id','');
		//code to unlink image in folder
		$base_Dir = JPATH_COMPONENT.DS.'assets'.DS.'images'.DS.'vendorcompliances'.DS;
		$filename =$files['name'];
		$post['image'] = $filename;
		if(file_exists($base_Dir . $filename))
					@unlink($base_Dir . $filename);
		//code to update vendor compliances table
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		//$sql = "UPDATE #__cam_vendor_".$tbl." SET ".$suffix."_upld_cert = ''  where id=".$id." AND vendor_id='".$user->id."'";
		if($tbl == 'liability_insurence'){
		$sql = "UPDATE #__cam_vendor_".$tbl." SET ".$suffix."_upld_cert = '', GLI_end_date = '', GLI_policy_aggregate = '', GLI_policy_occurence = ''   where id=".$id." AND vendor_id='".$user->id."'"; 
		}
		else if($tbl == 'workers_companies_insurance'){
		$sql = "UPDATE #__cam_vendor_".$tbl." SET ".$suffix."_upld_cert = ''  where id=".$id." AND vendor_id='".$user->id."'"; 
		}
		else if($tbl == 'occupational_license'){
		$sql = "UPDATE #__cam_vendor_".$tbl." SET ".$suffix."_upld_cert = ''  where id=".$id." AND vendor_id='".$user->id."'"; 
		}
		else if($tbl == 'professional_license'){
		$sql = "UPDATE #__cam_vendor_".$tbl." SET ".$suffix."_upld_cert = ''  where id=".$id." AND vendor_id='".$user->id."'"; 
		}
		else if($tbl == 'workers_compansation'){
		$sql = "UPDATE #__cam_vendor_".$tbl." SET ".$suffix."_upld_cert = ''  where id=".$id." AND vendor_id='".$user->id."'"; 
		}
		else{
		$sql = "UPDATE #__cam_vendor_".$tbl." SET ".$suffix."_upld_cert = ''  where id=".$id." AND vendor_id='".$user->id."'"; 
		}
		$db->Setquery($sql);
		$db->query();
		//$prev_image = $db->loadResult();
	}

	//function to get open or save popup
	function get_open_upld_cert()
	{
		//echo 'anand'; exit;
		$db = JFactory::getDBO();
		$vndr = JRequest::getVar('vndr','');
		if($vndr == '')
		{
		$user	= JFactory::getUser();
		}
		else
		{
		$user	= JFactory::getUser($vndr);
		}
		$sql = "SELECT tax_id FROM #__cam_vendor_company   WHERE user_id=".$user->id;
		$db->setQuery($sql);
		$tax_id = $db->loadResult();
		$vendorname = $user->name.'_'.$user->lastname.'_'.$tax_id;
		$vendorname = str_replace(' ','_',$vendorname);
		$filename = JRequest::getVar('filename','');

		$filename1 = explode('/',$filename);
		$cnt = count($filename1);
		$filename2 = $filename1[$cnt-1];

		$folder_type = JRequest::getVar('folder_type','');
		$doc_type = JRequest::getVar('doc','');
		if($folder_type == 'uploaded_by_CAM')
		$path = JURI::root().'components/com_camassistant/doc';
		else if($folder_type == 'uploaded_by_VENDOR')
		$path = JURI::root().'components/com_camassistant/assets/images/rfp/Tasks';
		else
//		$path = JURI::root().'components/com_camassistant/assets/images/vendorcompliances';
		$path = JURI::root().'components/com_camassistant/assets/images/vendorcompliances/'.$vendorname.'/'.$doc_type;
		$doc_name = JURI::root()."/".$path;
		if($doc_type){
		$doc_name = $path.'/'.$filename;
		} else {
		$doc_name = JURI::root()."/".$filename;
		}
		//

		//echo $doc_name; exit;

		header("content-type: application/octet-stream");
		header("Content-Disposition: attachment; filename=".$filename2);
		readfile($doc_name);
		exit;
	}

	//function to open uploaded files in pdf
	function get_pdf_open_upld_cert()
	{
		$id = JRequest::getVar('user','');
		$user	= JFactory::getUser($id);
		$db = JFactory::getDBO();
		$sql = "SELECT tax_id FROM #__cam_vendor_company   WHERE user_id=".$user->id;
		$db->setQuery($sql);
		$tax_id = $db->loadResult();
		$vendorname1 = $user->name.'_'.$user->lastname.'_'.$tax_id;
		$vendorname = str_replace(' ','_',$vendorname1);
		$filename = JRequest::getVar('filename','');
		$folder_type = JRequest::getVar('folder_type','');
		$doc_type = JRequest::getVar('doc','');
		if($folder_type == 'uploaded_by_CAM')
		$path = JURI::root().'components/com_camassistant/doc';
		else if($folder_type == 'uploaded_by_VENDOR')
		$path = JURI::root().'components/com_camassistant/assets/images/rfp/Tasks';
		else
		$path = '/home/allen/public_html/myvendorcenter/newrepo/components/com_camassistant/assets/images/vendorcompliances/'.$vendorname.'/'.$doc_type;
		$doc_name = $path."/".$filename;
		//print_r($doc_name); exit;
	//	print_r($doc_name); exit;
		/* if ($fd = @fopen ($doc_name, "r")) {
    $fsize = filesize($doc_name);
    $path_parts = pathinfo($doc_name);

    $ext = strtolower($path_parts["extension"]);
    switch ($ext) {
        case "pdf":
        header("Content-type: application/pdf"); // add here more headers for diff. extensions
        header("Content-Disposition: attachment; filename=\"".$path_parts["basename"]."\""); // use 'attachment' to force a download
        break;
        default;
        header("Content-type: application/octet-stream");
        header("Content-Disposition: filename=\"".$path_parts["basename"]."\"");
    }
    header("Content-length: $fsize");
    header("Cache-control: private"); //use this to open files directly
    while(!feof($fd)) {
        $buffer = fread($fd, 2048);
        echo $buffer;
    }
	@fclose ($fd);
} else {
echo "uanble to read the file";
}*/

//exit;

/*
		 header("Pragma: public");
header("Expires: 0");
header("Cache-Control: must-revalidate, post-check=0, pre-check=0");
header("Content-Type: application/force-download");
header("Content-Type: application/octet-stream");
header("Content-Type: application/download");
header("Content-Disposition: attachment; filename=".basename($doc_name).";");
header("Content-Transfer-Encoding: binary");
header("Content-Length: ".filesize($doc_name));*/
	$path_parts = pathinfo($doc_name);
	//print_r($path_parts); exit;
    $ext = strtolower($path_parts["extension"]);
	//print_r($ext); exit;
  /*  switch ($ext) {
        case "pdf":
        // add here more headers for diff. extensions
        header("Content-Disposition: attachment; filename=\"".$path_parts["basename"]."\""); // use 'attachment' to force a download
        break;
        default;
        header("Content-type: application/octet-stream");
        header("Content-Disposition: filename=\"".$path_parts["basename"]."\"");
    }*/

	if($ext=='pdf'){
	 header("Content-type: application/pdf");
	} else {
	header("content-type: application/octet-stream");
	}

		header("Content-Disposition: attachment; filename=".$path_parts["basename"]);
		readfile($doc_name);


		exit;
	}

	//function to get vendor compliance WCI data
	function get_compliance_W9_data()
	{
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$sql = "SELECT * FROM #__cam_vendor_compliance_w9docs WHERE vendor_id=".$user->id;
		$db->Setquery($sql);
		$W9_data = $db->loadObjectList();
		return $W9_data;
	}

	//function to get vendor compliance WCI data
	function get_compliance_WCI_data()
	{
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$sql = "SELECT * FROM #__cam_vendor_workers_companies_insurance WHERE vendor_id=".$user->id;
		$db->Setquery($sql);
		$WCI_data = $db->loadObjectList();
		return $WCI_data;
	}
	function get_compliance_UMB_data()
	{
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$sql = "SELECT * FROM #__cam_vendor_umbrella_license WHERE vendor_id=".$user->id;
		$db->Setquery($sql);
		$UMB_data = $db->loadObjectList();
		return $UMB_data;
	}
	function get_compliance_AIP_data()
	{
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$sql = "SELECT * FROM #__cam_vendor_auto_insurance WHERE vendor_id=".$user->id;
		$db->Setquery($sql);
		$AIP_data = $db->loadObjectList();
		return $AIP_data;
	}
	//function to get vendor compliance GLI data
	function get_compliance_GLI_data()
	{
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$sql = "SELECT * FROM #__cam_vendor_liability_insurence  WHERE vendor_id=".$user->id;
		$db->Setquery($sql);
		$GLI_data = $db->loadObjectList();
		return $GLI_data;
	}

	//function to get vendor compliance OLN data
	function get_compliance_OLN_data()
	{
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$sql = "SELECT * FROM #__cam_vendor_occupational_license WHERE vendor_id=".$user->id;
		$db->Setquery($sql);
		$OLN_data = $db->loadObjectList();
		//echo "<pre>"; print_r($OLN_data); exit;
		return $OLN_data;
	}

	//function to get vendor compliance PLN data
	function get_compliance_PLN_data()
	{
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$sql = "SELECT * FROM #__cam_vendor_professional_license WHERE vendor_id=".$user->id;
		$db->Setquery($sql);
		$PLN_data = $db->loadObjectList();
		return $PLN_data;
	}

	//function to store vendor_OLN_comploances_info
function store_vendor_compliance_w9docs_info($data)
	{
	 	// give me JTable object
		//echo "<pre>"; print_r($data); exit;
		$row = & $this->getTable('vendor_compliance_w9docs');
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		//echo "<pre>"; print_r($row); exit;
		// Create the timestamp for the date field
		// Store the  detail record into the database
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		  $lastRowId = $row->id;
		return $lastRowId;
	}
	//function to store vendor_OLN_comploances_info
	function store_vendor_WCI_compliances_info($data)
	{
	 	// give me JTable object
		//echo "<pre>"; print_r($data); exit;
		$row = & $this->getTable('vendor_workers_companies_insurance');
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		//echo "<pre>"; print_r($row); exit;
		// Create the timestamp for the date field
		// Store the  detail record into the database
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		  $lastRowId = $row->id;
		return $lastRowId;
	}
        function store_vendor_WC_compliances_info($data)
	{
	 	// give me JTable object
		
		$row = & $this->getTable('vendor_workers_compansation');
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
//echo "<pre>"; print_r($data); print_r($row); exit;
		//echo "<pre>"; print_r($row); exit;
		// Create the timestamp for the date field
		// Store the  detail record into the database
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		  $lastRowId = $row->id;
		return $lastRowId;
	}

	//function to store vendor_OLN_comploances_info
	function store_vendor_GLI_compliances_info($data)
	{
	 	// give me JTable object
		//echo "<pre>"; print_r($data); exit;
		$row = & $this->getTable('vendor_liability_insurence');
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		//echo "<pre>"; print_r($row); exit;
		// Create the timestamp for the date field
		// Store the  detail record into the database
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		  $lastRowId = $row->id;
		return $lastRowId;
	}

	//function to store vendor_OLN_comploances_info
	function store_vendor_PLN_compliances_info($data)
	{
	 	// give me JTable object
		//echo "<pre>"; print_r($data); exit;
		$row = & $this->getTable('vendor_professional_license');
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		//echo "<pre>"; print_r($row); exit;
		// Create the timestamp for the date field
		// Store the  detail record into the database
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
                 $lastRowId = $row->id;
		return $lastRowId;
	}

	//function to store vendor_OLN_comploances_info
	function store_vendor_OLN_compliances_info($data)
	{
	 	// give me JTable object
		//echo "<pre>"; print_r($data); exit;
		$row = & $this->getTable('vendor_occupational_license');
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		// Create the timestamp for the date field
		// Store the  detail record into the database
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
                $lastRowId = $row->id;
               // echo $lastRowId; exit;
		return $lastRowId;
	}
	//function to store vendor_OLN_comploances_info
	function store_vendor_UMB_compliances_info($data)
	{
	 	// give me JTable object
		//echo "<pre>"; print_r($data); exit;
		$row = & $this->getTable('vendor_umbrella_license');
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		// Create the timestamp for the date field
		// Store the  detail record into the database
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
                $lastRowId = $row->id;
               // echo $lastRowId; exit;
		return $lastRowId;
	}
	//function to display states in vendor registration
	function store_vendor_aip_compliances_info($data)
	{
	 	// give me JTable object
		//echo "<pre>"; print_r($data); exit;
		$row = & $this->getTable('vendor_auto_insurance');
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		// Create the timestamp for the date field
		// Store the  detail record into the database
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
                $lastRowId = $row->id;
               // echo $lastRowId; exit;
		return $lastRowId;
	}
	function get_compliances_OLN_states()
	{
		global $mainframe;
		$db = JFactory::getDBO();
		$states[] = JHTML::_('select.option', '0', '-Select State-');
		$compliance = JRequest::getVar('compliance','');
		$compliance = $compliance+1;
		$this->_filter_vendorslist	= $mainframe->getUserStateFromRequest( $context.'filter_vendorslist', 'filter_vendorslist', 0,	'string' );
		$sql = "SELECT * FROM #__cam_vendor_states WHERE id != '38' order by state";
		$db->Setquery($sql);
		$objects = $db->loadObjectList();
		foreach( $objects as $obj )
		{
			$states[] = JHTML::_('select.option',  $obj->id, $obj->state);
		}
		//echo "<pre>"; print_r($vendorslist); exit;
		$result = JHTML::_('select.genericlist',$states, 'OLN_state[]', 'class="inputbox" size="1" ' . $javascript , 'value', 'text','', 'OLN_state'.$compliance,  $this->_filter_states);
	   return $result;
	}

	//function to display states in vendor registration
	function get_compliances_PLN_states()
	{
		global $mainframe;
		$db = JFactory::getDBO();
		$states[] = JHTML::_('select.option', '0', '-Select State-');
		$compliance = JRequest::getVar('compliance','');
		$compliance = JRequest::getVar('PLN_title','1');
		//$compliance = $compliance+1;
		$this->_filter_vendorslist	= $mainframe->getUserStateFromRequest( $context.'filter_vendorslist', 'filter_vendorslist', 0,	'string' );
		$sql = "SELECT * FROM #__cam_vendor_states WHERE id != '38' order by state";
		$db->Setquery($sql);
		$objects = $db->loadObjectList();
		foreach( $objects as $obj )
		{
			$states[] = JHTML::_('select.option',  $obj->id, $obj->state);
		}
		//echo "<pre>"; print_r($vendorslist); exit;
		$result = JHTML::_('select.genericlist',$states, 'PLN_state[]', 'class="inputbox" size="1" ' . $javascript , 'value', 'text','', 'PLN_state'.$compliance,  $this->_filter_states);
	   return $result;
	}

	//function to get w9 upload certificate link
	function get_W9_upld_cert_link()
	{
	    /*****************code to send to fnd**************************/
	    JHTML::_('behavior.modal');
        $uri	=& JURI::getInstance();
		$base	= $uri->toString( array('scheme', 'host', 'port'));
		$link	= $base;
		$url	= 'index.php?option=com_camassistant&controller=vendors&task=compliance_upload_form&text_name=W9&compliance=0';
		$status = 'width=400,height=350,menubar=yes,resizable=yes';
		$text = '<img src="templates/camassistant_left/images/uploadw9.gif" alt="Upload Certificate"  width="87" height="22" />';
        $attribs['rel']	= "{handler: 'iframe', size: {x: 660, y: 350}}";
		$attribs['class']	= 'modal';
		$attribs['title']	= JText::_( 'Upload A File' );
		//$attribs['onclick'] = "window.open(this.href,'win2','".$status."'); return false;";
		$output = JHTML::_('link', JRoute::_($url), $text, $attribs);
		return $output;
		/*****************end of code to send to fnd**************************/
	}

	//function to get OLN upload certificate link
	function get_WCI_upld_cert_link()
	{
	    /*****************code to send to fnd**************************/
	    JHTML::_('behavior.modal');
        $uri	=& JURI::getInstance();
		$base	= $uri->toString( array('scheme', 'host', 'port'));
		$link	= $base;
		$url	= 'index.php?option=com_camassistant&controller=vendors&task=compliance_upload_form&text_name=WCI&compliance=0';
		$status = 'width=400,height=350,menubar=yes,resizable=yes';
		$text = '<img src="templates/camassistant_left/images/upload_certificate.gif" alt="Upload Certificate"  width="113" height="22" />';
        $attribs['rel']	= "{handler: 'iframe', size: {x: 660, y: 350}}";
		$attribs['class']	= 'modal';
		$attribs['title']	= JText::_( 'Upload A File' );
		//$attribs['onclick'] = "window.open(this.href,'win2','".$status."'); return false;";
		$output = JHTML::_('link', JRoute::_($url), $text, $attribs);
		return $output;
		/*****************end of code to send to fnd**************************/
	}

	//function to get GLI upload certificate link
	function get_GLI_upld_cert_link()
	{
	    /*****************code to send to fnd**************************/
	    JHTML::_('behavior.modal');
        $uri	=& JURI::getInstance();
		$base	= $uri->toString( array('scheme', 'host', 'port'));
		$link	= $base;
		$url	= 'index.php?option=com_camassistant&controller=vendors&task=compliance_upload_form&text_name=GLI&compliance=0';
		$status = 'width=400,height=350,menubar=yes,resizable=yes';
		$text = '<img src="templates/camassistant_left/images/upload_certificate.gif" alt="Upload Certificate"  width="113" height="22" />';
        $attribs['rel']	= "{handler: 'iframe', size: {x: 660, y: 350}}";
		$attribs['class']	= 'modal';
		$attribs['title']	= JText::_( 'Upload A File' );
		//$attribs['onclick'] = "window.open(this.href,'win2','".$status."'); return false;";
		$output = JHTML::_('link', JRoute::_($url), $text, $attribs);
		return $output;
		/*****************end of code to send to fnd**************************/
	}

	//function to get OLN upload certificate link
	function get_OLN_upld_cert_link()
	{
	    /*****************code to send to fnd**************************/
	    JHTML::_('behavior.modal');
        $uri	=& JURI::getInstance();
		$compliance = JRequest::getVar('compliance','0');
		//$compliance = $compliance+1;
		$base	= $uri->toString( array('scheme', 'host', 'port'));
		$link	= $base;
		$url	= 'index.php?option=com_camassistant&controller=vendors&task=compliance_upload_form&text_name=OLN&compliance='.$compliance;
		$status = 'width=400,height=350,menubar=yes,resizable=yes';
		$text = '<img src="templates/camassistant_left/images/upload_certificate.gif" alt="Upload Certificate"  width="113" height="22" />';
        $attribs['rel']	= "{handler: 'iframe', size: {x: 660, y: 350}}";
		$attribs['class']	= 'modal';
		$attribs['title']	= JText::_( 'Upload A File' );
		//$attribs['onclick'] = "window.open(this.href,'win2','".$status."'); return false;";
		$output = JHTML::_('link', JRoute::_($url), $text, $attribs);
		return $output;
		/*****************end of code to send to fnd**************************/
	}


	//function to get OLN upload certificate link
	function get_PLN_upld_cert_link()
	{
	    /*****************code to send to fnd**************************/
	    JHTML::_('behavior.modal');
        $uri	=& JURI::getInstance();
		$compliance = JRequest::getVar('compliance','0');
		//$compliance = $compliance+1;
		$base	= $uri->toString( array('scheme', 'host', 'port'));
		$link	= $base;
		$url	= 'index.php?option=com_camassistant&controller=vendors&task=compliance_upload_form&text_name=PLN&compliance='.$compliance;
		$status = 'width=400,height=350,menubar=yes,resizable=yes';
		$text = '<img src="templates/camassistant_left/images/upload_certificate.gif" alt="Upload Certificate"  width="113" height="22" />';
        $attribs['rel']	= "{handler: 'iframe', size: {x: 660, y: 350}}";
		$attribs['class']	= 'modal';
		$attribs['title']	= JText::_( 'Upload A File' );
		//$attribs['onclick'] = "window.open(this.href,'win2','".$status."'); return false;";
		$output = JHTML::_('link', JRoute::_($url), $text, $attribs);
		return $output;
		/*****************end of code to send to fnd**************************/
	}

	//function to get user billing info
	function get_billing_info()
	{
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$bill_info_sql = "SELECT * #__cam_vendor_billing WHERE user_id=".$user->id;
		$db->Setquery($bill_info_sql);
		$bill_info = $db->loadObjectList();
		return $bill_info;
	}

	//function to get payment gateway details
	function getBilling_Payment()
	{
		$db = JFactory::getDBO();
		$pay_sql = "SELECT payment_type,pay_name,pay_currency,pay_busness_email,auth_tx_key,auth_login_id FROM #__cam_configuration WHERE id=1";
		$db->Setquery($pay_sql);
		$Billing_Payment = $db->loadObjectList();
		return $Billing_Payment;
	}

	//function to get RFP, property, customer info
	//using this function in vendor_proposal_form and vendor_proposal_summary
	function get_RFPinfo()
	{
		$rfp_id = JRequest::getVar('rfp_id','');
	    $db = JFactory::getDBO();
		//code to get RFP Camfirm details
		$custid_sql = "SELECT cust_id FROM #__cam_rfpinfo where id=".$rfp_id;
		$db->Setquery($custid_sql);
		$firm_or_Mgr_id = $db->loadResult();
		$compid_sql = "SELECT comp_id FROM #__cam_customer_companyinfo where cust_id=".$firm_or_Mgr_id;
		$db->Setquery($compid_sql);
		$compid = $db->loadResult();
		if($compid == 0)
		$customer_id	=	$firm_or_Mgr_id;
		else
		{
			$Camfirm_sql = "SELECT cust_id FROM #__cam_camfirminfo where id=".$compid;
			$db->Setquery($Camfirm_sql);
			$Camfirm_id		=	$db->loadResult();
			$customer_id	=	$Camfirm_id;
		}
		//end of code
		// C.comp_id and  C.cust_id are added by anil_17-08-2011 for pdf generation manager logo purpose in the below query.
		$sql = 'SELECT U.name, U.lastname, U.email, U.extension, U.phone, C.comp_name, C.comp_city, C.comp_state, comp_zip,  C.comp_phno, C.comp_extnno, C.comp_alt_phno, C.comp_alt_extnno, C.comp_website, C.mailaddress, C.comp_logopath, C.comp_id, C.cust_id, P.street, P.property_name, P.state, P.city, P.zip, R.id, R.industry_id, R.startDate, R.endDate, R.projectName,R.work_perform, R.frequency, R.proposalDueDate, R.proposalDueTime, R.bidding, R.jobtype, R.jobnotes, R.cust_id FROM #__cam_rfpinfo as R
		LEFT JOIN  #__cam_customer_companyinfo as C ON ( R.cust_id = C.cust_id  OR  R.cust_id != C.cust_id )
		LEFT JOIN  #__cam_property as P ON R.property_id = P.id
		LEFT JOIN  #__users as U ON (R.cust_id = U.id  OR R.cust_id != U.id)  WHERE R.id = '.$rfp_id.' AND C.cust_id	=	'.$customer_id.' AND U.id	=	'.$customer_id;
		$db->Setquery($sql);
		$RFP_details = $db->loadObjectList();
		//echo "<pre>"; print_r($RFP_details); exit;
		return $RFP_details;
	}
	//function to get status --- if payment is success in vendor billing //code by lalitha
	function update_payment_status($status)
	{
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		//echo "<pre>"; print_r($_REQUEST); exit;
		if($status == 'paid')
		{
		$sql = "UPDATE #__cam_vendor_billing  SET status='".$status."' where user_id=".$user->id;
		$db->setQuery($sql);
		$db->query();
		//code to send payment confimation  email to user
		$get_name_sql='SELECT CONCAT(U.name," " ,U.lastname) "Fullname", email FROM #__users as U where U.id='.$user->id;
		$db->Setquery($get_name_sql);
		$vendor = $db->loadObjectList();
		$mailfrom = 'support@myvendorcenter.com';
		$fromname = 'MyVendorCenter.com';
		$assignuseremail = $vendor[0]->email;
		$mailsubject = 'Payment has been approved';
		//$body = $body_content;
		$body_text = "SELECT introtext  FROM #__content where id='165'";
		$db->Setquery($body_text);
		$body_msg = $db->loadResult();

		$body = str_replace('{VENDOR NAME}',$vendor[0]->Fullname,$body_msg) ;
		//$body = "Hai ".$vendor[0]->Fullname."! <br/>Your Payment has been approved successfully.<br/><br/>At Your Service,<br/><br/>CAMassistant.com";
		$mailfrom = 'support@myvendorcenter.com';
		$fromname = 'MyVendorCenter Team';
		$assignuseremail = $vendor[0]->email;
		if(JUtility::sendMail($mailfrom, $fromname, $assignuseremail, $mailsubject, $body,$mode = 1)) echo 'mail sent';
		}
		else
		{
		$sql = "DELETE FROM #__cam_vendor_billing where user_id=".$user->id;
		$db->setQuery($sql);
		$db->query();
		}

		//end of code to send payment confimation  email to user
	}

	//function to calculate due time left for RFP's
	function fnCalculateEndDateTime($enddate,$ds='Day',$hs='Hrs',$ms='Min')
	{
		$today = time();
		//echo $today = '2011-09-0701:16:00';
		//$today = strtotime($today); echo '------------';
		//echo $enddate = '2011-09-0702:00:00';
		//exit;
		//echo "Hii-->".strtotime($enddate);
		$mk_enddate =  strtotime($enddate);
		$cal_time['time_diff'] = $difference = $mk_enddate-$today;
		$days = floor($difference/(60*60*24));

		$rem = $difference%(60*60*24);

		$hours = floor($rem/(60*60));
		$rem1 = $rem%(60*60);
		$minutes = floor($rem1/60);

		$seconds = $rem1%60;
		if($ds!='d')
		{
		if($days!='' && $ds!='d')
			$d = $days."&nbsp;".$ds.($days == 1 ? '' : 's')." &nbsp;";
		if($days!='' && $ds=='d')
		   $d.=$days."&nbsp;".$ds." &nbsp;";
		if($hours!='')
			$h = $hours."&nbsp;".$hs." &nbsp;";
		if($minutes!='')
			$m = $minutes."&nbsp;".$ms."";
		}
		else if($ds=='d')
		{
		if($days!='' && $ds!='d')
			$d = $days.$ds.($days == 1 ? '' : 's')." &nbsp;";
		if($days!='' && $ds=='d')
		   $d.=$days.$ds." &nbsp;";
		if($hours!='')
			$h = $hours.$hs." &nbsp;";
		if($minutes!='')
			$m = $minutes.$ms."";
		}
	   //echo $days."d ".$hours."h ".$minutes."m ".$seconds."s";
		$cal_time['time_left'] = $d.$h.$m;
		$cal_time['days'] = $days;
		$cal_time['hours'] = $hours;
		$cal_time['minutes'] = $minutes;
		$cal_time['seconds'] = $seconds;
		//echo "<pre>"; print_r($cal_time);
		return $cal_time;

	}//fnCalculateEndDateTime

	function get_duedate($due_time,$due_date)
	{
		/*$hr_min = substr($due_time, 0, -2);  // returns "7:00"
		$am_pm = substr($due_time, -2);    // returns "AM" OR "PM"
		if($am_pm == 'PM')
		{
		$min = substr($hr_min, -2);
		$hr = substr($hr_min, 0, -3);
		$x = substr($due_time, 0, 2);
		if($x != 12)
		$hr = $hr + 12;
		}
		else if($am_pm == 'AM')
		{
		$min = substr($hr_min, -2);
		$hr = substr($hr_min, 0, -3);
		}
		$D_date = explode('-',$due_date);
		$due_date = $D_date[2].'-'.$D_date[0].'-'.$D_date[1];
		$duedate = $due_date.''.$hr.':'.$min.':00';*/
		$D_date = explode('-',$due_date);
		$due_date = $D_date[2].'-'.$D_date[0].'-'.$D_date[1];
		$duedate	=	$due_date.''.$due_time.':00';
		return $duedate;
	}
	 //function to open document
	function view_upld_cert()
	{
		$filename = JRequest::getVar('filename','');
		$path = JURI::root().'components/com_camassistant/assets/images/vendorcompliances';
		$doc_name = $path."/".$filename;
		header("content-type: application/octet-stream");
		header("Content-Disposition: attachment; filename=".$doc_name);
		readfile($doc_name);
		exit;
		//parent::display();
	}


 function get_COM_docs_summary_new()
	 {
		$db = JFactory::getDBO();
		$rfp_id = JRequest::getVar('rfp_id','');
		$vendors_list = $this->get_vendors_cnt();
		//echo "<pre>"; print_r($vendors_list);
		$COM = array();

		for($v=0; $v<count($vendors_list); $v++)
		{
			    //code to get OLN docs
				 $sql = "SELECT OLN_upld_cert FROM #__cam_vendor_occupational_license  where OLN_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid;
				$db->Setquery($sql);
				$OLN = $db->loadResultArray();
				for($i=0; $i<count($OLN); $i++)
				{
				$ext = substr($OLN[$i], -3);
                   $sql = "SELECT OLN_folder_id FROM #__cam_vendor_occupational_license  where OLN_status = 1 AND OLN_upld_cert='".$OLN[$i]."'";
		$db->Setquery($sql);
		$OLN_folder_id = $db->loadResult();
					/* anil_29-09-2011 */
					$no=$OLN_folder_id;
				//$no=$i+1;

		$user	= JFactory::getUser($vendors_list[$v]->proposedvendorid);
		$db = JFactory::getDBO();
		$sql = "SELECT tax_id FROM #__cam_vendor_company   WHERE user_id=".$vendors_list[$v]->proposedvendorid;
		$db->setQuery($sql);
		$tax_id = $db->loadResult();
		$vendorname = $user->name.'_'.$user->lastname.'_'.$tax_id;
		//$vendorname = str_replace(' ','_',$vendorname1);;
		$filename = $OLN[$i];
		$folder_type = JRequest::getVar('folder_type','');
		$j=$OLN_folder_id;
		$doc_type = 'OLN_'.$j;
		if($folder_type == 'uploaded_by_CAM')
		$path = JURI::root().'components/com_camassistant/doc';
		else if($folder_type == 'uploaded_by_VENDOR')
		$path = JURI::root().'components/com_camassistant/assets/images/rfp/Tasks';
		else
		$path = 'vendorcompliances/'.str_replace(' ','_',$vendorname).'/'.$doc_type;
		$doc_name = $path."/";
		//$path_parts = pathinfo($doc_name);
	//print_r($path_parts); exit;
   // $ext = strtolower($path_parts["extension"]);



				$OLN[$i] = '<a   style="color:#7AB800; text-decoration:none;" href="'.JURI::root().'components/com_camassistant/assets/images/download.php?f='.$OLN[$i].'&base='.$doc_name.'">'.$OLN[$i].'</a>';
				//$OLN[$i] = '<a style="color:#7AB800; text-decoration:none;" href="'.JURI::root().'index.php?option=com_camassistant&controller=vendors&user='.$vendors_list[$v]->proposedvendorid.'&task=pdf_view_upld_cert&doc=OLN_'.$no.'&filename='.$OLN[$i].'">'.$OLN[$i].'</a>';
				}
				$OLN = implode(',',$OLN);
				$COM[$v]['OLN'] = $OLN;
//echo '<pre>'; print_r($OLN);
				//code to get PLN docs
				$sql = "SELECT PLN_upld_cert FROM #__cam_vendor_professional_license  where PLN_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid;
				$db->Setquery($sql);
				$PLN = $db->loadResultArray();
				//echo "<pre>"; print_r($PLN); echo "</pre>";
				for($i=0; $i<count($PLN); $i++)
				{
				$ext = substr($PLN[$i], -3);
				 $sql = "SELECT PLN_folder_id FROM #__cam_vendor_professional_license  where PLN_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid." AND  PLN_upld_cert='".$PLN[$i]."'";
		$db->Setquery($sql);
		$PLN_folder_id = $db->loadResult();
		//echo "<br />".$PLN_folder_id.'<br />';
					$no=$PLN_folder_id;

				$user	= JFactory::getUser($vendors_list[$v]->proposedvendorid);
		$db = JFactory::getDBO();
		$sql = "SELECT tax_id FROM #__cam_vendor_company   WHERE user_id=".$vendors_list[$v]->proposedvendorid;
		$db->setQuery($sql);
		$tax_id = $db->loadResult();
		$vendorname = $user->name.'_'.$user->lastname.'_'.$tax_id;
		//$vendorname = str_replace(' ','_',$vendorname1);;
		$filename = $PLN[$i];
		$folder_type = JRequest::getVar('folder_type','');
		$k=$PLN_folder_id;
		$doc_type = 'PLN_'.$k;
		if($folder_type == 'uploaded_by_CAM')
		$path = JURI::root().'components/com_camassistant/doc';
		else if($folder_type == 'uploaded_by_VENDOR')
		$path = JURI::root().'components/com_camassistant/assets/images/rfp/Tasks';
		else
		$path = 'vendorcompliances/'.str_replace(' ','_',$vendorname).'/'.$doc_type;
		$doc_name = $path."/";
		//$path_parts = pathinfo($doc_name);
	//print_r($path_parts); exit;
   // $ext = strtolower($path_parts["extension"]);



				$PLN[$i] = '<a style="color:#7AB800; text-decoration:none;" href="'.JURI::root().'components/com_camassistant/assets/images/download.php?f='.$PLN[$i].'&base='.$doc_name.'">'.$PLN[$i].'</a>';
				//$PLN[$i] = '<a style="color:#7AB800; text-decoration:none;" href="'.JURI::root().'index.php?option=com_camassistant&controller=vendors&user='.$vendors_list[$v]->proposedvendorid.'&task=pdf_view_upld_cert&doc=PLN_'.$no.'&filename='.$PLN[$i].'">'.$PLN[$i].'</a>';
				}
				$PLN = implode(',',$PLN);
				$COM[$v]['PLN'] = $PLN;

				//code to get GLI docs
				$sql = "SELECT GLI_upld_cert FROM #__cam_vendor_liability_insurence  where GLI_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid;
				$db->Setquery($sql);
				$GLI = $db->loadResultArray();
				for($i=0; $i<count($GLI); $i++)
				{
				$ext = substr($GLI[$i], -3);
				 $sql = "SELECT GLI_folder_id FROM #__cam_vendor_liability_insurence  where GLI_status = 1 AND GLI_upld_cert='".$GLI[$i]."'";
		$db->Setquery($sql);
		$GLI_folder_id = $db->loadResult();
        $no=$GLI_folder_id;

		$user	= JFactory::getUser($vendors_list[$v]->proposedvendorid);
		$db = JFactory::getDBO();
		$sql = "SELECT tax_id FROM #__cam_vendor_company   WHERE user_id=".$vendors_list[$v]->proposedvendorid;
		$db->setQuery($sql);
		$tax_id = $db->loadResult();
		$vendorname = $user->name.'_'.$user->lastname.'_'.$tax_id;
		//$vendorname = str_replace(' ','_',$vendorname1);;
		$filename = $GLI[$i];
		$folder_type = JRequest::getVar('folder_type','');
		$l=$GLI_folder_id;
		$doc_type = 'GLI_'.$l;
		if($folder_type == 'uploaded_by_CAM')
		$path = JURI::root().'components/com_camassistant/doc';
		else if($folder_type == 'uploaded_by_VENDOR')
		$path = JURI::root().'components/com_camassistant/assets/images/rfp/Tasks';
		else
		$path = 'vendorcompliances/'.str_replace(' ','_',$vendorname).'/'.$doc_type;
		$doc_name = $path."/";
		//$path_parts = pathinfo($doc_name);
	//print_r($path_parts); exit;
   // $ext = strtolower($path_parts["extension"]);


				$GLI[$i] = '<a style="color:#7AB800; text-decoration:none;" href="'.JURI::root().'components/com_camassistant/assets/images/download.php?f='.$GLI[$i].'&base='.$doc_name.'">'.$GLI[$i].'</a>';

				//$GLI[$i] = '<a style="color:#7AB800; text-decoration:none;" href="'.JURI::root().'index.php?option=com_camassistant&controller=vendors&user='.$vendors_list[$v]->proposedvendorid.'&task=pdf_view_upld_cert&doc=GLI_'.$no.'&filename='.$GLI[$i].'">'.$GLI[$i].'</a>';
				}
				$GLI = implode(',',$GLI);
				$COM[$v]['GLI'] = $GLI;

				$sql = "SELECT vendor_id  FROM #__cam_vendor_compliance_w9docs WHERE w9_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid;
				$db->Setquery($sql);
				$vendor_id = $db->loadResultArray();

				//code to display WCI docs
				$sql = "SELECT WCI_upld_cert FROM #__cam_vendor_workers_companies_insurance  where WCI_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid;
				$db->Setquery($sql);
				$WCI = $db->loadResultArray();
				for($i=0; $i<count($WCI); $i++)
				{
				$ext = substr($WCI[$i], -3);
				$sql = "SELECT WCI_folder_id FROM #__cam_vendor_workers_companies_insurance  where WCI_status = 1 AND WCI_upld_cert='".$WCI[$i]."'";
		$db->Setquery($sql);
		$WCI_folder_id = $db->loadResult();
					$no=$WCI_folder_id;

				$user	= JFactory::getUser($vendors_list[$v]->proposedvendorid);
		$db = JFactory::getDBO();
		$sql = "SELECT tax_id FROM #__cam_vendor_company   WHERE user_id=".$vendors_list[$v]->proposedvendorid;
		$db->setQuery($sql);
		$tax_id = $db->loadResult();
		$vendorname = $user->name.'_'.$user->lastname.'_'.$tax_id;
		//$vendorname = str_replace(' ','_',$vendorname1);;
		$filename = $WCI[$i];
		$folder_type = JRequest::getVar('folder_type','');
		$m=$WCI_folder_id;
		$doc_type = 'WCI_'.$m;
		if($folder_type == 'uploaded_by_CAM')
		$path = JURI::root().'components/com_camassistant/doc';
		else if($folder_type == 'uploaded_by_VENDOR')
		$path = JURI::root().'components/com_camassistant/assets/images/rfp/Tasks';
		else
		$path = 'vendorcompliances/'.str_replace(' ','_',$vendorname).'/'.$doc_type;
		$doc_name = $path."/";
		//$path_parts = pathinfo($doc_name);
	//print_r($path_parts); exit;
   // $ext = strtolower($path_parts["extension"]);

				$WCI[$i] = '<a style="color:#7AB800; text-decoration:none;" href="'.JURI::root().'components/com_camassistant/assets/images/download.php?f='.$WCI[$i].'&base='.$doc_name.'">'.$WCI[$i].'</a>';
				//$WCI[$i] = '<a style="color:#7AB800; text-decoration:none;" href="'.JURI::root().'index.php?option=com_camassistant&controller=vendors&user='.$vendors_list[$v]->proposedvendorid.'&task=pdf_view_upld_cert&doc=WCI_'.$no.'&filename='.$WCI[$i].'">'.$WCI[$i].'</a>';
				}
				$WCI = implode(',',$WCI);
				$COM[$v]['WCI'] = $WCI;

				//W9 files
				$sql = "SELECT w9_upld_cert FROM #__cam_vendor_compliance_w9docs   where w9_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid;
				$db->Setquery($sql);
				$W9 = $db->loadResult();
				if($W9 != '')
				{
				$ext2 = substr($W9, -3);
		$user	= JFactory::getUser($vendors_list[$v]->proposedvendorid);
		$db = JFactory::getDBO();
		$sql = "SELECT tax_id FROM #__cam_vendor_company   WHERE user_id=".$vendors_list[$v]->proposedvendorid;
		$db->setQuery($sql);
		$tax_id = $db->loadResult();
		$vendorname = $user->name.'_'.$user->lastname.'_'.$tax_id;
		//$vendorname = str_replace(' ','_',$vendorname1);;
		$filename = $W9;
		$folder_type = JRequest::getVar('folder_type','');
		$doc_type = 'W9';
		if($folder_type == 'uploaded_by_CAM')
		$path = JURI::root().'components/com_camassistant/doc';
		else if($folder_type == 'uploaded_by_VENDOR')
		$path = JURI::root().'components/com_camassistant/assets/images/rfp/Tasks';
		else
		$path = 'vendorcompliances/'.str_replace(' ','_',$vendorname).'/'.$doc_type;
		$doc_name = $path."/";
		//$path_parts = pathinfo($doc_name);
	//print_r($path_parts); exit;
   // $ext = strtolower($path_parts["extension"]);

				$W9 = '<a style="color:#7AB800; text-decoration:none;" href="'.JURI::root().'components/com_camassistant/assets/images/download.php?f='.$W9.'&base='.$doc_name.'">'.$W9.'</a>';
				//$W9 = '<a style="color:#7AB800; text-decoration:none;" href="'.JURI::root().'index.php?option=com_camassistant&controller=vendors&user='.$vendors_list[$v]->proposedvendorid.'&task=pdf_view_upld_cert&doc=W9&filename='.$W9.'">'.$W9.'</a>';
				$COM[$v]['W9'] = $W9;
				}
				//Warranty info files
				 $sql = "SELECT warranty_filepath,warranty_file_text,warranty_file_area FROM #__cam_vendor_proposals where rfpno = ".$rfp_id." AND proposedvendorid=".$vendors_list[$v]->proposedvendorid;
				$db->Setquery($sql);
				$warranty = $db->loadObjectList();

				//echo "<pre>"; print_r($warranty);
			$user	= JFactory::getUser($vendors_list[$v]->proposedvendorid);
		$db = JFactory::getDBO();
		$sql = "SELECT tax_id FROM #__cam_vendor_company WHERE user_id=".$vendors_list[$v]->proposedvendorid;
		$db->setQuery($sql);
		$tax_id = $db->loadResult();
		$vendorname = $user->name.'_'.$user->lastname.'_'.$tax_id;
		//$vendorname = str_replace(' ','_',$vendorname1);;
		$filename = $warranty[0]->warranty_file_text;
		$warranty_filepath = $warranty[0]->warranty_filepath;
		//print_r($warranty_filepath); exit;
		$warranty_filepath1= explode('/',$warranty_filepath);
		//echo "<pre>"; print_r($warranty_filepath1);
		$cnt = count($warranty_filepath1);
		$dpath = $warranty_filepath1[$cnt-2];
		//print_r($dpath);
		$folder_type = JRequest::getVar('folder_type','');
		$doc_type = 'warranty';
		if($folder_type == 'uploaded_by_CAM')
		$path = JURI::root().'components/com_camassistant/doc';
		else if($folder_type == 'uploaded_by_VENDOR')
		$path = JURI::root().'components/com_camassistant/assets/images/rfp/Tasks';
		else
		 $path = 'vendorcompliances/'.str_replace(' ','_',$vendorname).'/'.$dpath;
		 $doc_name = $path."/";
		//exit;
		//$path_parts = pathinfo($doc_name);
	//print_r($path_parts); exit;
   // $ext = strtolower($path_parts["extension"]);


				if($warranty[0]->warranty_filepath != '')
				{
				$COM[$v]['WARRANTY'] = '<a style="color:#7AB800; text-decoration:none;" href="'.JURI::root().'index2.php?option=com_camassistant&controller=proposals&task=downloadfile&title='.$warranty[0]->warranty_file_text.'&path='.$warranty_filepath.'">'.$warranty[0]->warranty_file_text.'</a>';
				//$COM[$v]['WARRANTY'] = '<a style="color:#7AB800; text-decoration:none;" href="'.JURI::root().'index.php?option=com_camassistant&controller=proposals&task=downloadfile&title='.$warranty[0]->warranty_file_text.'&path='.$warranty[0]->warranty_filepath.'">'.$warranty[0]->warranty_file_text.'</a>';
				}
				else if($warranty[0]->warranty_file_text != '' && $warranty[0]->warranty_filepath == '')
				{$COM[$v]['WARRANTY'] = $warranty[0]->warranty_file_text;}
				else
				$COM[$v]['WARRANTY'] = 'None';

				if($warranty[0]->warranty_file_area != '')
				{
				$COM[$v]['WARRANTYtext'] = $warranty[0]->warranty_file_area;
				}
				else{
				$COM[$v]['WARRANTYtext'] = 'No text entered. If no attachment is provided, please contact vendor.';
				}


//exit;
		} //sort($COM);
      // echo '<pre>'; print_r($COM); exit;
		return $COM;
	 }


	 //function to get vendor compilance docs in PDF
	 function get_COM_docs_summary()
	 {
		$db = JFactory::getDBO();
		$rfp_id = JRequest::getVar('rfp_id','');
		$vendors_list = $this->get_vendors_cnt();
		//echo "<pre>"; print_r($vendors_list); exit;
		$COM = array();

		for($v=0; $v<count($vendors_list); $v++)
		{
			    //code to get OLN docs
				$sql = "SELECT OLN_upld_cert FROM #__cam_vendor_occupational_license  where OLN_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid;
				$db->Setquery($sql);
				$OLN = $db->loadResultArray();
				for($i=0; $i<count($OLN); $i++)
				{
				$ext = substr($OLN[$i], -3);
				 $sql = "SELECT OLN_folder_id FROM #__cam_vendor_occupational_license  where OLN_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid." AND OLN_upld_cert='".$OLN[$i]."'";
		$db->Setquery($sql);
		$OLN_folder_id = $db->loadResult();
					/* anil_29-09-2011 */
					$no=$OLN_folder_id;
				$OLN[$i] = '<a style="color:#7AB800; text-decoration:none;" href="'.JURI::root().'index.php?option=com_camassistant&controller=vendors&user='.$vendors_list[$v]->proposedvendorid.'&task=pdf_view_upld_cert&doc=OLN_'.$no.'&filename='.$OLN[$i].'">'.$OLN[$i].'</a>';
				}
				$OLN = implode(',',$OLN);
				$COM[$v]['OLN'] = $OLN;

				//code to get PLN docs
				$sql = "SELECT PLN_upld_cert FROM #__cam_vendor_professional_license  where PLN_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid;
				$db->Setquery($sql);
				$PLN = $db->loadResultArray();
				for($i=0; $i<count($PLN); $i++)
				{
				$ext = substr($PLN[$i], -3);
				 $sql = "SELECT PLN_folder_id FROM #__cam_vendor_professional_license  where PLN_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid." AND PLN_upld_cert='".$PLN[$i]."'";
		$db->Setquery($sql);
		$PLN_folder_id = $db->loadResult();
					$no=$PLN_folder_id;
					if($no == 0){ $no = 1; } else { $no = $no ; }
				$PLN[$i] = '<a style="color:#7AB800; text-decoration:none;" href="'.JURI::root().'index.php?option=com_camassistant&controller=vendors&user='.$vendors_list[$v]->proposedvendorid.'&task=pdf_view_upld_cert&doc=PLN_'.$no.'&filename='.$PLN[$i].'">'.$PLN[$i].'</a>';
				}
				$PLN = implode(',',$PLN);
				$COM[$v]['PLN'] = $PLN;

				//code to get GLI docs
				$sql = "SELECT GLI_upld_cert FROM #__cam_vendor_liability_insurence  where GLI_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid;
				$db->Setquery($sql);
				$GLI = $db->loadResultArray();
				for($i=0; $i<count($GLI); $i++)
				{
				$ext = substr($GLI[$i], -3);
				 $sql = "SELECT GLI_folder_id FROM #__cam_vendor_liability_insurence  where GLI_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid." AND GLI_upld_cert='".$GLI[$i]."'";
		$db->Setquery($sql);
		$GLI_folder_id = $db->loadResult();
        $no=$GLI_folder_id;
				if($no == 0){ $no = 1; } else { $no = $no ; }
				$GLI[$i] = '<a style="color:#7AB800; text-decoration:none;" href="'.JURI::root().'index.php?option=com_camassistant&controller=vendors&user='.$vendors_list[$v]->proposedvendorid.'&task=pdf_view_upld_cert&doc=GLI_'.$no.'&filename='.$GLI[$i].'">'.$GLI[$i].'</a>';
				}
				$GLI = implode(',',$GLI);
				$COM[$v]['GLI'] = $GLI;

				$sql = "SELECT vendor_id  FROM #__cam_vendor_compliance_w9docs WHERE w9_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid;
				$db->Setquery($sql);
				$vendor_id = $db->loadResultArray();

				//code to display WCI docs
				$sql = "SELECT WCI_upld_cert FROM #__cam_vendor_workers_companies_insurance  where WCI_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid;
				$db->Setquery($sql);
				$WCI = $db->loadResultArray();
				for($i=0; $i<count($WCI); $i++)
				{
				$ext = substr($WCI[$i], -3);
				$sql = "SELECT WCI_folder_id FROM #__cam_vendor_workers_companies_insurance  where WCI_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid." AND WCI_upld_cert='".$WCI[$i]."'";
		$db->Setquery($sql);
		$WCI_folder_id = $db->loadResult();
					$no=$WCI_folder_id;
					if($no == 0){ $no = 1; } else { $no = $no ; }
				$WCI[$i] = '<a style="color:#7AB800; text-decoration:none;" href="'.JURI::root().'index.php?option=com_camassistant&controller=vendors&user='.$vendors_list[$v]->proposedvendorid.'&task=pdf_view_upld_cert&doc=WCI_'.$no.'&filename='.$WCI[$i].'">'.$WCI[$i].'</a>';
				}
				$WCI = implode(',',$WCI);
				$COM[$v]['WCI'] = $WCI;
				// code to display auto insurence

		$sql = "SELECT aip_upld_cert FROM #__cam_vendor_auto_insurance  where aip_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid;
				$db->Setquery($sql);
				$aip = $db->loadResultArray();
				for($i=0; $i<count($aip); $i++)
				{
				$ext = substr($aip[$i], -3);
				$sql = "SELECT aip_folder_id FROM #__cam_vendor_auto_insurance  where aip_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid." AND aip_upld_cert='".$aip[$i]."'";
		$db->Setquery($sql);
		$aip_folder_id = $db->loadResult();
					$no=$aip_folder_id;
				$aip[$i] = '<a style="color:#7AB800; text-decoration:none;" href="'.JURI::root().'index.php?option=com_camassistant&controller=vendors&user='.$vendors_list[$v]->proposedvendorid.'&task=pdf_view_upld_cert&doc=aip_'.$no.'&filename='.$aip[$i].'">'.$aip[$i].'</a>';
				}
				$aip = implode(',',$aip);
				$COM[$v]['aip'] = $aip;
				//W9 files
				$sql = "SELECT w9_upld_cert FROM #__cam_vendor_compliance_w9docs   where w9_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid." AND vendor_id=".$vendors_list[$v]->proposedvendorid;
				$db->Setquery($sql);
				$W9 = $db->loadResult();
				if($W9 != '')
				{
				$ext2 = substr($W9, -3);
				//$user	= JFactory::getUser($vendors_list[$v]->proposedvendorid);
//		$db = JFactory::getDBO();
//		$sql = "SELECT tax_id FROM #__cam_vendor_company   WHERE user_id=".$vendors_list[$v]->proposedvendorid;
//		$db->setQuery($sql);
//		$tax_id = $db->loadResult();
//		$vendorname1 = $user->name.'_'.$user->lastname.'_'.$tax_id;
//		$vendorname = str_replace(' ','_',$vendorname1);;
//		$filename = $W9;
//		$folder_type = JRequest::getVar('folder_type','');
//		$doc_type = 'W9';
//		if($folder_type == 'uploaded_by_CAM')
//		$path = JURI::root().'components/com_camassistant/doc';
//		else if($folder_type == 'uploaded_by_VENDOR')
//		$path = JURI::root().'components/com_camassistant/assets/images/rfp/Tasks';
//		else
//		$path = 'vendorcompliances/'.$vendorname.'/'.$doc_type;
//		$doc_name = $path."/".$filename;

				//$W9 = '<a style="color:#7AB800; text-decoration:none;" href="'.JURI::root().'components/com_camassistant/assets/images/download.php?f='.$W9.'&base='..   ">'.$W9.'</a>';
				$W9 = '<a style="color:#7AB800; text-decoration:none;" href="'.JURI::root().'index.php?option=com_camassistant&controller=vendors&user='.$vendors_list[$v]->proposedvendorid.'&task=pdf_view_upld_cert&doc=W9&filename='.$W9.'">'.$W9.'</a>';
				$COM[$v]['W9'] = $W9;
				}
				//Warranty info files
				$sql = "SELECT warranty_filepath,warranty_file_text,warranty_file_area FROM #__cam_vendor_proposals   where rfpno = ".$rfp_id." AND proposedvendorid=".$vendors_list[$v]->proposedvendorid;
				$db->Setquery($sql);
				$warranty = $db->loadObjectList();
				//echo "<pre>"; print_r($warranty);
				if($warranty[0]->warranty_filepath != '')
				{
				$COM[$v]['WARRANTY'] = '<a style="color:#7AB800; text-decoration:none;" href="'.JURI::root().'index2.php?option=com_camassistant&controller=proposals&task=downloadfile&title='.$warranty[0]->warranty_file_text.'&path='.$warranty_filepath.'">'.$warranty[0]->warranty_file_text.'</a>';
				//$COM[$v]['WARRANTY'] = '<a style="color:#7AB800; text-decoration:none;" href="'.JURI::root().'index.php?option=com_camassistant&controller=proposals&task=downloadfile&title='.$warranty[0]->warranty_file_text.'&path='.$warranty[0]->warranty_filepath.'">'.$warranty[0]->warranty_file_text.'</a>';
				}
				else if($warranty[0]->warranty_file_text != '' && $warranty[0]->warranty_filepath == '')
				{$COM[$v]['WARRANTY'] = $warranty[0]->warranty_file_text;}
				else
				$COM[$v]['WARRANTY'] = 'None';

				if($warranty[0]->warranty_file_area != '')
				{
				$COM[$v]['WARRANTYtext'] = $warranty[0]->warranty_file_area;
				}
				else{
				$COM[$v]['WARRANTYtext'] = 'No text entered. If no attachment is provided, please contact vendor.';
				}

		 }
		 //sort($COM);
		return $COM;
	 }

	 //function to get vendor compilance docs in PDF
	 function get_COM_docs_summary2()
	 {
		$db = JFactory::getDBO();
		$rfp_id = JRequest::getVar('rfp_id','');
		$vendors_list = $this->get_vendors_cnt();
		//echo "<pre>"; print_r($vendors_list);
		$COM = array();
		for($v=0; $v<count($vendors_list); $v++)
		{
			   //code to validate specialrequirements
				$sql = "SELECT distinct(req_parentid ) FROM #__cam_rfpreq_info WHERE rfp_id ='".$rfp_id."'";
				$db->Setquery($sql);
				$main = $db->loadResultArray();
				$sql = "SELECT req_subparentid  FROM #__cam_rfpreq_info WHERE req_subparentid !=0 AND rfp_id ='".$rfp_id."'";
				$db->Setquery($sql);
				$sub = $db->loadResultArray();
				for($m = 0; $m<count($main); $m++)
				{
					$sql = "SELECT vendor_id  FROM #__cam_vendor_compliance_w9docs WHERE w9_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid;
					$db->Setquery($sql);
					$vendor_id = $db->loadResultArray();
					if($vendor_id[0] != '')
					{
					  $COM[$v]['vendor_id'] = $vendor_id[0];
					  switch($main[$m])
					  {
					   default:
								//W9 files
								$sql = "SELECT w9_upld_cert FROM #__cam_vendor_compliance_w9docs   where w9_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid;
								$db->Setquery($sql);
								$W9 = $db->loadResult();
								if($W9 != '')
								{
								$ext2 = substr($W9, -3);
								if($ext2 == 'pdf' || $ext2 == 'doc')
								$W9 = '<a href="'.JURI::root().'index.php?option=com_camassistant&controller=vendors&task=view_upld_cert&filename='.$W9.'">'.$W9.'</a>';
								$COM[$v]['W9'] = $W9;
								}
								//GLI files
								$sql = "SELECT GLI_upld_cert FROM #__cam_vendor_liability_insurence  where GLI_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid;
								$db->Setquery($sql);
								$GLI = $db->loadResultArray();
								for($i=0; $i<count($GLI); $i++)
								{
								$ext = substr($GLI[$i], -3);
								if($ext == 'pdf' || $ext == 'doc')
								$GLI[$i] = '<a href="'.JURI::root().'index.php?option=com_camassistant&controller=vendors&task=view_upld_cert&filename='.$GLI[$i].'">'.$GLI[$i].'</a>';
								}
								$GLI = implode(',',$GLI);
								$COM[$v]['GLI'] = $GLI;
					  case 2:
							  //OLN files
							  $sql = "SELECT OLN_upld_cert FROM #__cam_vendor_occupational_license  where OLN_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid;
								$db->Setquery($sql);
								$OLN = $db->loadResultArray();
								for($i=0; $i<count($OLN); $i++)
								{
								$ext = substr($OLN[$i], -3);
								if($ext == 'pdf' || $ext == 'doc')
								$OLN[$i] = '<a href="'.JURI::root().'index.php?option=com_camassistant&controller=vendors&task=view_upld_cert&filename='.$OLN[$i].'">'.$OLN[$i].'</a>';
								}
								$OLN = implode(',',$OLN);
								$COM[$v]['OLN'] = $OLN;
							  //PLN files
							   $sql = "SELECT PLN_upld_cert FROM #__cam_vendor_professional_license  where PLN_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid;
								$db->Setquery($sql);
								$PLN = $db->loadResultArray();
								for($i=0; $i<count($PLN); $i++)
								{
								$ext = substr($PLN[$i], -3);
								if($ext == 'pdf' || $ext == 'doc')
								$PLN[$i] = '<a href="'.JURI::root().'index.php?option=com_camassistant&controller=vendors&task=view_upld_cert&filename='.$PLN[$i].'">'.$PLN[$i].'</a>';
								}
								$PLN = implode(',',$PLN);
								$COM[$v]['PLN'] = $PLN;

					  case 4:
									for($s = 0; $s<count($sub); $s++)
								   {
										switch($sub[$s])
										{
										case 5:
												$sql = "SELECT WCI_upld_cert FROM #__cam_vendor_workers_companies_insurance  where WCI_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid;
												$db->Setquery($sql);
												$WCI = $db->loadResultArray();
												for($i=0; $i<count($WCI); $i++)
												{
												$ext = substr($WCI[$i], -3);
												if($ext == 'pdf' || $ext == 'doc')
												$WCI[$i] = '<a href="'.JURI::root().'index.php?option=com_camassistant&controller=vendors&task=view_upld_cert&filename='.$WCI[$i].'">'.$WCI[$i].'</a>';
												}
												$WCI = implode(',',$WCI);
												$COM[$v]['WCI'] = $WCI;
										}
									}

					  }
					}
				}
	     }
		// sort($COM);
		return $COM;
	 }

	//function to get vendor's proposals summary to display in vendor_propsal_centre
	function get_vendor_proposal_summary()
	{
	    $db = JFactory::getDBO();
		$user = JFactory::getUser();
		//$today = date('m-d-Y');
		$m= date("m"); // Month value
		$de= date("d"); //today's date
		$y= date("Y"); // Year value
		$today = date('m-d-Y', mktime(0,0,0,$m,($de+1),$y));
		$now_time = date('H:iA');
		$today = date('m-d-Y');
		//query to get Drfat proposals
		$prp_Draft_sql = "SELECT VP.id, VP.Alt_bid, R.rfp_type,R.unawardeddate,VP.proposedvendorid,VP.proposaltype,R.awardeddate, VP.publish, R.id as rfp_id, R.projectName, R.proposalDueDate, R.proposalDueTime, P.id as Prperty_id, P.property_name, R.jobtype  FROM  #__cam_vendor_proposals as VP
		LEFT JOIN #__cam_rfpinfo as R ON R.id = VP.rfpno
		LEFT JOIN #__cam_property as P ON R.property_id = P.id
		WHERE VP.proposedvendorid=".$user->id." AND (VP.proposaltype = 'Draft' OR VP.proposaltype = 'ITB' OR VP.proposaltype = 'review'  OR VP.proposaltype = 'uninvited') AND STR_TO_DATE(R.proposalDueDate, '%m-%d-%Y') >= '".$today."' AND VP.bidfrom != 'admin'  order by STR_TO_DATE(R.proposalDueDate, '%m-%d-%Y') DESC ";
		$db->Setquery($prp_Draft_sql);
		$prp_Draft_summary = $db->loadObjectList();
		//echo "<pre>"; print_r($prp_Draft_summary);
		//code to display due timeleft
		for($d=0,$c=0; $d<count($prp_Draft_summary); $d++)
		{
			$main = explode('-',$prp_Draft_summary[$d]->proposalDueDate);
			$date = $main[2].'-'.$main[0].'-'.$main[1];
			$newdate = strtotime ( '0 day' , strtotime ( $date ) ) ;
			$prp_Draft_summary[$d]->proposalDueDate = date ( 'm-d-Y' , $newdate );
			$duedate = $this->get_duedate($prp_Draft_summary[$d]->proposalDueTime,$prp_Draft_summary[$d]->proposalDueDate);
			/*echo $prp_Draft_summary[$d]->proposalDueDate; echo "<br/>";
			if($prp_Draft_summary[$d]->rfp_id == '882405') echo $duedate;*/
			$time_left_details = $this->fnCalculateEndDateTime($duedate);
			// echo "<pre>"; print_r($time_left_details);
			 if($time_left_details['days'] == 0)
			 $time_left_details['days'] = '';
			 else
			 $time_left_details['days'] = $time_left_details['days'].' Day(s) &nbsp;';
			 $prp_Draft_summary[$d]->time_left = $time_left_details['days'].$time_left_details['hours'].'&nbsp;Hr(s)'.'&nbsp;'.$time_left_details['minutes'].'&nbsp;Mins';
			  if(($time_left_details['days'] > 0  || $time_left_details['hours'] > 0 || $time_left_details['minutes'] > 0))
			 {
			 /* $c_prp_Draft_summary[$c] = $prp_Draft_summary[$d];
			  $c++;*/
			   $prp_Draft_summary[$d]->access = 'Yes';
			 }
			 else
			 $prp_Draft_summary[$d]->access = 'No';

		}
		$vendor_proposal_summary[0] = $prp_Draft_summary;
		//$vendor_proposal_summary[0] = $c_prp_Draft_summary;
		//echo "<pre>"; print_r($vendor_proposal_summary[0]);
		//query to get submitted proposals
		$today = date('m-d-Y');
		$prp_Submitted_sql = "SELECT VP.id, VP.Alt_bid, R.rfp_type,R.unawardeddate,VP.publish, R.awardeddate,VP.proposedvendorid, R.id as rfp_id, R.projectName, R.proposalDueDate, R.proposalDueTime,P.id as Prperty_id, P.property_name, R.jobtype  FROM  #__cam_vendor_proposals as VP
		LEFT JOIN #__cam_rfpinfo as R ON R.id = VP.rfpno
		LEFT JOIN #__cam_property as P ON R.property_id = P.id
		WHERE VP.proposedvendorid=".$user->id." AND (VP.proposaltype = 'Submit' OR VP.proposaltype = 'resubmit') AND STR_TO_DATE(R.proposalDueDate, '%m-%d-%Y') >= '".$today."' and R.rfp_type != 'closed' and R.close_vendor != 'closed' order by R.proposalDueDate ";
		$db->Setquery($prp_Submitted_sql);
		$prp_Submitted_summary = $db->loadObjectList();
		//echo "<pre>"; print_r($prp_Submitted_summary);

		//code to display due timeleft
		for($S=0,$R=0; $S<count($prp_Submitted_summary); $S++)
		{
			 $main = explode('-',$prp_Submitted_summary[$S]->proposalDueDate);
			 $date = $main[2].'-'.$main[0].'-'.$main[1];
			 $newdate = strtotime ( '0 day' , strtotime ( $date ) ) ;
			 $prp_Submitted_summary[$S]->proposalDueDate = date ( 'm-d-Y' , $newdate );
			 $duedate = $this->get_duedate($prp_Submitted_summary[$S]->proposalDueTime,$prp_Submitted_summary[$S]->proposalDueDate);
			 $time_left_details = $this->fnCalculateEndDateTime($duedate);
			 if($time_left_details['days'] == 0)
			 $time_left_details['days'] = '';
			 else
			 $time_left_details['days'] = $time_left_details['days'].' Day(s) &nbsp;';
			 $prp_Submitted_summary[$S]->time_left = $time_left_details['days'].$time_left_details['hours'].'&nbsp;Hr(s)'.'&nbsp;'.$time_left_details['minutes'].'&nbsp;Mins';
			 //code to cnt no of alternate bids
			 $sql = "SELECT count(rfpno) FROM #__cam_vendor_proposals where rfpno=".$prp_Submitted_summary[$S]->rfp_id." and proposedvendorid = ".$prp_Submitted_summary[$S]->proposedvendorid."  group by rfpno";
			 $db->Setquery($sql);
		     $prp_Submitted_summary[$S]->total_bids = $db->loadResult();
			 if(($time_left_details['days'] > 0  || $time_left_details['hours'] > 0 || $time_left_details['minutes'] > 0))
			 {
			 /* $R_prp_Draft_summary[$R] = $prp_Submitted_summary[$S];
			  $R++;*/
			  $prp_Submitted_summary[$S]->access = 'Yes';
			 }
			 else
			  $prp_Submitted_summary[$S]->access = 'No';
		}
		$vendor_proposal_summary[1] =  $prp_Submitted_summary;
		//$vendor_proposal_summary[1] = $R_prp_Draft_summary;
		//echo "<pre>"; print_r($vendor_proposal_summary[1]);
		//AND STR_TO_DATE(R.proposalDueDate, '%m-%d-%Y') <= '".$today."'
		//query to get Awarded proposals
		$prp_Awarded_sql = "SELECT VP.id, VP.publish, R.rfp_type,R.unawardeddate,R.awardeddate,VP.Alt_bid,VP.proposal_total_price, VP.proposedvendorid, R.id as rfp_id, R.projectName, R.proposalDueDate, R.proposalDueTime, P.id as Prperty_id, P.property_name, R.jobtype  FROM  #__cam_vendor_proposals as VP
		LEFT JOIN #__cam_rfpinfo as R ON R.id = VP.rfpno
		LEFT JOIN #__cam_property as P ON R.property_id = P.id
		WHERE VP.proposedvendorid=".$user->id." AND VP.proposaltype = 'Awarded' order by VP.id ";
		$db->Setquery($prp_Awarded_sql);
		$prp_Awarded_summary = $db->loadObjectList();
		$vendor_proposal_summary[2] = $prp_Awarded_summary;
		// AND STR_TO_DATE(R.proposalDueDate, '%m-%d-%Y') <= '".$today."'
		//query to get Unawarded proposals
		$prp_Unawarded_sql = "SELECT VP.id,VP.Alt_bid,VP.proposal_total_price, R.rfp_type,R.awardeddate,R.unawardeddate,VP.proposedvendorid, R.id as rfp_id, R.projectName, R.proposalDueDate, R.proposalDueTime, P.id as Prperty_id, P.property_name, R.jobtype  FROM  #__cam_vendor_proposals as VP
		LEFT JOIN #__cam_rfpinfo as R ON R.id = VP.rfpno
		LEFT JOIN #__cam_property as P ON R.property_id = P.id
		WHERE VP.proposedvendorid=".$user->id." AND VP.proposaltype = 'Unawarded' order by VP.id limit 0,3";
		$db->Setquery($prp_Unawarded_sql);
		$prp_Unawarded_summary = $db->loadObjectList();
		$vendor_proposal_summary[3] = $prp_Unawarded_summary;
		//AND STR_TO_DATE(R.proposalDueDate, '%m-%d-%Y') <= '".$today."'
		//query to get proposals under Review
		$prp_Review_sql = "SELECT VP.id,VP.Alt_bid, VP.proposedvendorid,R.unawardeddate, R.awardeddate,R.rfp_type,R.id as rfp_id, R.projectName, R.proposalDueDate, R.proposalDueTime, P.id as Prperty_id, P.property_name, R.jobtype  FROM  #__cam_vendor_proposals as VP
		LEFT JOIN #__cam_rfpinfo as R ON R.id = VP.rfpno
		LEFT JOIN #__cam_property as P ON R.property_id = P.id
		WHERE VP.proposedvendorid=".$user->id." AND VP.proposaltype = 'Submit' and R.rfp_type = 'closed' order by VP.id ";
		$db->Setquery($prp_Review_sql);
		$prp_Review_summary = $db->loadObjectList();
		$vendor_proposal_summary[4] = $prp_Review_summary;

		//echo "<pre>"; print_r($vendor_proposal_summary);
		return $vendor_proposal_summary;
	}

	//function to get vendor user info in vendor edit form
	function getuserinfo()
	{
	    $db = JFactory::getDBO();
		$user = JFactory::getUser();
		$sql = "SELECT U.*, V.id as vendor_id, V.image, V.company_phone,V.alt_phone,V.phone_ext,V.alt_phone_ext, V.company_address,V.company_addresss, V.zipcode FROM #__users as U LEFT JOIN #__cam_vendor_company as V ON U.id = V.user_id WHERE U.id = ".$user->id;
		$db->Setquery($sql);
		$detail = $db->loadObjectList();

		return $detail;
	}

	//function to display states in vendor registration
	function getstates()
	{
		global $mainframe;
		$db = JFactory::getDBO();
		$states[] = JHTML::_('select.option', '0', '-Select State-');
		$this->_filter_vendorslist	= $mainframe->getUserStateFromRequest( $context.'filter_vendorslist', 'filter_vendorslist', 0,	'string' );
		$sql = "SELECT * FROM #__cam_vendor_states order by state";
		$db->Setquery($sql);
		$objects = $db->loadObjectList();
		foreach( $objects as $obj )
		{
			$states[] = JHTML::_('select.option',  $obj->id, $obj->state);
		}
		//echo "<pre>"; print_r($vendorslist); exit;
		$result = JHTML::_('select.genericlist',$states, 'states', 'class="inputbox" size="1" ' . $javascript , 'value', 'text', $this->_filter_states);
	   return $result;
	}
	//function to display industries list in popup
	function getindustires()
	{
		global $mainframe;
		if(isset($_SESSION['industries']))
		$chk_arry = $_SESSION['industries'];
		$db = JFactory::getDBO();
		$checked    = JHTML::_( 'grid.id', $i, $row->id );
		$sql = "SELECT * FROM #__cam_industries WHERE published=1 order by industry_name ";
		$db->Setquery($sql);
		$objects = $db->loadObjectList();
		foreach( $objects as $key => $obj )
		{
			//$checked    = JHTML::_( 'grid.id', $key, $obj->industry_name);
			if(isset($chk_arry) && in_array($obj->industry_name,$chk_arry))
			$checked = "<input checked='checked' type='checkbox' onclick='isChecked(this.checked);' value='".$obj->industry_name."' name='cid[]' id='cb'".$key.">";
			else
			$checked = "<input type='checkbox' onclick='isChecked(this.checked);' value='".$obj->industry_name."' name='cid[]' id='cb'".$key.">";
			$industries[] = $checked.'&nbsp;'. $obj->industry_name;
		}
		//echo "<pre>"; print_r($industries);
	   return $industries;
	}
	//function to populate select industries link
	function getindustries_link()
	{
	    /*****************code to send to fnd**************************/
	    JHTML::_('behavior.modal');
        $uri	=& JURI::getInstance();
		$base	= $uri->toString( array('scheme', 'host', 'port'));
		$link	= $base;
		$url	= 'index.php?option=com_camassistant&controller=vendors&task=industries_form';
		$status = 'width=400,height=350,menubar=yes,resizable=yes';
		$text = '<img src="templates/camassistant_left/images/select_industry.gif" alt="select industry"  width="134" height="24" />';
        $attribs['rel']	= "{handler: 'iframe', size: {x: 660, y: 350}}";
		$attribs['class']	= 'modal';
		$attribs['title']	= JText::_( 'Industries' );
		//$attribs['onclick'] = "window.open(this.href,'win2','".$status."'); return false;";
		$output = JHTML::_('link', JRoute::_($url), $text, $attribs);
		return $output;
		/*****************end of code to send to fnd**************************/
	}

	//function to get vendor compliance alerts
	function get_chk_vendor_GLI_compliance_alert()
	{
	    $db = JFactory::getDBO();
		$user =& JFactory::getUser();
 		$user_type = $user->get('user_type');
		$today = date('Y-m-d');
		$alert_sql ="SELECT count(*) from #__cam_vendor_liability_insurence  WHERE GLI_end_date  >= '".$today."' AND GLI_upld_cert!= '' AND GLI_policy_occurence!='' AND GLI_policy_aggregate!='' AND GLI_status!='-1' AND vendor_id=".$user->id;
		$db->Setquery($alert_sql);
		$res = $db->loadResult();
		$alert['GLI_exist']= $res;

		$alert_sql ="SELECT count(*) from #__cam_vendor_compliance_w9docs  WHERE w9_upld_cert!='' AND w9_status!='-1' AND vendor_id=".$user->id;
		$db->Setquery($alert_sql);
		$res2 = $db->loadResult();
		$alert['W9_exist']= $res2;

		$alert_sql ="SELECT count(*) from #__cam_vendor_liability_insurence  WHERE GLI_status = 1 AND vendor_id=".$user->id;
		//$alert_sql = "SELECT count(*) from #__cam_vendor_liability_insurence WHERE GLI_status = 1 AND vendor_id=".$user->id."  AND id=(SELECT MIN(id) from #__cam_vendor_liability_insurence where vendor_id=".$user->id.")";
		$db->Setquery($alert_sql);
		$res3 = $db->loadResult();
		if($res3 != 0) $res3=0; else $res3=1;
		$alert['GLI_status']= $res3;

		$alert_sql ="SELECT count(*) from #__cam_vendor_compliance_w9docs  WHERE  w9_upld_cert!=''  AND ein_number!='' AND vendor_id=".$user->id;
		$db->Setquery($alert_sql);
		$res4 = $db->loadResult();
		$alert['W9_status']= $res4;
		$today = date('Y-m-d');

		$alert_sql ="SELECT count(*) from #__cam_vendor_professional_license  WHERE PLN_status = 1 AND vendor_id=".$user->id;
		//$alert_sql = "SELECT count(*) from #__cam_vendor_professional_license WHERE PLN_status = 1 AND vendor_id=".$user->id."  AND id=(SELECT MIN(id) from #__cam_vendor_professional_license where vendor_id=".$user->id.")";
		$db->Setquery($alert_sql);
		$res5 = $db->loadResult();
		if($res5 != 0) $res5=0; else $res5=1;
		$alert['PLN_status']= $res5;

		$alert_sql ="SELECT count(*) from #__cam_vendor_professional_license  WHERE PLN_expdate  >= '".$today."' AND PLN_status = 1 AND vendor_id=".$user->id; //validation to expdate of docs
		//$alert_sql = "SELECT count(*) from #__cam_vendor_professional_license WHERE PLN_expdate  >= '".$today."' AND vendor_id=".$user->id."  AND id=(SELECT MIN(id) from #__cam_vendor_professional_license where vendor_id=".$user->id.")";
		$db->Setquery($alert_sql);
		$res6 = $db->loadResult();
		if($res6 != 0) $res6=0; else $res6=1;
		$alert['PLN_exp']= $res6;

		$alert_sql ="SELECT count(*) from #__cam_vendor_professional_license  WHERE PLN_expdate  >= '".$today."' AND PLN_state!='' AND PLN_type!='' AND PLN_upld_cert!='' AND PLN_status!='-1' AND vendor_id=".$user->id;
		$db->Setquery($alert_sql);
		$res7 = $db->loadResult();
		$alert['PLN_exist']= $res7;
		/*$alert_sql ="SELECT count(*) from #__cam_vendor_occupational_license   WHERE OLN_expdate <= '".$today."' AND vendor_id=".$user->id; //validation to expdate of docs
		$db->Setquery($alert_sql);
		$res5 = $db->loadResult();
		$alert['OLN_exp']= $res5;
		$alert_sql ="SELECT count(*) from #__cam_vendor_professional_license  WHERE PLN_expdate  <= '".$today."' AND vendor_id=".$user->id; //validation to expdate of docs
		$db->Setquery($alert_sql);
		$res6 = $db->loadResult();
		$alert['PLN_exp']= $res6;
		$alert_sql ="SELECT count(*) from #__cam_vendor_workers_companies_insurance   WHERE WCI_end_date  <= '".$today."' AND vendor_id=".$user->id; //validation to expdate of docs
		$db->Setquery($alert_sql);
		$res7 = $db->loadResult();
		$alert['WCI_exp']= $res7;*/

		$alert_sql ="SELECT count(*) from #__cam_vendor_liability_insurence   WHERE GLI_end_date  >= '".$today."' AND GLI_upld_cert!= '' AND GLI_policy_occurence!='' AND GLI_policy_aggregate!='' AND vendor_id=".$user->id; //validation to expdate of docs
		//$alert_sql = "SELECT count(*) from #__cam_vendor_liability_insurence WHERE GLI_end_date  >= '".$today."' AND vendor_id=".$user->id."  AND id=(SELECT MIN(id) from #__cam_vendor_liability_insurence where vendor_id=".$user->id.")";
		$db->Setquery($alert_sql);
		$res8 = $db->loadResult();
		if($res8 != 0) $res8=0; else $res8=1;
		$alert['GLI_exp']= $res8;

		//echo "<pre>"; print_r($alert);
		return $alert;
	}

	//function to get announcements
	function getannouncement()
	{
	    $db = JFactory::getDBO();
		$user =& JFactory::getUser();
 		$id = $user->get('id');

		$user_type = $user->get('user_type');
		//print_r($user);
		$db = & JFactory::getDBO();
		$query = "SELECT state FROM #__cam_vendor_company  WHERE `user_id` =".$id;
		$db->setQuery($query);
		$statename = $db->loadResult();
		$query1 = "SELECT industry_id FROM #__cam_vendor_industries  WHERE `user_id` =".$id;
		$db->setQuery($query1);
		$industry = $db->loadResultArray();
		$industries=implode(',',$industry);
		/*echo "<pre>";
		print_r($industry);*/
		if ($user_type){
		$where[] ='user_type='.$user_type;
		}
		if($statename)
		$where[] ="(state_name='".$statename."' OR state_name='' OR state_name=0)";
		else
		$where[] ="(state_name='' OR state_name=0)";

		if($industry)
		$where[] ="(industry_name IN (".$industries.") OR industry_name='' OR industry_name=0)";
		else
		$where[] ="(industry_name='' OR industry_name=0)";

		$where=implode(' AND ',$where);

	 	$announcement = "SELECT announcement FROM #__cam_announcement WHERE published=1 AND ".$where." ORDER BY id DESC";
		$db->Setquery($announcement);
		$announcement = $db->loadObjectList();
		return $announcement;
	}
	//function to get openjobs for dashboard
	function getopenjobs()
	{
	    $db = JFactory::getDBO();
		$user =& JFactory::getUser();
 		$user_type = $user->get('user_type');
		$m= date("m"); // Month value
		$de= date("d"); //today's date
		$y= date("Y"); // Year value
		$today = date('m-d-Y', mktime(0,0,0,$m,($de+1),$y));
		//$today = date('m-d-Y');
		$now_time = date('H:iA');

		$openjobs ="SELECT R.id,R.startDate,R.projectName,P.city, R.projectName,R.proposalDueTime,R.proposalDueDate, R.work_perform FROM  #__cam_rfpinfo as R
		LEFT JOIN #__cam_vendor_industries  as VI ON R.cust_id = VI.user_id
		LEFT JOIN #__cam_property  as P ON P.id = R.property_id
		WHERE R.industry_id= VI.industry_id AND rfp_type = 'rfp' order by R.id";
		$db->Setquery($openjobs);
		$records = $db->loadObjectList();

		for($d=0; $d<count($records); $d++)
		{
			$duedate = $this->get_duedate($records[$d]->proposalDueTime,$records[$d]->proposalDueDate);
			$time_left_details = $this->fnCalculateEndDateTime($duedate);
			 if($time_left_details['days'] == 0)
			 $time_left_details['days'] = '';
			 else
			 $time_left_details['days'] = $time_left_details['days'].' Day(s) &nbsp;';
			 $records[$d]->time_left = $time_left_details['days'].$time_left_details['hours'].'&nbsp;Hr(s)'.'&nbsp;'.$time_left_details['minutes'].'&nbsp;Mins';
		}
		return $records;
	}
	//function to save vendor registration details
	function store($data)
	{
	 	// give me JTable object
		$row = & $this->getTable('vendors');
			// Bind the form fields to the  table
		if (!$row->bind($data)) {

			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		// Create the timestamp for the date field
		// Store the  detail record into the database
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
	}
	///Image resizeing //

	//Getting image dimensions
		function get_thumbnail_dimensions()
	{
		$db = JFactory::getDBO();
		$sql = "SELECT vendor_logo_height,vendor_logo_width FROM #__cam_configuration";
		$db->Setquery($sql);
		$dimensions = $db->loadObjectList();
		return $dimensions;
	}

//Completed
	function image_resize_to_max($uploadfile,$max_width,$max_height,$uploadDir,$file)
	{
	/*echo $uploadfile; echo "<br>";
	echo $max_width; echo "<br>";
	echo $max_height; echo "<br>";
	echo $uploadDir; echo "<br>";
	echo $file; echo "<br>";
	echo "cam"; exit;*/
		/******* To Get the size and MIME type of the requested image ****/
		$size		= getimagesize($uploadfile);
		$mime		= $size['mime'];
		/********** To Create the New Image from the Restricted Image ********/
		switch($mime)
		{
			case	'image/gif'		:	$src = imagecreatefromgif($uploadfile);
										break;
			case	'image/png'		:	$src = imagecreatefrompng($uploadfile);
										break;
			default					:	$src = imagecreatefromjpeg($uploadfile);
										break;
		}
		$width		= $size[0];
		$height		= $size[1];

		//for large images
		/*********** Assiging The Maximum Width & Height of Image ****/
		if($width > $max_width || $height > $max_height)
		{
			$newwidth	= $max_width;
			$newheight	= ($height/$width)*$newwidth;
		}
		else
		{
			$newwidth	= $width;
			$newheight	= $height;
		}
		$tmp	= imagecreatetruecolor($max_width,$max_height);
         $bg = imagecolorallocate ( $tmp, 255, 255, 255 );
           imagefill ( $tmp, 0, 0, $bg );
		imagecopyresampled($tmp,$src,0,0,0,0,$max_width,$max_height,$width,$height);
		$filename = $uploadDir.DS.$file;
		switch($mime)
		{
			case	'image/gif'		:	imagegif($tmp,$filename);
										break;
			case	'image/x-png'	:
			case	'image/png'		:	imagepng($tmp,$filename);
										break;
			default					:	imagejpeg($tmp,$filename,100);
										break;
		}
		imagedestroy($src);
		imagedestroy($tmp);
	}//end of function

	//Completed//


	//function to store vendor_industries
	function store_industries($data)
	{
	 	// give me JTable object
		$row = & $this->getTable('vendor_industries');
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		// Create the timestamp for the date field
		// Store the  detail record into the database
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
	}

	//function to store in house vendors
	function store_Inhouse_vendors($data)
	{
	 	// give me JTable object
		$row = & $this->getTable('In_House_vendors');
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		// Create the timestamp for the date field
		// Store the  detail record into the database
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		return true;
	}

	//function to store vendor_billing_info
	function store_billing_info($data)
	{
	 	// give me JTable object
		//echo "<pre>"; print_r($data); exit;
		$row = & $this->getTable('vendor_billing');
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		//echo "<pre>"; print_r($row); exit;
		// Create the timestamp for the date field
		// Store the  detail record into the database
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
	}

	//function pagination params from configuration
	function get_Configuration_Params($param_name)
	{
		$db = JFactory::getDBO();
		$proposal_params ="SELECT ".$param_name."  FROM #__cam_configuration WHERE id=1";
		$db->setQuery($proposal_params);
		$proposal_params = $db->loadResult();
		return $proposal_params;
	}

		//function to display all drafted vendor proposals
	function get_viewall_proposals($Prp_type)
	{
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$today = date('m-d-Y');
		$m= date("m"); // Month value
		$de= date("d"); //today's date
		$y= date("Y"); // Year value
		$now_time = date('H:iA');
		/*if($Prp_type == 'Awarded' || $Prp_type == 'Unawarded' || $Prp_type == 'Review')
		$today = date('m-d-Y');
		else
		{ $today = date('m-d-Y', mktime(0,0,0,$m,($de+1),$y)); }*/
		//query to get Drfat proposals
		/*$All_prp_Draft_sql = "SELECT VP.id,VP.proposedvendorid, R.id as rfp_id, R.projectName, R.proposalDueDate, R.proposalDueTime, P.id as Prperty_id, P.property_name  FROM  #__cam_vendor_proposals as VP
		LEFT JOIN #__cam_rfpinfo as R ON R.id = VP.rfpno
		LEFT JOIN #__cam_property as P ON R.property_id = P.id
		WHERE VP.proposedvendorid=".$user->id." AND (VP.proposaltype = '".$Prp_type."' OR VP.proposaltype = 'ITB')  AND R.proposalDueDate >= '".$today."' AND R.proposalDueTime > '".$now_time."' order by VP.id "; */
		//echo $Prp_type;
		if($Prp_type == 'Awarded' || $Prp_type == 'Unawarded' || $Prp_type == 'Review')
		$due_date = "STR_TO_DATE(R.proposalDueDate, '%m-%d-%Y') <= '".$today."' ";
		else
		$due_date = "STR_TO_DATE(R.proposalDueDate, '%m-%d-%Y') >= '".$today."' ";
		if($Prp_type == 'Draft')
		$condition = " AND (VP.proposaltype = '".$Prp_type."' OR  VP.proposaltype = 'ITB' OR VP.proposaltype = 'review') AND VP.bidfrom='' ";
		else if($Prp_type == 'Review')
		//$condition = " AND (VP.proposaltype = 'Submit')";
		$condition = " AND (VP.proposaltype = 'Submit' AND (R.rfp_type='closed' OR R.close_vendor='closed') )";
		else if($Prp_type == 'Submit')
		$condition = " AND (VP.proposaltype = '".$Prp_type."' OR  VP.proposaltype = 'resubmit') AND R.rfp_type!='closed' AND R.close_vendor!='closed' ";
		else
		$condition = " AND (VP.proposaltype = '".$Prp_type."' )";
		$All_prp_Draft_sql = "SELECT VP.id,VP.proposedvendorid, VP.publish, R.id as rfp_id, R.projectName, R.proposalDueDate, R.proposalDueTime, P.id as Prperty_id, P.property_name  FROM  #__cam_vendor_proposals as VP
		LEFT JOIN #__cam_rfpinfo as R ON R.id = VP.rfpno
		LEFT JOIN #__cam_property as P ON R.property_id = P.id
		WHERE VP.proposedvendorid=".$user->id.$condition."   order by R.proposalDueDate ";
//		AND ".$due_date."

		$db->Setquery($All_prp_Draft_sql);
		$All_prp_Draft_summary = $db->loadObjectList();
//echo "<pre>"; print_r($All_prp_Draft_summary); exit;
		//code to display due timeleft
		for($d=0,$c=0; $d<count($All_prp_Draft_summary); $d++)
		{
			$main = explode('-',$All_prp_Draft_summary[$d]->proposalDueDate);
			$date = $main[2].'-'.$main[0].'-'.$main[1];
			$newdate = strtotime ( '0 day' , strtotime ( $date ) ) ;
			$All_prp_Draft_summary[$d]->proposalDueDate = date ( 'm-d-Y' , $newdate );
			 $duedate = $this->get_duedate($All_prp_Draft_summary[$d]->proposalDueTime,$All_prp_Draft_summary[$d]->proposalDueDate);
			 $time_left_details = $this->fnCalculateEndDateTime($duedate);
			 if($time_left_details['days'] == 0)
			 $time_left_details['days'] = '';
			 else
			  $time_left_details['days'] = $time_left_details['days'].' Day(s) &nbsp;';
			 $All_prp_Draft_summary[$d]->time_left = $time_left_details['days'].$time_left_details['hours'].'&nbsp;Hr(s)'.'&nbsp;'.$time_left_details['minutes'].'&nbsp;Mins';
			  if(($time_left_details['days'] > 0  || $time_left_details['hours'] > 0 || $time_left_details['minutes'] > 0))
			 {
			  /*$c_All_prp_Draft_summary[$c] = $All_prp_Draft_summary[$d];
			  $c++;*/
			 $All_prp_Draft_summary[$d]->access = 'Yes';
			 }
			 else
			 $All_prp_Draft_summary[$d]->access = 'No';
		}
	//	echo "<pre>"; print_r($All_prp_Draft_summary); exit;
		//return $c_All_prp_Draft_summary;
		return $All_prp_Draft_summary;
	}

	//function to get query in viewall_proposals
	function _buildQuery($Prp_type)
	{
		// Get the WHERE and ORDER BY clauses for the query
		//$where = $this->_buildContentWhere();
		$user = & JFactory::getUser();
		$m= date("m"); // Month value
		$de= date("d"); //today's date
		$y= date("Y"); // Year value
		/*if($Prp_type == 'Awarded' || $Prp_type == 'Unawarded' || $Prp_type == 'Review')
		$today = date('m-d-Y');
		else
		{ $today = date('m-d-Y', mktime(0,0,0,$m,($de+1),$y)); }*/
		$today = date('m-d-Y');
		if($Prp_type == 'Awarded' || $Prp_type == 'Unawarded' || $Prp_type == 'Review')
		$due_date = "STR_TO_DATE(R.proposalDueDate, '%m-%d-%Y') <= '".$today."' ";
		else
		$due_date = "STR_TO_DATE(R.proposalDueDate, '%m-%d-%Y') >= '".$today."' ";
		if($Prp_type == 'Draft')
		$condition = " AND (VP.proposaltype = '".$Prp_type."' OR  VP.proposaltype = 'ITB' OR VP.proposaltype = 'review' OR VP.proposaltype = 'uninvited') AND VP.bidfrom='' ";
		else if($Prp_type == 'Review')
		$condition = " AND ((VP.proposaltype = 'Submit' OR VP.proposaltype = 'resubmit') AND (R.rfp_type='closed' OR R.close_vendor='closed') )";
		//$condition = " AND (VP.proposaltype = 'Submit')";
		else if($Prp_type == 'Submit')
        //$condition = " AND (VP.proposaltype = '".$Prp_type."' OR  VP.proposaltype = 'resubmit')  AND R.rfp_type!='closed' ";
		$condition = " AND (VP.proposaltype = '".$Prp_type."' OR  VP.proposaltype = 'resubmit' OR VP.proposaltype = 'Submit') ";
		else
		$condition = " AND (VP.proposaltype = '".$Prp_type."' )";
		 $query = "SELECT VP.id,VP.Alt_bid,VP.proposedvendorid,VP.proposaltype, R.close_vendor, R.rfp_type, VP.publish, VP.proposal_total_price ,R.id as rfp_id, R.projectName, R.proposalDueDate, R.proposalDueTime, P.id as Prperty_id, P.property_name, P.city, P.copyvendor, R.jobtype  FROM  #__cam_vendor_proposals as VP
		LEFT JOIN #__cam_rfpinfo as R ON R.id = VP.rfpno
		LEFT JOIN #__cam_property as P ON R.property_id = P.id
		WHERE VP.proposedvendorid=".$user->id.$condition."  order by STR_TO_DATE(R.proposalDueDate, '%m-%d-%Y') DESC ";
		//AND ".$due_date."

		return $query;
	}

	//function to get records in viewall_proposals
	function get_limit_records($Prp_type)
	{
		$query = $this->_buildQuery($Prp_type);
		//echo $this->getState('limitstart'); echo '----'; echo $this->getState('limit'); echo '<br/>';
		$records = $this->_getList($query,$this->getState("limitstart"),$this->getState("limit"));
       // $records = $this->_getList($query);
		for($d=0,$c=0; $d<count($records); $d++)
		{
			$main = explode('-',$records[$d]->proposalDueDate);
			$date = $main[2].'-'.$main[0].'-'.$main[1];
			$newdate = strtotime ( '0 day' , strtotime ( $date ) ) ;
			$records[$d]->proposalDueDate = date ( 'm-d-Y' , $newdate );
			$duedate = $this->get_duedate($records[$d]->proposalDueTime,$records[$d]->proposalDueDate);
			$records[$d]->ClosedDueDate = $records[$d]->proposalDueDate;
			$time_left_details = $this->fnCalculateEndDateTime($duedate);
			 if($time_left_details['days'] == 0)
			 $time_left_details['days'] = '';
			 else
			 $time_left_details['days'] = $time_left_details['days'].' Day(s) &nbsp;';
			 $records[$d]->time_left = $time_left_details['days'].$time_left_details['hours'].'&nbsp;Hr(s)'.'&nbsp;'.$time_left_details['minutes'].'&nbsp;Mins';
			 //code to cnt no of alternate bids
			 $db =& JFactory::getDBO();
			 $sql = "SELECT count(rfpno) FROM #__cam_vendor_proposals where rfpno=".$records[$d]->rfp_id." and proposedvendorid = ".$records[$d]->proposedvendorid."  group by rfpno";
			 $db->Setquery($sql);
		     $records[$d]->total_bids = $db->loadResult();
			  if(($time_left_details['days'] > 0  || $time_left_details['hours'] > 0 || $time_left_details['minutes'] > 0))
			 {
			  /*$c_records[$c] = $records[$d];
			  $c++*/;
			 $records[$d]->access = 'Yes';
			 }
			 else
			 $records[$d]->access = 'No';
		}
		//echo "<pre>"; print_r($records);
		//echo count($records);
		//return $c_records;
		return $records;
	}

	//function to get pagination for all types of proposals in viewall_proposals
	function getPagination($Prp_type)
	{
		// Lets load the content if it doesnï¿½t already exist
		if (empty($this->_pagination))
		{
		jimport('joomla.html.pagination');
		$total = $this->get_viewall_proposals($Prp_type);
		$total = count($total);
		$this->_pagination = new JPagination($total, $this->getState('limitstart'), $this->getState('limit') );
		}
		return $this->_pagination;
	}

// for getting the state list from db to dipaly in the vendor regsitration  //coded by anand babu

	function getstatelist()
	{
		$db =& JFactory::getDBO();
		$query = "SELECT * FROM #__state";
		$db->setQuery($query);
		$result = $db->loadObjectList();
		return $result;
	}

 // for getting the country list from db to dipaly in the vendor regsitration  //coded by anand babu

	function getcountylist()
	{
		$db =& JFactory::getDBO();
		$query = "SELECT * FROM #__county";
		$db->setQuery($query);
		$result = $db->loadObjectList();
		return $result;
	}

	function getedit_info()
	{
		$db = & JFactory::getDBO();
		$user = JFactory::getUser();
		$query = "SELECT * FROM #__cam_vendor_company WHERE user_id=".$user->id;
		$db->setQuery($query);
		$results = $db->loadObjectList();
		//echo "<pre>"; print_r($results);
		return $results;
	}	//echo 'comapny name :<pre>'; print_r($results);
	function getstatesforeditvendor($stateid)
	{
		$db = & JFactory::getDBO();
	 	$query ="SELECT state_name FROM #__state WHERE id = '".$stateid."'";
		$db->setQuery($query);
		$results = $db->loadObjectList();
		//echo '<pre>'; print_r($results); exit;
		return $results;
	}
//for getting state id in edit vendor page
	function getsselectstate($userid)
	{
		//echo '<pre>'; print_r($userid);
		$db = JFactory::getDBO();
		$query ="select id,user_id,state_id,county_id from #__vendor_state_counties Where user_id =".$userid."  ";
		$db->setQuery($query);
		$results = $db->loadObjectList();

		return $results;
	}
//for getting statename for edit vendor page
	function getstatename($stateid)
	{
		//echo '<pre>'; print_r($stateid);
		$db = JFactory::getDBO();
		$query ="select state_name from #__state Where state_id ='".$stateid."'";
		$db->setQuery($query);
		$results = $db->loadObjectList();
		//echo "<pre>"; print_r($results);
		return $results;
	}
	function getallstatenamewithids()
	{
		$db = JFactory::getDBO();
		$query ="select * from #__cam_vendor_states";
		$db->setQuery($query);
		$results = $db->loadObjectList();
		//echo "<pre>"; print_r($results);exit;
		return $results;
	}

//for getting countyname in edit vendor page
	function  getcountyname($countyid)
	{
		//echo '<pre>'; print_r($countyid);
		$db = JFactory::getDBO();
		//$query ="select county_name from #__county Where id =".$countyid;
		$query ="select County from #__cam_counties Where id =".$countyid;
		$db->setQuery($query);
		$results = $db->loadObjectList();

		return $results;
	}

	//for getting industryname in edit vendor compilance page
	function getindustry_ids($userid)
	{
		$db = JFactory::getDBO();
		$query ="select industry_id from #__cam_vendor_industries Where user_id =".$userid;
		$db->setQuery($query);
		$results = $db->loadResultArray();

		return $results;
	}

//for getting industryname in edit vendor page
	function getindustryids($userid)
	{
		$db = JFactory::getDBO();
		$query ="select * from #__cam_vendor_industries Where user_id =".$userid;
		$db->setQuery($query);
		$results = $db->loadObjectList();
//		echo "<pre>"; print_r($results); exit;
		return $results;
	}
//for getting industryname using industry id for edit vedor page
	function getindustryname($industryid)
	{
		$db = JFactory::getDBO();
		$query ="select industry_name from #__cam_industries Where id =".$industryid;
		$db->setQuery($query);
		$results = $db->loadObjectList();
		return $results;
	}


	/*function def()
	{
		$query = "SELECT s.id,s.state_name as name FROM `#__vendor_state_counties` AS sc, #__state as s WHERE sc.user_id=".$user->id." and sc.state_id=s.id";
		$db->setQuery($query);
		$states = $db->loadObjectList();
		//echo 'counties :<pre>'; print_r($states);
		$query = "SELECT c.id,c.county_name as name FROM `#__vendor_state_counties` AS sc, #__county as c WHERE sc.user_id=".$user->id." and sc.state_id=c.id";
		$db->setQuery($query);
		$counties =  $db->loadObjectList();

//		echo ' states <pre>'; print_r($states);exit;

	} */

	function getcountylink()
	{
	    JHTML::_('behavior.modal');
        $uri	=& JURI::getInstance();
		$base	= $uri->toString( array('scheme', 'host', 'port'));
		$link	= $base;
		$url	= 'index.php?option=com_camassistant&controller=vendors&task=county_form';
		$status = 'width=400,height=350,menubar=yes,resizable=yes';
		$text = '<br/>Add Another County';
        $attribs['rel']	= "{handler: 'iframe', size: {x: 660, y: 350}}";
		$attribs['class']	= 'modal';
		$attribs['title']	= JText::_( 'County' );
		//$attribs['onclick'] = "window.open(this.href,'win2','".$status."'); return false;";
		$output = JHTML::_('link', JRoute::_($url), $text, $attribs);
		return $output;

	}

	// for getting the state list from db to dipaly in the vendor regsitration  //coded by anand babu

	 function getstatelink()
	{
	    JHTML::_('behavior.modal');
        $uri	=& JURI::getInstance();
		$base	= $uri->toString( array('scheme', 'host', 'port'));
		$link	= $base;
		$url	= 'index.php?option=com_camassistant&controller=vendors&task=state_form';
		$status = 'width=400,height=350,menubar=yes,resizable=yes';
		$text = 'Add Another State';
        $attribs['rel']	= "{handler: 'iframe', size: {x: 660, y: 350}}";
		$attribs['class']	= 'modal';
		$attribs['title']	= JText::_( 'Industries' );
		//$attribs['onclick'] = "window.open(this.href,'win2','".$status."'); return false;";
		$output = JHTML::_('link', JRoute::_($url), $text, $attribs);
		return $output;

	}



	/*******************Functions related to Vendor bidds Summary************************/

	//function to get total,average,low,high bidding amount of RFP
	function get_Bidamount_info()
	{
		$rfp_id = JRequest::getVar('rfp_id','');
		$db = & JFactory::getDBO();
		$Bid_sql = "SELECT  (select count(*)  from #__cam_vendor_proposals where rfpno=".$rfp_id." AND proposaltype = 'Submit') as Submitted, (select count(*)  from #__cam_vendor_proposals where rfpno=".$rfp_id." AND proposaltype = 'Reject') as Rejected, (SELECT SUM(proposal_total_price)/count(id) FROM #__cam_vendor_proposals where rfpno=".$rfp_id." AND (proposaltype = 'Submit' or proposaltype = 'resubmit')) as Average_Bid, MAX(CAST( proposal_total_price AS UNSIGNED )) as Max_Bid, MIN(CAST( proposal_total_price AS UNSIGNED )) as Min_Bid FROM #__cam_vendor_proposals  WHERE proposal_total_price !='' and proposal_total_price!='0.00' and rfpno = ".$rfp_id." AND (proposaltype = 'Submit' or proposaltype = 'resubmit')";
		$db->setQuery($Bid_sql);
		$Bid_info = $db->loadObjectList();
		//echo "<pre>"; print_r($Bid_info); exit;
		$count = "select count(*) as count1, SUM(proposal_total_price) as total  from jos_cam_vendor_proposals where rfpno=".$rfp_id." and proposal_total_price !='0.00' and 	proposal_total_price!='' ";
		$db->setQuery($count);
		$wocount = $db->loadObject();
		$Bid_info[0]->Average_Bid = $wocount->total / $wocount->count1;
		//echo "<pre>"; print_r($Bid_info); exit;
		return $Bid_info;
	}

	//function to get total,average,low,high bidding amount of Awarded RFP /* anil */
	function get_Bidamount_infor()
	{
		$rfp_id = JRequest::getVar('rfp_id','');
		$db = & JFactory::getDBO();
		$Bid_sql = "SELECT  (select count(*)  from jos_cam_vendor_proposals where rfpno=".$rfp_id.") as Submitted, (select count(*)  from jos_cam_vendor_proposals where rfpno=".$rfp_id.") as Rejected,SUM(proposal_total_price)/count(id) as Average_Bid, MAX(CAST( proposal_total_price AS UNSIGNED )) as Max_Bid, MIN(CAST( proposal_total_price AS UNSIGNED )) as Min_Bid FROM #__cam_vendor_proposals  WHERE proposal_total_price !='' and proposal_total_price!='0.00' and rfpno = ".$rfp_id;
		$db->setQuery($Bid_sql);
		$Bid_info = $db->loadObjectList();


		$count = "select count(*) as count1, SUM(proposal_total_price) as total  from jos_cam_vendor_proposals where rfpno=".$rfp_id." and proposal_total_price !='0.00' and 	proposal_total_price!='' ";
		$db->setQuery($count);
		$wocount = $db->loadObject();
		$Bid_info[0]->Average_Bid = $wocount->total / $wocount->count1;

		return $Bid_info;
	}

	//function to get bidded vendors info to display in proposal summary page
	function get_Bidded_vendors_info()
	{
		$rfp_id = JRequest::getVar('rfp_id','');
		$db = & JFactory::getDBO();
		$user = JFactory::getUser();
		$sql = "SELECT  VP.id,VP.proposedvendorid,VP.rfpno,VP.contact_name,VP.Alt_bid,VP.proposal_total_price, U.name, U.lastname, U.email, U.extension, U.phone, U.cellphone,V.company_name,V.company_address,V.city,V.state,V.zipcode,V.image, V.in_house_vendor,V.company_phone,V.phone_ext,V.alt_phone,V.alt_phone_ext,V.established_year FROM #__cam_vendor_proposals AS VP LEFT JOIN #__cam_vendor_company as V ON VP.proposedvendorid = V.user_id LEFT JOIN #__users as U ON U.id = V.user_id  WHERE VP.rfpno = ".$rfp_id." AND (proposaltype = 'Submit' or proposaltype = 'resubmit') AND VP.Alt_bid != 'Yes' ORDER BY VP.id ";
		$db->setQuery($sql);
		$res = $db->loadObjectList();
			
			for( $i=0; $i<count($res); $i++ ){
				$final_status = '';
				$status =	$this->checkcompliancestatus($res[$i]->proposedvendorid);
					if( $status == 'fail' )
						$final_status = '<font color="red">No</font>'; 
					else if($status == 'success')	
						$final_status = '<font color="green">Yes</font>'; 
					else
						$final_status = '<font color="green">Yes/</font><font color="red">No</font>'; 
							
				$res[$i]->c_status = $final_status ;
			}
			//echo "<pre>"; print_r($res); echo "</pre>"; exit;
		return $res;
	}

	//function to get bidded vendors info to display in Awarded Proposal page /* anil */
	function get_Bidded_vendors_infor()
	{
		$rfp_id = JRequest::getVar('rfp_id','');
		$db = & JFactory::getDBO();
		$user = JFactory::getUser();
		$sql = "SELECT  VP.id,VP.proposedvendorid,VP.rfpno,VP.contact_name,VP.Alt_bid,VP.proposal_total_price, U.name, U.lastname, U.email, U.extension, U.phone, U.cellphone,V.company_name,V.company_address,V.city,V.state,V.zipcode,V.image, V.in_house_vendor,V.company_phone,V.phone_ext,V.alt_phone,V.alt_phone_ext,V.established_year FROM #__cam_vendor_proposals AS VP LEFT JOIN #__cam_vendor_company as V ON VP.proposedvendorid = V.user_id LEFT JOIN #__users as U ON U.id = V.user_id  WHERE VP.rfpno = ".$rfp_id." AND VP.Alt_bid != 'Yes' AND ( VP.proposaltype='Awarded' || VP.proposaltype='Unawarded' || VP.proposaltype='Submit' ) ORDER BY VP.id ";
		$db->setQuery($sql);
		$res = $db->loadObjectList();
		
		for( $i=0; $i<count($res); $i++ ){
				$final_status = '';
				$status =	$this->checkcompliancestatus($res[$i]->proposedvendorid);
					if( $status == 'fail' )
						$final_status = '<font color="red">No</font>'; 
					else if($status == 'success')	
						$final_status = '<font color="green">Yes</font>'; 
					else
						$final_status = '<font color="green">Yes/</font><font color="red">No</font>'; 
							
				$res[$i]->c_status = $final_status ;
			}
			
		return $res;
	}

	//function to get Alt bidded vendors info to display in proposal summary page
	function get_Alt_Bidded_vendors_info()
	{
		$rfp_id = JRequest::getVar('rfp_id','');
		$db = & JFactory::getDBO();
		$user = JFactory::getUser();
		$sql = "SELECT  VP.id,VP.proposedvendorid,VP.rfpno,VP.contact_name,VP.Alt_bid,VP.proposal_total_price, U.name, U.lastname, U.email, U.extension, U.phone, U.cellphone,V.company_name,V.company_address,V.city,V.state,V.zipcode,V.image, V.in_house_vendor,V.company_phone,V.phone_ext,V.alt_phone,V.alt_phone_ext,V.established_year FROM #__cam_vendor_proposals AS VP LEFT JOIN #__cam_vendor_company as V ON VP.proposedvendorid = V.user_id LEFT JOIN #__users as U ON U.id = V.user_id  WHERE VP.rfpno = ".$rfp_id." AND (proposaltype = 'Submit' or proposaltype = 'resubmit') AND VP.Alt_bid = 'yes' ORDER BY VP.id ";
		$db->setQuery($sql);
		$res = $db->loadObjectList();
		for( $i=0; $i<count($res); $i++ ){
				$final_status = '';
				$status =	$this->checkcompliancestatus($res[$i]->proposedvendorid);
					if( $status == 'fail' )
						$final_status = '<font color="red">No</font>'; 
					else if($status == 'success')	
						$final_status = '<font color="green">Yes</font>'; 
					else
						$final_status = '<font color="green">Yes/</font><font color="red">No</font>'; 
							
				$res[$i]->c_status = $final_status ;
			}
		return $res;
	}

	//function to get Alt bidded vendors info to display in proposal summary page
	function get_Alt_Bidded_vendors_infor()
	{
		$rfp_id = JRequest::getVar('rfp_id','');
		$db = & JFactory::getDBO();
		$user = JFactory::getUser();
		$sql = "SELECT  VP.id,VP.proposedvendorid,VP.rfpno,VP.contact_name,VP.Alt_bid,VP.proposal_total_price, U.name, U.lastname, U.email, U.extension, U.phone, U.cellphone,V.company_name,V.company_address,V.city,V.state,V.zipcode,V.image, V.in_house_vendor,V.company_phone,V.phone_ext,V.alt_phone,V.alt_phone_ext,V.established_year FROM #__cam_vendor_proposals AS VP LEFT JOIN #__cam_vendor_company as V ON VP.proposedvendorid = V.user_id LEFT JOIN #__users as U ON U.id = V.user_id  WHERE VP.rfpno = ".$rfp_id." AND  (VP.proposaltype = 'Submit' or VP.proposaltype = 'resubmit' or VP.proposaltype = 'Awarded' or VP.proposaltype = 'Unawarded') AND VP.Alt_bid = 'yes' ORDER BY VP.id ";
		$db->setQuery($sql);
		$res = $db->loadObjectList();
		
		for( $i=0; $i<count($res); $i++ ){
				$final_status = '';
				$status =	$this->checkcompliancestatus($res[$i]->proposedvendorid);
					if( $status == 'fail' )
						$final_status = '<font color="red">No</font>'; 
					else if($status == 'success')	
						$final_status = '<font color="green">Yes</font>'; 
					else
						$final_status = '<font color="green">Yes/</font><font color="red">No</font>'; 
							
				$res[$i]->c_status = $final_status ;
			}
			
		return $res;
	}

	//function to get RFP tasks info
	function get_TASKS_summary()
	{
	    $db = JFactory::getDBO();
		$rfp_id = JRequest::getVar('rfp_id','');
		$user = JFactory::getUser();
		$sql = 'SELECT task_id,rfp_id,linetaskname,is_req_taskvendors FROM #__cam_rfpsow_linetask WHERE rfp_id = '.$rfp_id ;
		$db->Setquery($sql);
		$TASK_details = $db->loadObjectList();

		// "<pre>"; print_r($TASK_details);
		  for($p=0; $p<count($TASK_details); $p++) //to get task price
		  {
		   $price_sql = 'SELECT LP.id,LP.item_id,LP.item_price,LP.vendor_id FROM #__cam_vendor_proposals as VP LEFT JOIN #__cam_rfpsow_docs_lineitems_prices as LP ON VP.proposedvendorid = LP.vendor_id  WHERE LP.item_type="task" AND LP.item_id = '.$TASK_details[$p]->task_id .' AND LP.rfp_id=VP.rfpno AND LP.Alt_bid != "yes" AND VP.Alt_bid != "yes"';
		  $db->Setquery($price_sql);
		  $price = $db->loadObjectList();
		  $TASK_details[$p]->task_price = $price;
		  }

		   for($p=0; $p<count($TASK_details); $p++) //to get task price
		  {
		   $price_sql = 'SELECT LP.id,LP.task_id,LP.upload_doc,LP.vendor_id FROM #__cam_vendor_proposals as VP LEFT JOIN #__cam_rfpsow_uploadfiles as LP ON VP.proposedvendorid = LP.vendor_id  WHERE LP.spl_req ="No" AND LP.task_id = '.$TASK_details[$p]->task_id .' AND LP.rfp_id=VP.rfpno AND LP.Alt_bid != "yes" AND VP.Alt_bid != "yes"';
		  $db->Setquery($price_sql);
		  $vendor_uploads = $db->loadObjectList();

			 for($i=0; $i<count($vendor_uploads); $i++)
			{
				 $arr = explode('/',$vendor_uploads[$i]->upload_doc);
				 $cnt = count($arr);
				 $vendor_uploads[$i]->title = $arr[$cnt-1];
				 $link = '<a  style="color:#7AB800; text-decoration:none;" href="'.JURI::root().'index.php?option=com_camassistant&controller=vendors&task=view_upld_cert&folder_type=uploaded_by_VENDOR&filename='.$vendor_uploads[$i]->upload_doc.'">'.$vendor_uploads[$i]->title.'</a>';
				 $vendor_uploads[$i]->title = $link;
			}
		  $TASK_details[$p]->vendor_uploads = $vendor_uploads;
		  }

		//exit;
		// echo "<pre>"; print_r($TASK_details); exit;
		 return $TASK_details;

	 }

	 //function to get Alt RFP tasks info
	function get_Alt_TASKS_summary()
	{
	    $db = JFactory::getDBO();
		$rfp_id = JRequest::getVar('rfp_id','');
		$user = JFactory::getUser();
		$sql = 'SELECT task_id,rfp_id,linetaskname,is_req_taskvendors FROM #__cam_rfpsow_linetask WHERE rfp_id = '.$rfp_id ;
		$db->Setquery($sql);
		$TASK_details = $db->loadObjectList();
		// "<pre>"; print_r($TASK_details);
		  for($p=0; $p<count($TASK_details); $p++) //to get task price
		  {
		   $price_sql = 'SELECT LP.id,LP.item_id,LP.item_price,LP.vendor_id FROM #__cam_vendor_proposals as VP LEFT JOIN #__cam_rfpsow_docs_lineitems_prices as LP ON VP.proposedvendorid = LP.vendor_id  WHERE LP.item_type="task" AND LP.item_id = '.$TASK_details[$p]->task_id .' AND LP.rfp_id=VP.rfpno AND LP.Alt_bid = "yes" AND VP.Alt_bid = "yes"';
		  $db->Setquery($price_sql);
		  $price = $db->loadObjectList();
		  $TASK_details[$p]->task_price = $price;
		  }
		   for($p=0; $p<count($TASK_details); $p++) //to get task price
		  {
		   $price_sql = 'SELECT LP.id,LP.task_id,LP.upload_doc,LP.vendor_id FROM #__cam_vendor_proposals as VP LEFT JOIN #__cam_rfpsow_uploadfiles as LP ON VP.proposedvendorid = LP.vendor_id  WHERE LP.spl_req ="No" AND LP.task_id = '.$TASK_details[$p]->task_id .' AND LP.rfp_id=VP.rfpno AND LP.Alt_bid = "yes" AND VP.Alt_bid = "yes"';
		  $db->Setquery($price_sql);
		  $vendor_uploads = $db->loadObjectList();
			 for($i=0; $i<count($vendor_uploads); $i++)
			{
				 $arr = explode('/',$vendor_uploads[$i]->upload_doc);
				 $cnt = count($arr);
				 $vendor_uploads[$i]->title = $arr[$cnt-1];
				 $link = '<a style="color:#7AB800; text-decoration:none;" href="'.JURI::root().'index.php?option=com_camassistant&controller=vendors&task=view_upld_cert&folder_type=uploaded_by_VENDOR&filename='.$vendor_uploads[$i]->upload_doc.'">'.$vendor_uploads[$i]->title.'</a>';
				 $vendor_uploads[$i]->title = $link;
			}
		  $TASK_details[$p]->vendor_uploads = $vendor_uploads;

		  }
		//  echo "<pre>"; print_r($TASK_details); exit;
		//exit;
		//echo "<pre>"; print_r($TASK_details); exit;
		 return $TASK_details;

	 }

	 //function to get rfp creator tasks list
	 function get_rfpcreator_tasks()
	 {
	    $db = JFactory::getDBO();
		$rfp_id = JRequest::getVar('rfp_id','');
		$user = JFactory::getUser();
		$sql = 'SELECT task_id,rfp_id,task_desc,taskuploads,linetaskname  FROM #__cam_rfpsow_linetask WHERE rfp_id = '.$rfp_id ;
		$db->Setquery($sql);
		$tasks_list = $db->loadObjectList();

		$pid1 = 'SELECT property_id FROM #__cam_rfpinfo WHERE id = '.$rfp_id ;
		$db->Setquery($pid1);
		$pid = $db->loadResult();
		//echo '<pre>'; print_r($pid);
		$details = 'SELECT property_name,tax_id FROM #__cam_property WHERE id = '.$pid ;
		$db->Setquery($details);
		$details1 = $db->loadObjectList();
		//echo '<pre>'; print_r($details1);
		 $default ='components/com_camassistant/doc/';
		$file_link = $default.str_replace(' ','_',$details1[0]->property_name).'_'.$details1[0]->tax_id.'/';
		//echo '<pre>'; print_r($tasks_list);
		for($i=0; $i<count($tasks_list); $i++)
		{
		$uploads=explode('/',$tasks_list[$i]->taskuploads);

			 $upcount=count($uploads);
			 $attach= $uploads[$upcount-1];
			  if($uploads==''){
			 $file=$tasks_list[$i]->taskuploads;
			 } else {
			 $file= $attach;
			  }
			 $link = '<a style="color:#21314d; text-decoration:none" href="'.JURI::root().'index.php?option=com_camassistant&controller=popupdocs&task=open&title='.$file.'&path='.$file_link.'/'.$tasks_list[$i]->taskuploads.'">'.$file.'</a>';
			 $tasks_list[$i]->file_path = $link;
			//echo $link; echo "<br>";
		}
		//exit;
		return $tasks_list;
	 }

	   //function to get RFP 'Add Exception' info of vendor
	function get_EXCEPTION_summary()
	{
	    $db = JFactory::getDBO();
		$rfp_id = JRequest::getVar('rfp_id','');
		$user = JFactory::getUser();
		$sql = 'SELECT task_id,rfp_id FROM #__cam_rfpsow_linetask WHERE rfp_id = '.$rfp_id ;
		$db->Setquery($sql);
		$EXCEPTION_details = $db->loadObjectList();
		//echo "<pre>"; print_r($TASK_details);
		  for($p=0; $p<count($EXCEPTION_details); $p++) //to get task price
		  {
		  $price_sql = 'SELECT VE.add_exception,VE.check_exception,VE.vendor_id FROM #__cam_vendor_proposals as VP LEFT JOIN #__cam_rfpsow_addexception as VE ON VP.proposedvendorid = VE.vendor_id  WHERE VE.spl_req="No" AND VE.task_id = '.$EXCEPTION_details[$p]->task_id.' AND VE.rfp_id=VP.rfpno AND VE.Alt_bid != "yes"  AND  VP.Alt_bid != "yes"'  ;
		  $db->Setquery($price_sql);
		  $notes = $db->loadObjectList();
		  $EXCEPTION_details[$p]->task_exception = $notes;
		  }
		//echo "<pre>"; print_r($EXCEPTION_details); exit;
		 return $EXCEPTION_details;
	 }

	    //function to get RFP 'Add Exception' info of vendor
	function get_Alt_EXCEPTION_summary()
	{
	    $db = JFactory::getDBO();
		$rfp_id = JRequest::getVar('rfp_id','');
		$user = JFactory::getUser();
		$sql = 'SELECT task_id,rfp_id FROM #__cam_rfpsow_linetask WHERE rfp_id = '.$rfp_id ;
		$db->Setquery($sql);
		$EXCEPTION_details = $db->loadObjectList();
		//echo "<pre>"; print_r($TASK_details);
		  for($p=0; $p<count($EXCEPTION_details); $p++) //to get task price
		  {
		  $price_sql = 'SELECT VE.add_exception,VE.check_exception,VE.vendor_id FROM #__cam_vendor_proposals as VP LEFT JOIN #__cam_rfpsow_addexception as VE ON VP.proposedvendorid = VE.vendor_id  WHERE VE.spl_req="No" AND VE.task_id = '.$EXCEPTION_details[$p]->task_id.' AND VE.rfp_id=VP.rfpno AND VE.Alt_bid = "yes" AND  VP.Alt_bid = "yes"'  ;
		  $db->Setquery($price_sql);
		  $notes = $db->loadObjectList();
		  $EXCEPTION_details[$p]->task_exception = $notes;
		  }
		 //echo "<pre>"; print_r($EXCEPTION_details); exit;
		 return $EXCEPTION_details;
	 }

	 //function to get RFP 'Add Notes' info of vendor
	function get_NOTES_summary()
	{
	    $db = JFactory::getDBO();
		$rfp_id = JRequest::getVar('rfp_id','');
		$user = JFactory::getUser();
		$sql = 'SELECT task_id,rfp_id FROM #__cam_rfpsow_linetask WHERE rfp_id = '.$rfp_id ;
		$db->Setquery($sql);
		$NOTES_details = $db->loadObjectList();
		//echo "<pre>"; print_r($TASK_details);
		  for($p=0; $p<count($NOTES_details); $p++) //to get task price
		  {
		   $price_sql = 'SELECT VN.add_notes,VN.vendor_id FROM #__cam_vendor_proposals as VP LEFT JOIN #__cam_rfpsow_addnotes as VN ON VP.proposedvendorid = VN.vendor_id  WHERE VN.spl_req="No" AND VN.task_id = '.$NOTES_details[$p]->task_id.' AND VN.rfp_id=VP.rfpno AND VN.Alt_bid != "yes" AND VP.Alt_bid != "yes"'  ;
		  $db->Setquery($price_sql);
		  $notes = $db->loadObjectList();
		  $NOTES_details[$p]->task_notes = $notes;
		  }
		  //echo "<pre>"; print_r($NOTES_details);
		 return $NOTES_details;

	 }

	  //function to get RFP 'Add Notes' info of vendor
	function get_Alt_NOTES_summary()
	{
	    $db = JFactory::getDBO();
		$rfp_id = JRequest::getVar('rfp_id','');
		$user = JFactory::getUser();
		$sql = 'SELECT task_id,rfp_id FROM #__cam_rfpsow_linetask WHERE rfp_id = '.$rfp_id ;
		$db->Setquery($sql);
		$NOTES_details = $db->loadObjectList();
		//echo "<pre>"; print_r($TASK_details);
		  for($p=0; $p<count($NOTES_details); $p++) //to get task price
		  {
		   $price_sql = 'SELECT VN.add_notes,VN.vendor_id FROM #__cam_vendor_proposals as VP LEFT JOIN #__cam_rfpsow_addnotes as VN ON VP.proposedvendorid = VN.vendor_id  WHERE VN.spl_req="No" AND VN.task_id = '.$NOTES_details[$p]->task_id.' AND VN.rfp_id=VP.rfpno AND VN.Alt_bid = "yes" AND VP.Alt_bid = "yes"'  ;
		  $db->Setquery($price_sql);
		  $notes = $db->loadObjectList();
		  $NOTES_details[$p]->task_notes = $notes;
		  }
		  //echo "<pre>"; print_r($NOTES_details);
		 return $NOTES_details;

	 }

	 function get_DOCS_summary()
	 {
	    $db = JFactory::getDBO();
		$rfp_id = JRequest::getVar('rfp_id','');
		$user = JFactory::getUser();
		$sql = 'SELECT * FROM #__cam_rfpsow_docs WHERE rfp_id = '.$rfp_id ;
		$db->Setquery($sql);
		$DOCS_details = $db->loadObjectList();

			for($i=0; $i<count($DOCS_details); $i++)
			{
			 $arr = explode('/',$DOCS_details[$i]->doc_path);
			 $cnt = count($arr);
			 $DOCS_details[$i]->title = $arr[$cnt-1];
			 $sql = 'SELECT LP.id,LP.item_id,LP.item_price,LP.vendor_id FROM #__cam_vendor_proposals as VP LEFT JOIN #__cam_rfpsow_docs_lineitems_prices as LP ON VP.proposedvendorid = LP.vendor_id  WHERE LP.item_type="doc" AND LP.item_id = '.$DOCS_details[$i]->doc_id .' AND LP.rfp_id=VP.rfpno  AND LP.Alt_bid != "yes" AND VP.Alt_bid != "yes"';
			 //$sql = 'SELECT item_price FROM #__cam_rfpsow_docs_lineitems_prices WHERE rfp_id = '.$rfp_id.' AND item_type="doc" AND item_id='.$DOCS_details[$i]->doc_id;
			$db->Setquery($sql);
			$price = $db->loadObjectList();
			$DOCS_details[$i]->doc_price = $price;
			}
			//echo "<pre>"; print_r($DOCS_details);
		 return $DOCS_details;
	 }

	 //function to show splrequirements details
	  function get_SPLReq_Category()
	 {
	  $db = JFactory::getDBO();
	  $rfp_id = JRequest::getVar('rfp_id','');
	  $sql = " SELECT * FROM jos_cam_rfpreq_categories where req_parentid=0";
	  $db->Setquery($sql);
	  $categories = $db->loadObjectList();
	  return $categories;
	 }

	 function get_vendors_cnt()
	 {
	 	$rfp_id = JRequest::getVar('rfp_id','');
	 	$db = JFactory::getDBO();
	 	$sql = "SELECT proposedvendorid FROM #__cam_vendor_proposals  WHERE rfpno=".$rfp_id." AND  proposaltype!='ITB' AND proposaltype!='Draft' AND  proposaltype!='review' AND Alt_bid != 'yes'";
		$db->Setquery($sql);
		$vendor_ids = $db->loadObjectList();
		return $vendor_ids;
	 }
	 /* get_vendors_cnt_award() for award proposals --  anil_23-08-2011 */
	 function get_vendors_cnt_award()
	 {
	 	$rfp_id = JRequest::getVar('rfp_id','');
	 	$db = JFactory::getDBO();
	 	$sql = "SELECT proposedvendorid FROM #__cam_vendor_proposals  WHERE rfpno=".$rfp_id." AND Alt_bid != 'yes'";
		$db->Setquery($sql);
		$vendor_ids = $db->loadObjectList();
		return $vendor_ids;
	 }

	 function get_SPLRequirements()
	 {
		  $db = JFactory::getDBO();
		  $rfp_id = JRequest::getVar('rfp_id','');
		  $user = JFactory::getUser();
		  $sql = " SELECT b.req_parentid as main_id, a.req_title as main_title FROM jos_cam_rfpreq_categories as a , jos_cam_rfpreq_info as b  WHERE a.req_id = b.req_parentid 	 and b.rfp_id = ".$rfp_id."   group by b.req_parentid order by b.req_parentid ";
		  $db->Setquery($sql);
		  $main_cat = $db->loadObjectList($main_cat);
		  $SPLRequirements_details['main'] = $main_cat;
		 $sql = " SELECT b.req_parentid as main_id, b.req_subparentid as sub_id, a.req_title as sub_title FROM jos_cam_rfpreq_categories as a , jos_cam_rfpreq_info as b  WHERE a.req_id = b.req_subparentid and b.rfp_id = ".$rfp_id." AND  req_subparentid != 0  group by b.req_subparentid order by b.req_parentid ";
		  $db->Setquery($sql);
		  $sub_cat = $db->loadObjectList();
		  $SPLRequirements_details['sub'] = $sub_cat;
		  $sql = " SELECT b.req_parentid as main_id, b.req_subparentid as sub_id, b.req_id as child_id, a.req_title as child_title, b.price FROM jos_cam_rfpreq_categories as a , jos_cam_rfpreq_info as b  WHERE a.req_id = b.req_id and b.rfp_id = ".$rfp_id." AND b.req_parentid != 0 AND req_subparentid != 0  order by b.req_parentid ";
		  $db->Setquery($sql);
		  $child = $db->loadObjectList();
		  //echo "<pre>"; print_r($child);
		  //$sql = " SELECT b.req_parentid as main_id, b.req_subparentid as sub_id, b.req_id as child_id, a.req_title as child_title,c.amount FROM jos_cam_rfpreq_categories as a LEFT JOIN jos_cam_rfpreq_info as b ON a.req_id = b.req_id LEFT JOIN #__cam_rfpsow_splreq_price c ON a.req_id = c.req_id WHERE a.req_id = b.req_id and b.rfp_id = ".$rfp_id." AND b.req_parentid != 0 AND req_subparentid != 0 AND c.vendor_id = ".$user->id."  order by b.req_parentid ";

		 /* for($y=0; $y<count($vendor_ids); $y++)
		  {
			  for($x=0; $x<count($child); $x++)
			  {
			  if($child[$x]->child_id == 8 || $child[$x]->child_id == 9)
			  {
				  echo $sql = "SELECT amount FROM  #__cam_rfpsow_splreq_price WHERE req_id = ".$child[$x]->child_id." AND rfp_id = ".$rfp_id." AND vendor_id = ".$vendor_ids[$y]->proposedvendorid ; echo "<br/>";
				  $db->Setquery($sql);
				  $amount = $db->loadResult();
				  $child[$x]->vendor_id = $vendor_ids[$y]->proposedvendorid;
				  $child[$x]->amount = $amount;
				  echo "<pre>"; print_r($child);
			  }
			  }
			  exit;
		  } */
		 // echo "<pre>"; print_r($child);
		   $SPLRequirements_details['child'] = $child;
          // echo '<pre>'; print_r($SPLRequirements_details); exit;
		   return $SPLRequirements_details;
	   }


	   function get_vendor_proposal_summary_dashboard()
	{
	    $db = JFactory::getDBO();
		$user = JFactory::getUser();
		//$today = date('m-d-Y');
		$m= date("m"); // Month value
		$de= date("d"); //today's date
		$y= date("Y"); // Year value
		$today1 = date('m-d-Y', mktime(0,0,0,$m,($de-1),$y));
		$now_time = date('H:iA');
		$today = date('m-d-Y');
		//query to get Drfat proposals
		$prp_Draft_sql = "SELECT VP.id, VP.Alt_bid, R.rfp_type,VP.proposedvendorid,VP.proposaltype,R.close_vendor, P.divcounty, P.city, VP.publish, R.id as rfp_id, R.projectName, R.proposalDueDate, R.proposalDueTime, P.id as Prperty_id, P.property_name, R.jobtype  FROM  #__cam_vendor_proposals as VP
		LEFT JOIN #__cam_rfpinfo as R ON R.id = VP.rfpno
		LEFT JOIN #__cam_property as P ON R.property_id = P.id
		WHERE VP.proposedvendorid=".$user->id." AND (VP.proposaltype = 'Draft' OR VP.proposaltype = 'ITB' OR VP.proposaltype = 'review' OR VP.proposaltype = 'uninvited') AND VP.bidfrom = '' AND STR_TO_DATE(R.proposalDueDate, '%m-%d-%Y') >= '".$today1."'  order by R.proposalDueDate,R.proposalDueTime  DESC ";


		$db->Setquery($prp_Draft_sql);
		$prp_Draft_summary = $db->loadObjectList();

		if(!$prp_Draft_summary){
		$prp_Draft_sql = "SELECT VP.id, VP.Alt_bid, R.rfp_type,VP.proposedvendorid,R.close_vendor, P.divcounty, P.city, VP.publish, R.id as rfp_id, R.projectName, R.proposalDueDate, R.proposalDueTime, P.id as Prperty_id, P.property_name, R.jobtype  FROM  #__cam_vendor_proposals as VP
		LEFT JOIN #__cam_rfpinfo as R ON R.id = VP.rfpno
		LEFT JOIN #__cam_property as P ON R.property_id = P.id
		WHERE VP.proposedvendorid=".$user->id." AND (VP.proposaltype = 'Draft' OR VP.proposaltype = 'ITB' OR VP.proposaltype = 'review') AND VP.bidfrom = '' AND  STR_TO_DATE(R.proposalDueDate, '%m-%d-%Y') >= '".$today."'  order by R.proposalDueDate,R.proposalDueTime  DESC";
		$db->Setquery($prp_Draft_sql);
		$prp_Draft_summary = $db->loadObjectList();
		}
		//echo "<pre>"; print_r($prp_Draft_summary);
		//code to display due timeleft
		for($d=0,$c=0; $d<count($prp_Draft_summary); $d++)
		{
			$main = explode('-',$prp_Draft_summary[$d]->proposalDueDate);
			$date = $main[2].'-'.$main[0].'-'.$main[1];
			$newdate = strtotime ( '0 day' , strtotime ( $date ) ) ;
			$prp_Draft_summary[$d]->proposalDueDate = date ( 'm-d-Y' , $newdate );
			$duedate = $this->get_duedate($prp_Draft_summary[$d]->proposalDueTime,$prp_Draft_summary[$d]->proposalDueDate);
			/*echo $prp_Draft_summary[$d]->proposalDueDate; echo "<br/>";
			if($prp_Draft_summary[$d]->rfp_id == '882405') echo $duedate;*/
			$time_left_details = $this->fnCalculateEndDateTime($duedate);
			// echo "<pre>"; print_r($time_left_details);
			 if($time_left_details['days'] == 0)
			 $time_left_details['days'] = '';
			 else
			 $time_left_details['days'] = $time_left_details['days'].' Day(s) &nbsp;';
			 $prp_Draft_summary[$d]->time_left = $time_left_details['days'].$time_left_details['hours'].'&nbsp;Hr(s)'.'&nbsp;'.$time_left_details['minutes'].'&nbsp;Mins';
			  if(($time_left_details['days'] > 0  || $time_left_details['hours'] > 0 || $time_left_details['minutes'] > 0))
			 {
			 /* $c_prp_Draft_summary[$c] = $prp_Draft_summary[$d];
			  $c++;*/
			   $prp_Draft_summary[$d]->access = 'Yes';
			 }
			 else
			 $prp_Draft_summary[$d]->access = 'No';

		}
		$vendor_proposal_summary[0] = $prp_Draft_summary;
		//$vendor_proposal_summary[0] = $c_prp_Draft_summary;
		//echo "<pre>"; print_r($vendor_proposal_summary[0]);
		//query to get submitted proposals
		$today = date('m-d-Y');
		$prp_Submitted_sql = "SELECT VP.id, VP.Alt_bid, R.close_vendor,VP.publish, P.divcounty, P.city,VP.proposedvendorid, R.id as rfp_id, R.projectName, R.proposalDueDate, R.rfp_type, R.proposalDueTime,P.id as Prperty_id, P.property_name, R.jobtype  FROM  #__cam_vendor_proposals as VP
		LEFT JOIN #__cam_rfpinfo as R ON R.id = VP.rfpno
		LEFT JOIN #__cam_property as P ON R.property_id = P.id
		WHERE VP.proposedvendorid=".$user->id." AND (VP.proposaltype = 'Submit' OR VP.proposaltype = 'resubmit')  order by R.proposalDueDate,R.proposalDueTime  DESC ";

		$db->Setquery($prp_Submitted_sql);
		$prp_Submitted_summary = $db->loadObjectList();
		if(!$prp_Submitted_summary) {
		$prp_Submitted_sql = "SELECT VP.id, VP.Alt_bid, VP.publish,R.close_vendor, P.divcounty, P.city, VP.proposedvendorid, R.id as rfp_id, R.projectName, R.proposalDueDate, R.rfp_type, R.proposalDueTime,P.id as Prperty_id, P.property_name, R.jobtype  FROM  #__cam_vendor_proposals as VP
		LEFT JOIN #__cam_rfpinfo as R ON R.id = VP.rfpno
		LEFT JOIN #__cam_property as P ON R.property_id = P.id
		WHERE VP.proposedvendorid=".$user->id." AND (VP.proposaltype = 'Submit' OR VP.proposaltype = 'resubmit') order by R.proposalDueDate,R.proposalDueTime  DESC ";

		$db->Setquery($prp_Submitted_sql);
		$prp_Submitted_summary = $db->loadObjectList();
		}

		//echo "<pre>"; print_r($prp_Submitted_summary);

		//code to display due timeleft
		for($S=0,$R=0; $S<count($prp_Submitted_summary); $S++)
		{
			 $main = explode('-',$prp_Submitted_summary[$S]->proposalDueDate);
			 $date = $main[2].'-'.$main[0].'-'.$main[1];
			 $newdate = strtotime ( '0 day' , strtotime ( $date ) ) ;
			 $prp_Submitted_summary[$S]->proposalDueDate = date ( 'm-d-Y' , $newdate );
			 $duedate = $this->get_duedate($prp_Submitted_summary[$S]->proposalDueTime,$prp_Submitted_summary[$S]->proposalDueDate);
			 $time_left_details = $this->fnCalculateEndDateTime($duedate);
			 if($time_left_details['days'] == 0)
			 $time_left_details['days'] = '';
			 else
			 $time_left_details['days'] = $time_left_details['days'].' Day(s) &nbsp;';
			 $prp_Submitted_summary[$S]->time_left = $time_left_details['days'].$time_left_details['hours'].'&nbsp;Hr(s)'.'&nbsp;'.$time_left_details['minutes'].'&nbsp;Mins';
			 //code to cnt no of alternate bids
			 $sql = "SELECT count(rfpno) FROM #__cam_vendor_proposals where rfpno=".$prp_Submitted_summary[$S]->rfp_id." and proposedvendorid = ".$prp_Submitted_summary[$S]->proposedvendorid."  group by rfpno";
			 $db->Setquery($sql);
		     $prp_Submitted_summary[$S]->total_bids = $db->loadResult();
			 if(($time_left_details['days'] > 0  || $time_left_details['hours'] > 0 || $time_left_details['minutes'] > 0))
			 {
			 /* $R_prp_Draft_summary[$R] = $prp_Submitted_summary[$S];
			  $R++;*/
			  $prp_Submitted_summary[$S]->access = 'Yes';
			 }
			 else
			  $prp_Submitted_summary[$S]->access = 'No';
		}
		$vendor_proposal_summary[1] =  $prp_Submitted_summary;

		return $vendor_proposal_summary;
	}
	function get_compliance_WC_data()
	{
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$sql = "SELECT * FROM #__cam_vendor_workers_compansation WHERE vendor_id=".$user->id;
		$db->Setquery($sql);
		$WC_data = $db->loadObjectList();
		return $WC_data;
	}
	
	function get_invitation_jobs(){
	
	    /*****************code to send to fnd**************************/
		global $mainframe;
	    $db = JFactory::getDBO();
		$user = JFactory::getUser();
		$m= date("m"); // Month value
		$de= date("d"); //today's date
		$y= date("Y"); // Year value
		$today = date('m-d-Y', mktime(0,0,0,$m,($de+1),$y));
		//$today = date('m-d-Y');

		//$query = "SELECT A.id, A.rfp_id,A.prp_id,R.projectName,R.proposalDueDate,A.not_interested,P.property_name,P.property_name,P.divcounty,R.industry_id,R.proposalDueTime,A.status  FROM #__cam_vendor_availablejobs as A
				//  LEFT JOIN #__cam_rfpinfo as R ON A.rfp_id = R.id
				//  LEFT JOIN #__rfp_invitations as I ON A.rfp_id = I.rfpid
				//  LEFT JOIN #__cam_property as P ON A.prp_id = P.id
				//  WHERE I.rfpid = A.rfp_id AND I.vendorid = A.user_id AND A.status = 1 AND R.rfp_type = 'rfp' AND  A.user_id=".$user->id." AND R.publish=1 and A.publish=1 order by R.proposalDueDate,R.proposalDueTime  ASC";


  $query = "SELECT DISTINCT(A.rfp_id), A.id, A.prp_id,R.projectName,R.proposalDueDate,A.not_interested,P.property_name,P.property_name,P.divcounty,R.property_id,R.industry_id,R.proposalDueTime,A.status,R.jobtype  FROM jos_cam_vendor_availablejobs as A
				  LEFT JOIN jos_cam_rfpinfo as R ON A.rfp_id = R.id
				  LEFT JOIN jos_rfp_invitations as I ON A.rfp_id = I.rfpid
				  LEFT JOIN jos_cam_property as P ON A.prp_id = P.id
				  WHERE I.rfpid = A.rfp_id AND I.vendorid = A.user_id AND A.status = 0 AND R.rfp_type = 'rfp' AND  A.user_id=".$user->id." AND R.publish=1 and A.publish=0 order by R.proposalDueDate,R.proposalDueTime  ASC " ;
				  
		//$res_records = $this->_getList($query,$this->getState("limitstart"),$this->getState("limit"));
		$db->Setquery($query);
		$res_records = $db->loadAssocList();
		
		//echo "<pre>"; print_r($res_records); 
		//code to get county, industry name
		for($t=0; $t<count($res_records); $t++)
		{
		//echo $res_records[$t]['divcounty']; exit;
			if($res_records[$t]['divcounty'] == ''){
		$sql_county = "SELECT divcounty FROM #__cam_property WHERE id = ".$res_records[$t]['property_id']." ";
		$db->Setquery($sql_county);
		$county_id = $db->loadResult();	
		$res_records[$t]['divcounty'] = $county_id ;
		
		// Check vendor in uninvited or NOT
		$sql_un = "SELECT proposaltype FROM #__cam_vendor_proposals WHERE rfpno=".$res_records[$t]['rfp_id']." and proposedvendorid = ".$user->id." ";
		$db->Setquery($sql_un);
		$uninvited = $db->loadResult();	
		$res_records[$t]['uninvited'] = $uninvited ;
		/*$sql_countyid = "SELECT County FROM #__cam_counties WHERE id = ".$county_id." ";
		$db->Setquery($sql_countyid);
		$county_name = $db->loadResult();*/	
		//$res_records[$t]['County'] = $county_name;
			}
			else{
		$res_records[$t]['divcounty'] = $res_records[$t]['divcounty'];	
			}
		
		
		
		$sql_city = "SELECT city FROM #__cam_property WHERE id = ".$res_records[$t]['property_id']." ";
		$db->Setquery($sql_city);
		$xyz_city = $db->loadResult();
		$res_records[$t]['City'] = $xyz_city;
		
		$sql = "SELECT S.County,I.industry_name FROM #__cam_counties as S,  #__cam_industries as I WHERE S.id = ".$res_records[$t]['divcounty']." AND I.id=".$res_records[$t]['industry_id'];
		$db->Setquery($sql);
		$xyz = $db->loadAssocList();
		$res_records[$t]['industry_name'] = $xyz[0]['industry_name'];
		$res_records[$t]['County'] = $xyz[0]['County'];
		}
		$records = $res_records;
		
		for($d=0,$c=0; $d<count($records); $d++)
		{
			$main = explode('-',$records[$d]['proposalDueDate']);
			$date = $main[2].'-'.$main[0].'-'.$main[1];
			$newdate = strtotime ($date) ;
			//$newdate = strtotime ( '-1 day' , strtotime ( $date ) ) ;
			$records[$d]['proposalDueDate'] = date ( 'm-d-Y' , $newdate );
			$duedate = $this->get_duedate($records[$d]['proposalDueTime'],$records[$d]['proposalDueDate']);
			$time_left_details = $this->fnCalculateEndDateTime($duedate);
//			echo "<pre>"; print_r($time_left_details);
			 if($time_left_details['days'] == 0)
			 $time_left_details['days'] = '';
			 else
			 $time_left_details['days'] = $time_left_details['days'].' Day(s) &nbsp;';
			 $records[$d]['time_left'] = $time_left_details['days'].$time_left_details['hours'].'&nbsp;Hr(s)'.'&nbsp;'.$time_left_details['minutes'].'&nbsp;Mins';
			// if(($time_left_details['days'] > 0  || $time_left_details['hours'] > 0 || $time_left_details['minutes'] > 0))
			 //{
			 $records[$d]['time_diff'] = $time_left_details['time_diff'];
			 $new_records[$c] = $records[$d];
			 $c++;
			// }
			// else if(($time_left_details['days'] == '' ||  $time_left_details['days'] < 0) && ($time_left_details['hours'] == 0 || $time_left_details['hours'] < 0) && ($time_left_details['minutes'] == 0 || $time_left_details['minutes'] < 0))
			// {
			//  $records[$d]['time_over'] = '0Hrs';
			  //unset($records[$d]);
			//  }


		}

		//echo count($new_records);
		$records = $new_records;
		
		// Decode to object
		for($i=0; $i<count($records); $i++)
		{
		array_unshift($records[$i],$records[$i]['time_diff']);
		array_pop($records[$i]);
		}
		if($records)
		{
		asort($records);
		sort($records);
		}
		//echo count($records);
		//echo $this->getState('limit'); echo '-----'; echo $this->getState('limitstart');
		/*for($p=0,$q=0; $p<count($records); $p++)
		{
			$db = JFactory::getDBO();
			$sql = "SELECT maxProposals FROM #__cam_rfpinfo WHERE id=".$records[$p]['rfp_id'];
			$db->Setquery($sql);
			$Max_bids = $db->loadResult();
			$prp_sql = "SELECT count(distinct(proposedvendorid)) FROM jos_cam_vendor_proposals WHERE rfpno=".$records[$p]['rfp_id']." AND proposaltype IN ('ITB','review','resubmit','Draft','Submit') AND Alt_bid != 'yes' ";
			$db->Setquery($prp_sql);
			$Prp_bids = $db->loadResult();
			if($Max_bids > $Prp_bids)
			{
				$st = 'Allow';
				$records[$p]['bid_status'] = $st;
				$p_records[$q] = $records[$p];
				$q++;
			}
		}
		$records = $p_records;*/
		// echo count($records);
		if($this->getState('limitstart') != 0)
		{
			$ind = $mainframe->getUserStateFromRequest( "limitstart", 'limitstart', 0 );
			$ind = $ind;
		}
        else
		{
		$ind=0;
		}
		//echo count($res_records);
		for($a = $ind, $b=0; $a<count($records); $a++)
		{

			if($b<$this->getState('limit') || $this->getState('limit') == 0 )
			{
				//echo $b.'------'.$a.'---------'.$this->getState('limitstart'); echo "<br/>";
				$st = 'Allow';
				$records[$a]['bid_status'] = $st;
				$rec[$b] = $records[$a];
				$b++;
			}

		}
		// echo count($rec);
		
		return $rec;
	
	}
	//function to get vendor compliance WCI data details sateesh
	function get_compliance_W9_datav($user)
	{
		$db = JFactory::getDBO();
		$sql = "SELECT * FROM #__cam_vendor_compliance_w9docs WHERE vendor_id=".$user;
		$db->Setquery($sql);
		$W9_data = $db->loadObjectList();
		return $W9_data;
	}
	//function to get vendor compliance WCI data details sateesh
	function get_compliance_WCI_datav($user)
	{
		$db = JFactory::getDBO();
		$sql = "SELECT * FROM #__cam_vendor_workers_companies_insurance WHERE vendor_id=".$user;
		$db->Setquery($sql);
		$WCI_data = $db->loadObjectList();
		return $WCI_data;
	}
	function get_compliance_WC_datav($user)
	{
		$db = JFactory::getDBO();
		$sql = "SELECT * FROM #__cam_vendor_workers_compansation WHERE vendor_id=".$user;
		$db->Setquery($sql);
		$WC_data = $db->loadObjectList();
		return $WC_data;
	}
	//function to get vendor compliance GLI data
	function get_compliance_GLI_datav($user)
	{
		$db = JFactory::getDBO();
		$sql = "SELECT * FROM #__cam_vendor_liability_insurence  WHERE vendor_id=".$user;
		$db->Setquery($sql);
		$GLI_data = $db->loadObjectList();
		return $GLI_data;
	}
	function get_compliance_AIP_datav($user)
	{
		$db = JFactory::getDBO();
		//$user = JFactory::getUser();
		$sql = "SELECT * FROM #__cam_vendor_auto_insurance WHERE vendor_id=".$user;
		$db->Setquery($sql);
		$AIP_data = $db->loadObjectList();
		return $AIP_data;
	}
	//function to get vendor compliance OLN data
	function get_compliance_OLN_datav($user)
	{
		$db = JFactory::getDBO();
		$sql = "SELECT * FROM #__cam_vendor_occupational_license WHERE vendor_id=".$user;
		$db->Setquery($sql);
		$OLN_data = $db->loadObjectList();
		//echo "<pre>"; print_r($OLN_data); exit;
		return $OLN_data;
	}
	//function to get vendor compliance PLN data
	function get_compliance_PLN_datav($user)
	{
		$db = JFactory::getDBO();
		$sql = "SELECT * FROM #__cam_vendor_professional_license WHERE vendor_id=".$user;
		$db->Setquery($sql);
		$PLN_data = $db->loadObjectList();
		return $PLN_data;
	}
	//function to get vendor umbrella data
	function get_compliance_UMB_datav($user)
	{
		$db = JFactory::getDBO();
		$sql = "SELECT * FROM #__cam_vendor_umbrella_license WHERE vendor_id=".$user;
		$db->Setquery($sql);
		$UMB_data = $db->loadObjectList();
		return $UMB_data;
	}
	//function to get list of states
	function get_edit_compliance_statesv()
	{
		$db = JFactory::getDBO();
		$sql = "SELECT * FROM #__cam_vendor_states WHERE id != '38' order by state";
		$db->Setquery($sql);
		$states = $db->loadObjectList();
		return $states;
	}
	//function to display states in vendor registration
	function get_compliances_OLN_statesv()
	{
		global $mainframe;
		$db = JFactory::getDBO();
		$states[] = JHTML::_('select.option', '0', '-Select State-');
		$compliance = JRequest::getVar('compliance','');
		$compliance = $compliance+1;
		$this->_filter_vendorslist	= $mainframe->getUserStateFromRequest( $context.'filter_vendorslist', 'filter_vendorslist', 0,	'string' );
		$sql = "SELECT * FROM #__cam_vendor_states WHERE id != '38' order by state";
		$db->Setquery($sql);
		$objects = $db->loadObjectList();
		foreach( $objects as $obj )
		{
			$states[] = JHTML::_('select.option',  $obj->id, $obj->state);
		}
		//echo "<pre>"; print_r($vendorslist); exit;
		$result = JHTML::_('select.genericlist',$states, 'OLN_state[]', 'class="inputbox" size="1" ' . $javascript , 'value', 'text','', 'OLN_state'.$compliance,  $this->_filter_states);
	   return $result;
	}
	//function to display states in vendor registration
	function get_compliances_PLN_statesv()
	{
		global $mainframe;
		$db = JFactory::getDBO();
		$states[] = JHTML::_('select.option', '0', '-Select State-');
		$compliance = JRequest::getVar('compliance','');
		$compliance = JRequest::getVar('PLN_title','1');
		//$compliance = $compliance+1;
		$this->_filter_vendorslist	= $mainframe->getUserStateFromRequest( $context.'filter_vendorslist', 'filter_vendorslist', 0,	'string' );
		$sql = "SELECT * FROM #__cam_vendor_states WHERE id != '38' order by state";
		$db->Setquery($sql);
		$objects = $db->loadObjectList();
		foreach( $objects as $obj )
		{
			$states[] = JHTML::_('select.option',  $obj->id, $obj->state);
		}
		//echo "<pre>"; print_r($vendorslist); exit;
		$result = JHTML::_('select.genericlist',$states, 'PLN_state[]', 'class="inputbox" size="1" ' . $javascript , 'value', 'text','', 'PLN_state'.$compliance,  $this->_filter_states);
	   return $result;
	}
	//function to get w9 upload certificate link
	function get_W9_upld_cert_linkv()
	{
	    /*****************code to send to fnd**************************/
	    JHTML::_('behavior.modal');
        $uri	=& JURI::getInstance();
		$base	= $uri->toString( array('scheme', 'host', 'port'));
		$link	= $base;
		$url	= 'index.php?option=com_camassistant&controller=vendors&task=compliance_upload_form&text_name=W9&compliance=0';
		$status = 'width=400,height=350,menubar=yes,resizable=yes';
		$text = '<img src="templates/camassistant_left/images/uploadw9.gif" alt="Upload Certificate"  width="87" height="22" />';
        $attribs['rel']	= "{handler: 'iframe', size: {x: 660, y: 350}}";
		$attribs['class']	= 'modal';
		$attribs['title']	= JText::_( 'Upload A File' );
		//$attribs['onclick'] = "window.open(this.href,'win2','".$status."'); return false;";
		$output = JHTML::_('link', JRoute::_($url), $text, $attribs);
		return $output;
		/*****************end of code to send to fnd**************************/
	}
	//function to get GLI upload certificate link
	function get_GLI_upld_cert_linkv()
	{
	    /*****************code to send to fnd**************************/
	    JHTML::_('behavior.modal');
        $uri	=& JURI::getInstance();
		$base	= $uri->toString( array('scheme', 'host', 'port'));
		$link	= $base;
		$url	= 'index.php?option=com_camassistant&controller=vendors&task=compliance_upload_form&text_name=GLI&compliance=0';
		$status = 'width=400,height=350,menubar=yes,resizable=yes';
		$text = '<img src="templates/camassistant_left/images/upload_certificate.gif" alt="Upload Certificate"  width="113" height="22" />';
        $attribs['rel']	= "{handler: 'iframe', size: {x: 660, y: 350}}";
		$attribs['class']	= 'modal';
		$attribs['title']	= JText::_( 'Upload A File' );
		//$attribs['onclick'] = "window.open(this.href,'win2','".$status."'); return false;";
		$output = JHTML::_('link', JRoute::_($url), $text, $attribs);
		return $output;
		/*****************end of code to send to fnd**************************/
	}
	//function to get OLN upload certificate link
	function get_WCI_upld_cert_linkv()
	{
	    /*****************code to send to fnd**************************/
	    JHTML::_('behavior.modal');
        $uri	=& JURI::getInstance();
		$base	= $uri->toString( array('scheme', 'host', 'port'));
		$link	= $base;
		$url	= 'index.php?option=com_camassistant&controller=vendors&task=compliance_upload_form&text_name=WCI&compliance=0';
		$status = 'width=400,height=350,menubar=yes,resizable=yes';
		$text = '<img src="templates/camassistant_left/images/upload_certificate.gif" alt="Upload Certificate"  width="113" height="22" />';
        $attribs['rel']	= "{handler: 'iframe', size: {x: 660, y: 350}}";
		$attribs['class']	= 'modal';
		$attribs['title']	= JText::_( 'Upload A File' );
		//$attribs['onclick'] = "window.open(this.href,'win2','".$status."'); return false;";
		$output = JHTML::_('link', JRoute::_($url), $text, $attribs);
		return $output;
		/*****************end of code to send to fnd**************************/
	}
	//function to get OLN upload certificate link
	function get_OLN_upld_cert_linkv()
	{
	    /*****************code to send to fnd**************************/
	    JHTML::_('behavior.modal');
        $uri	=& JURI::getInstance();
		$compliance = JRequest::getVar('compliance','0');
		//$compliance = $compliance+1;
		$base	= $uri->toString( array('scheme', 'host', 'port'));
		$link	= $base;
		$url	= 'index.php?option=com_camassistant&controller=vendors&task=compliance_upload_form&text_name=OLN&compliance='.$compliance;
		$status = 'width=400,height=350,menubar=yes,resizable=yes';
		$text = '<img src="templates/camassistant_left/images/upload_certificate.gif" alt="Upload Certificate"  width="113" height="22" />';
        $attribs['rel']	= "{handler: 'iframe', size: {x: 660, y: 350}}";
		$attribs['class']	= 'modal';
		$attribs['title']	= JText::_( 'Upload A File' );
		//$attribs['onclick'] = "window.open(this.href,'win2','".$status."'); return false;";
		$output = JHTML::_('link', JRoute::_($url), $text, $attribs);
		return $output;
		/*****************end of code to send to fnd**************************/
	}
	//function to get OLN upload certificate link
	function get_PLN_upld_cert_linkv()
	{
	    /*****************code to send to fnd**************************/
	    JHTML::_('behavior.modal');
        $uri	=& JURI::getInstance();
		$compliance = JRequest::getVar('compliance','0');
		//$compliance = $compliance+1;
		$base	= $uri->toString( array('scheme', 'host', 'port'));
		$link	= $base;
		$url	= 'index.php?option=com_camassistant&controller=vendors&task=compliance_upload_form&text_name=PLN&compliance='.$compliance;
		$status = 'width=400,height=350,menubar=yes,resizable=yes';
		$text = '<img src="templates/camassistant_left/images/upload_certificate.gif" alt="Upload Certificate"  width="113" height="22" />';
        $attribs['rel']	= "{handler: 'iframe', size: {x: 660, y: 350}}";
		$attribs['class']	= 'modal';
		$attribs['title']	= JText::_( 'Upload A File' );
		//$attribs['onclick'] = "window.open(this.href,'win2','".$status."'); return false;";
		$output = JHTML::_('link', JRoute::_($url), $text, $attribs);
		return $output;
		/*****************end of code to send to fnd**************************/
	}
	//for getting industryname in edit vendor compilance page
	function getindustry_idsv($userid)
	{
		$db = JFactory::getDBO();
		$query ="select industry_id from #__cam_vendor_industries Where user_id =".$userid;
		$db->setQuery($query);
		$results = $db->loadResultArray();

		return $results;
	}
	//To get the vendor details
	function getvendorinformation($userid){
	$user = JFactory::getUser();
	$db = & JFactory::getDBO();
	$getvendordata = "SELECT U.id, U.name, U.email, U.lastname, V.company_phone, V.company_name, V.company_address, V.company_addresss, U.cellphone, V.phone_ext, V.image, V.established_year, V.zipcode, V.city, V.state, V.company_web_url, U.subscribe_type FROM #__users as U, #__cam_vendor_company  as V where  U.id=V.user_id and U.id=".$userid." ";
	$db->setQuery( $getvendordata);
	$v_info = $db->loadObject();
	//To get the vendor rating
	$ratecount = "SELECT V.apple FROM `#__cam_vendor_proposals` as U, `#__cam_rfpinfo` as V where U.proposedvendorid=".$userid." and V.apple!=0 and V.apple_publish=0 and U.proposaltype='Awarded' and U.rfpno = V.id ";
	$db->setQuery($ratecount);
	$count_vs=$db->loadObjectList();
	//To get the CAMA rAting
		$camratingf = "SELECT camrating FROM `#__users` where id=".$userid."  ";
		$db->setQuery($camratingf);
		$cam_ratingf = $db->loadResult();
		
	if($count_vs){
	for($c=0; $c<count($count_vs); $c++){
	$total = $total + $count_vs[$c]->apple ;
	}
	$camrating = "SELECT camrating FROM `#__users` where id=".$userid."  ";
	$db->setQuery($camrating);
	$cam_rating = $db->loadResult();
	
		if($cam_rating) {
		$total = $total + $cam_rating ;
		$count = count($count_vs) + 1;
		$avgrating = $total  / $count;	
		$rating =  round($avgrating, 1); 
		}
		else {
		$avgrating = $total  / count($count_vs);	
		$rating =  round($avgrating, 1); 
		}
	}
	else if($cam_ratingf){
	$rating = round($cam_ratingf, 1); 
	}
	else{
	$rating = 4 ;
	}
	
	if ($rating > 0 && $rating <= 0.50)
			{ $rate_image = $rateimage.'5.png';  $rating='0.5'; }
			elseif ($rating > 0.50 && $rating <= 1.00)
			{ $rate_image = $rateimage.'10.png'; $rating='1'; }
			elseif ($rating > 1.00 && $rating <= 1.50)
			{ $rate_image = $rateimage.'15.png'; $rating='1.5';}
			elseif ($rating > 1.50 && $rating <= 2.00)
			{ $rate_image = $rateimage.'20.png'; $rating='2';}
			elseif ($rating > 2.00 && $rating <= 2.50)
			{ $rate_image = $rateimage.'25.png'; $rating='2.5';}
			elseif ($rating > 2.50 && $rating <= 3.00)
			{ $rate_image = $rateimage.'30.png'; $rating='3';}
			elseif ($rating > 3.00 && $rating <= 3.50)
			{ $rate_image = $rateimage.'35.png'; $rating='3.5';}
			elseif ($rating > 3.50 && $rating <= 4.00)
			{ $rate_image = $rateimage.'40.png'; $rating='4';}
			elseif ($rating > 4.00 && $rating <= 4.50)
			{ $rate_image = $rateimage.'45.png'; $rating='4.5';}
			elseif ($rating > 4.50 && $rating <= 5.00)
			{ $rate_image = $rateimage.'50.png'; $rating='5';}
			else
			{ $rate_image = $rateimage.'40.png'; $rating='4';}
	
	//COmpleted
	$v_info->rating = $rate_image ;
	$v_info->reviews = $rating ;
	//To check, the vendor is  preferred vendor or not
	$pre = "SELECT vid FROM #__vendor_inviteinfo where  userid=".$user->id." and v_id=".$userid." ";
	$db->setQuery( $pre);
	$pref = $db->loadResult();
	if($pref){
	$v_info->prefer = 'Yes' ;
	}
	else{
	$v_info->prefer = 'No' ;
	}
	// To get the vendor state
	$state_id = "SELECT state_id FROM #__state where  id=".$v_info->state." "; 
	$db->setQuery( $state_id );
	$state = $db->loadResult();
	$v_info->state = $state ;
	//Completed
	return $v_info ;
	
	//Completed
	
	}
	//Compleetd
	
	
	//function to get open or save popup
	function get_open_upld_cert_vendorprofile()
	{
		//echo 'anand'; exit;
		$db = JFactory::getDBO();
		$vndr = JRequest::getVar('id','');
		$user	= JFactory::getUser($vndr);
		$sql = "SELECT tax_id FROM #__cam_vendor_company   WHERE user_id=".$user->id;
		$db->setQuery($sql);
		$tax_id = $db->loadResult();
		$vendorname = $user->name.'_'.$user->lastname.'_'.$tax_id;
		$vendorname = str_replace(' ','_',$vendorname);
		$filename = JRequest::getVar('filename','');

		$filename1 = explode('/',$filename);
		$cnt = count($filename1);
		$filename2 = $filename1[$cnt-1];

		$folder_type = JRequest::getVar('folder_type','');
		$doc_type = JRequest::getVar('doc','');
		if($folder_type == 'uploaded_by_CAM')
		$path = JURI::root().'components/com_camassistant/doc';
		else if($folder_type == 'uploaded_by_VENDOR')
		$path = JURI::root().'components/com_camassistant/assets/images/rfp/Tasks';
		else
		$path = JURI::root().'components/com_camassistant/assets/images/vendorcompliances/'.$vendorname.'/'.$doc_type;
		$doc_name = JURI::root()."/".$path;
		if($doc_type){
		$doc_name = $path.'/'.$filename;
		} else {
		$doc_name = JURI::root()."/".$filename;
		}
		header("content-type: application/octet-stream");
		header("Content-Disposition: attachment; filename=".$filename2);
		readfile($doc_name);
		exit;
	}
	//To check the existing subscriptions
	function checksubscription()
	{
		$db = JFactory::getDBO();
		$user	= JFactory::getUser();
		$sql = "SELECT subscribe FROM #__users  WHERE id=".$user->id;
		$db->setQuery($sql);
		$subscription = $db->loadResult();
		if($subscription == 'no'){
		$subs = "no";
		}
		else{
		$subs = "yes";
		}
		return $subs ;
	//Completed
	}
	//Function to check the promo code
	function checkpromocode($promo){
		$db = JFactory::getDBO();
		$user	= JFactory::getUser();
		$sql = "SELECT ptype FROM #__cam_promocode  WHERE promocode='".$promo."' ";
		$db->setQuery($sql);
		$promotype = $db->loadResult();
		return $promotype ;
	}
	//Function to get existing subscription
	function checkcurrentpromocode(){
		$db = JFactory::getDBO();
		$user	= JFactory::getUser();
		$sql = "SELECT subscribe_admin,subscribe_type FROM #__users  WHERE id='".$user->id."' ";
		$db->setQuery($sql);
		$subtypeo = $db->loadObject();
		if($subtypeo->subscribe_type){
		$subtype = $subtypeo->subscribe_type;
		}
		else{
		$subtype = $subtypeo->subscribe_admin;
		}
		return $subtype ;
	}
	
	//Function to cancel the subscription
	function change_subscription_status( $profile_id, $action ) {
	$api_username  = 'accounting_api1.camassistant.com';
	$api_password = 'M2BTUK6X9Y3USB9E';
	$api_signature = 'AjE.ZewL5mG6AiztkysoRpX08PrkAPefU6ogzPSYce9zfd9.VuO8QUxN';
	$api_version = '67.0';
	$modify = '2';
	$amount = '0.02';
    $api_request = 'USER=' . $api_username
                .  '&PWD=' . $api_password
                .  '&SIGNATURE=' . $api_signature
                .  '&VERSION=' . $api_version
                .  '&METHOD=ManageRecurringPaymentsProfileStatus'
                .  '&PROFILEID=' . urlencode( $profile_id )
                .  '&ACTION=' . urlencode( $action )
                .  '&NOTE=' . urlencode( 'Profile modified at store' )
				.  '&MODIFY=' . $modify
				.  '&A3=' . $amount
				;
     $ch = curl_init();
    curl_setopt( $ch, CURLOPT_URL, 'https://api-3t.paypal.com/nvp' ); // For live transactions, change to 'https://api-3t.paypal.com/nvp'
    curl_setopt( $ch, CURLOPT_VERBOSE, 1 );
    // Uncomment these to turn off server and peer verification
    // curl_setopt( $ch, CURLOPT_SSL_VERIFYPEER, FALSE );
    // curl_setopt( $ch, CURLOPT_SSL_VERIFYHOST, FALSE );
    curl_setopt( $ch, CURLOPT_RETURNTRANSFER, 1 );
    curl_setopt( $ch, CURLOPT_POST, 1 );
     // Set the API parameters for this transaction
    curl_setopt( $ch, CURLOPT_POSTFIELDS, $api_request );
     // Request response from PayPal
    $response = curl_exec( $ch );
     // If no response was received from PayPal there is no point parsing the response
    if( ! $response )
        die( 'Calling PayPal to change_subscription_status failed: ' . curl_error( $ch ) . '(' . curl_errno( $ch ) . ')' );
     curl_close( $ch );
     // An associative array is more usable than a parameter string
    parse_str( $response, $parsed_response );
	//echo "<pre>"; print_r($parsed_response); exit;
     return $parsed_response;
}
//Function to get userid
	function getsubscribe($user){
			$db = JFactory::getDBO();
			$sub = "SELECT subscribe, subscribe_type  FROM #__users  where id='".$user."'";
			$db->Setquery($sub);
			$sub_type = $db->loadObject();
				if($sub_type->subscribe == 'yes' && ($sub_type->subscribe_type == 'public' || $sub_type->subscribe_type == 'all' || $sub_type->subscribe_type == 'free') ){
				$sub_type = 'yes';
				}
				else{
				$sub_type = 'no';
				}
			return $sub_type; 
	}
	//Completed
	
	//function to get the user subscription
	function get_usersubscribe($user){
	$db = JFactory::getDBO();
	//$user = JFactory::getUser();
			$sub = "SELECT subscribe, subscribe_type  FROM #__users  where id='".$user."'";
			$db->Setquery($sub);
			$sub_type = $db->loadObject();
				if($sub_type->subscribe == 'yes' && ($sub_type->subscribe_type == 'public' || $sub_type->subscribe_type == 'all' || $sub_type->subscribe_type == 'free') ){
				$sub_type = 'yes';
				}
				else{
				$sub_type = 'no';
				}
			return $sub_type; 
	}
	
	//Completed
	//Function to get the company id
	function getcompanyid($id){
	$db =& JFactory::getDBO();
	$usertype = "SELECT user_type FROM #__users where id =".$id."  ";
	$db->setQuery($usertype);
	$type = $db->loadResult();
	
	if($type == 13){
	$taxid = "SELECT id FROM #__cam_camfirminfo where cust_id =".$id."  ";
	$db->setQuery($taxid);
	$tax = $db->loadResult();
	}
	else{
	$taxid = "SELECT comp_id FROM #__cam_customer_companyinfo where cust_id =".$id."  ";
	$db->setQuery($taxid);
	$tax = $db->loadResult();
	}
	return $tax;  
	}
	//Completed
	function store_add($data){

	$row =& $this->getTable('invitevendors');
	//echo "<pre>"; print_r($row);print_r($post); exit;
		jimport('joomla.user.helper');
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		return true;
	}
	
	function getmarketingfiles(){
	$db = JFactory::getDBO();
	$user = JFactory::getUser();
			$sub = "SELECT *  FROM #__vendor_marketingdocs where vendorid='".$user->id."'"; 
			$db->Setquery($sub);
			$list = $db->loadObjectList();
				
			return $list; 
	}
	function getcompanyrefs(){
	$db = JFactory::getDBO();
	$user = JFactory::getUser();
			$c_refs = "SELECT *  FROM #__vendor_companyrefs where vendorid='".$user->id."'"; 
			$db->Setquery($c_refs);
			$crefs = $db->loadObjectList();
			return $crefs; 
	}
	function store_addabout($data){

	$row =& $this->getTable('aboutus');
	//echo "<pre>"; print_r($row);print_r($post); exit;
		jimport('joomla.user.helper');
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		return true;
	}
	
	function getaboutus($user){
	$db =& JFactory::getDBO();
	$aboutus = "SELECT aboutus,id  FROM #__cam_vendor_aboutus where vendorid=".$user." ";
		$db->Setquery($aboutus);
		$about_us = $db->loadObject();
		return $about_us ;
	}
	
	//Funcmtion to get all the preferred companies
	function getpreferredclist(){
		$db =& JFactory::getDBO();
		$user =& JFactory::getUser();
		$query = "SELECT V.userid, U.comp_name from #__vendor_inviteinfo as V, #__cam_customer_companyinfo  as U, #__users as W, #__state as X where W.id=V.userid and V.userid =U.cust_id and U.comp_state=X.id and V.vendortype !='exclude' 
		and V.inhousevendors ='".$user->email."' group by U.comp_name having count(*)>=1";
		$db->setQuery($query);
        $camfirmslist = $db->loadObjectList();
		return $camfirmslist;
}
	//Completed
	
		function getgenerallibilities(){
		$rfp_id = JRequest::getVar('rfp_id','');
		$db=&JFactory::getDBO();
		$rfp_gli_data ="SELECT * from #__cam_master_generalinsurance_standards_rfps  WHERE rfpid=".$rfp_id; //validation to status of docs
		$db->Setquery($rfp_gli_data);
		$generaldata = $db->loadObject();
	
		if( $generaldata ) {
	$g_data = '<table width="100%" border="0" style="font-size:24px;"><tr><td><strong>General Liability</strong></td></tr><tr><td><ul style="list-style-type:none;">';
		 if($generaldata->occur){ 
	$g_data .= '<li>Occur</li>';
		 } 
		 if($generaldata->each_occurrence && $generaldata->each_occurrence != '0.00'){ 
	$g_data .= '<li>Each Occurrence: <span id="greenbolddolor">$ '.number_format($generaldata->each_occurrence,2).'</span></li>';
		 } 
		 if($generaldata->damage_retend && $generaldata->damage_retend != '0.00'){ 
	$g_data .= '<li>Damage to Rented Premises: <span id="greenbolddolor">$ '.number_format($generaldata->damage_retend,2) .'</span></li>';
		 }
		 if($generaldata->med_expenses && $generaldata->med_expenses != '0.00'){ 
	$g_data .= 	'<li>Med Expenses: <span id="greenbolddolor">$ '.number_format($generaldata->med_expenses,2) .'</span></li>';
		 }
		 if($generaldata->personal_inj && $generaldata->personal_inj != '0.00'){ 
	$g_data .= '<li>Personal & Adv injury: <span id="greenbolddolor">$ '.number_format($generaldata->personal_inj,2) .'</span></li>';
		 }
		if( $generaldata->general_aggr  ){
	$g_data .= '<li>General Aggregate:&nbsp;<span id="greenbolddolor">$ '.number_format($aggregate_price,2) .'</span>';
		}
		if($generaldata->applies_to){ 
		$g_data .= '&nbsp;&nbsp;| &nbsp;&nbsp;Applies To:&nbsp;&nbsp;';
		if($generaldata->applies_to == 'pol') {
		$g_data .= 'Pol&nbsp;&nbsp; ';
		}
		else if($generaldata->applies_to == 'proj'){
		$g_data .= 'Proj&nbsp;&nbsp;';
		}
		else if($generaldata->applies_to == 'loc') {
		$g_data .= 'Loc';
		}
		$g_data .= '</li>';
		 } 
		 
		if($generaldata->products_aggr && $generaldata->products_aggr !='0.00' ){ 
		$g_data .= '<li>Products - COMP/OP Aggregate: <span id="greenbolddolor">$ '.number_format($generaldata->products_aggr,2) .'</span></li>';
		 } 
		if($generaldata->waiver_sub == 'yes'){ 
		$g_data .= '<li><label>Waiver of Subrogation</label></li>';
		 } 
		if($generaldata->primary_noncontr == 'yes'){ 
		$g_data .= '<li><label> Primary Non-Contributory</label></li>';
		 } 
		if($generaldata->additional_insured == 'yes'){ 
		$g_data .= '<li><label> List my Company as as "Additional Insured"</label></li>' ;
		 } 
		 if($generaldata->cert_holder == 'yes'){ 
		$g_data .= '<li><label> MyVendorCenter listed as Cert. Holder</label></li>';
		 } 
		$g_data .= '</ul></td></td></tr></table> ';
	 } 
	 return $g_data;
	}
	function getautolibilities(){
		$rfp_id = JRequest::getVar('rfp_id','');
		$db=&JFactory::getDBO();
		$rfp_aip_data ="SELECT * from #__cam_master_autoinsurance_standards_rfps  WHERE rfpid=".$rfp_id; //validation to status of docs
		$db->Setquery($rfp_aip_data);
		$autodata = $db->loadObject();
		
		if($autodata){  
		$g_data = '<table width="100%" border="0" style="font-size:24px;"><tr><td><strong>Auto Liability</strong></td></tr><tr><td><ul style="list-style-type:none;">';
		 } 
		
		if($autodata->applies_to_any || $autodata->applies_to_owned || $autodata->applies_to_nonowned || $autodata->applies_to_hired || $autodata->applies_to_scheduled){ 
			$g_data .= '<li>Applies To:';
		if($autodata->applies_to_any) 
		$g_data .= 'Any&nbsp;&nbsp; ';
		if($autodata->applies_to_owned)
		$g_data .= 'Owned&nbsp;&nbsp; ';
		if($autodata->applies_to_nonowned)
		$g_data .= 'Non-Owned&nbsp;&nbsp; ';	
		if($autodata->applies_to_hired)
		$g_data .= 'Hired&nbsp;&nbsp; ';	
		if($autodata->applies_to_scheduled)
		$g_data .= 'Scheduled&nbsp;&nbsp; ';	
		$g_data .= '</li>';	
		}
		if($autodata->combined_single && $autodata->combined_single != '0.00'){
			$g_data .= '<li>Combined Single Limit: <span id="greenbolddolor">$ '.number_format($autodata->combined_single,2) .'</span></li>';
		}
		if($autodata->bodily_injusy_person && $autodata->bodily_injusy_person != '0.00'){ 
			$g_data .= '<li>Bodily Injury - Per Person: <span id="greenbolddolor">$ '.number_format($autodata->bodily_injusy_person,2) .'</span></li>';
		}
		if($autodata->bodily_injusy_accident && $autodata->bodily_injusy_accident != '0.00'){ 
			$g_data .= '<li>Bodily Injury - Per Accident: <span id="greenbolddolor">$ '.number_format($autodata->bodily_injusy_accident,2) .'</span></li>';
		}
		if($autodata->property_damage && $autodata->property_damage != '0.00'){ 
			$g_data .= '<li>Property Damage - Per Accident: <span id="greenbolddolor">$ '.number_format($autodata->property_damage,2) .'</span></li>';
		}
		if($autodata->waiver == 'yes'){ 
			$g_data .= '<li><label>Waiver of Subrogation</label></li>';
		}
		if($autodata->primary == 'yes'){
			$g_data .= '<li><label>Primary Non-Contributory</label></li>';
		}
		if($autodata->additional_ins == 'yes'){
			$g_data .= '<li><label>List my Company as as "Additional Insured"</label></li>';
		}
		if($autodata->cert_holder == 'yes'){
			$g_data .= '<li><label>MyVendorCenter listed as Cert. Holder</label></li>';
		}
		if($autodata){ 
		$g_data .= '</ul></td></td></tr></table>';
		 } 
		 //echo $g_data; exit;
		return $g_data;
	}	

	function getworkerslibilities(){
		$rfp_id = JRequest::getVar('rfp_id','');
		$db=&JFactory::getDBO();
		$rfp_wci_data ="SELECT * from #__cam_master_workers_standards_rfps WHERE rfpid=".$rfp_id; //validation to status of docs
		$db->Setquery($rfp_wci_data);
		$workdata = $db->loadObject();
		if($workdata)
		{
			$g_data = '<table width="100%" border="0" style="font-size:24px;"><tr><td><strong>Worker`s Comp Policy/Employer`s Liability</strong></td></tr><tr><td><ul style="list-style-type:none;">';
		}
		if($workdata->workers_not == 'not'){
			if($workdata->workers_not){
			$g_data .= '<li>Worker`s Comp Exemptions NOT accepted</li>';
			}
			if($workdata->each_accident && $workdata->each_accident != '0.00'){
			$g_data .= '<li>Each Accident: <span id="greenbolddolor">$ '.number_format($workdata->each_accident,2) .'</span></li>';
			}
			if($workdata->disease_policy && $workdata->disease_policy != '0.00'){
			$g_data .= '<li>Desease - Policy Limit: <span id="greenbolddolor">$ '.number_format($workdata->disease_policy,2) .'</span></li>';
			}
			if($workdata->disease_eachemp && $workdata->disease_eachemp != '0.00'){
			$g_data .= '<li>Desease - Each Employee: <span id="greenbolddolor">$ '.number_format($workdata->disease_eachemp,2) .'</span></li>';
			}
			if($workdata->waiver_work == 'yes'){
			$g_data .= '<li>Waiver of Subrogation</li>';
			}
			if($workdata->certholder_work == 'yes'){
			$g_data .= '<li>MyVendorCenter listed as Cert. Holder</li>';
			}
		}
		else if($workdata->workers_not == 'yes'){
			$g_data .= '<li>Worker`s Comp Exemptions accepted<br />WARNING: Worker`s Comp. Exemption Certificates are commonly mistaken for a Worker`s Comp policy. Please be aware that this "exemption" does NOT offer the property manager/association/building owner any form of protection against liability for an injured worker`s loss of wages and/or medical expenses if an on-the-job injury occurs. Consult your legal advisor for your unique situation, as laws vary by jurisdiction.
		</li>';
		}
		if($workdata){ 
		$g_data .= '</ul></td></td></tr></table>';
		 }
		// echo $g_data; exit;
		return $g_data ;  
	}
	
	function getumblibilities(){
		$rfp_id = JRequest::getVar('rfp_id','');
		$db=&JFactory::getDBO();
		$rfp_umb_data ="SELECT * from #__cam_master_umbrellainsurance_standards_rfps WHERE rfpid=".$rfp_id; //validation to status of docs
		$db->Setquery($rfp_umb_data);
		$umbrelladata = $db->loadObject();
		
		if($umbrelladata)
		{
			$g_data = '<table width="100%" border="0" style="font-size:24px;"><tr><td><strong>Umbrella Liability</strong></td></tr><tr><td><ul style="list-style-type:none;">';
		}
		if($umbrelladata->each_occur && $umbrelladata->each_occur != '0.00'){
			$g_data .= '<li>Each Occurrence: <span id="greenbolddolor">$ '.number_format($umbrelladata->each_occur,2) .'</span></li>';
		}
		if($umbrelladata->aggregate && $umbrelladata->aggregate != '0.00'){
			$g_data .= '<li>Aggregate: <span id="greenbolddolor">$ '.number_format($umbrelladata->aggregate,2) .'</span></li>';
		}
		if($umbrelladata->certholder_umbrella == 'yes'){
			$g_data .= '<li>MyVendorCenter listed as Cert. Holder</li>';
		}
		
		if($umbrelladata){ 
		$g_data .= '</ul></td></td></tr></table>';
		}
		return $g_data;
	}
	
	function getliclibilities(){
		$rfp_id = JRequest::getVar('rfp_id','');
		$db=&JFactory::getDBO();
		$rfp_pln_data ="SELECT * from #__cam_master_licinsurance_standards_rfps WHERE rfpid=".$rfp_id; //validation to status of docs
		$db->Setquery($rfp_pln_data);
		$licdata = $db->loadObject();	
		
		if($licdata)
		{
			$g_data = '<table width="100%" border="0" style="font-size:24px;"><tr><td><strong>Umbrella Liability</strong></td></tr><tr><td><ul style="list-style-type:none;">';
		}
		if($licdata->professional == 'yes'){
			$g_data .= '<li><label>Professional License</label></li>';
		}
		if($licdata->occupational == 'yes'){
			$g_data .= '<li><label>Occupational License</label></li>';
		}
		if($licdata){ 
		$g_data .= '</ul></td></td></tr></table>';
		}
		return $g_data;
	}	

function getvendorreviews($user){
	    //$user = JFactory::getUser();
		$db=&JFactory::getDBO();
		$awarded_prps ="SELECT rfpno from #__cam_vendor_proposals WHERE proposedvendorid=".$user." and proposaltype='Awarded' "; //validation to status of docs
		$db->Setquery($awarded_prps);
		$list_rfps = $db->loadObjectList();
		
		//Getting info from RFP table
		for( $r=0; $r<count($list_rfps); $r++ ){
			$comments ="SELECT comment, rate_date, managerid from #__cam_rfp_ratings WHERE rfpid=".$list_rfps[$r]->rfpno." "; //validation to status of docs
			$db->Setquery($comments);
			$rfp_comments = $db->loadObject();
			$list_rfps[$r]->comment = $rfp_comments->comment ;
			
			$publish ="SELECT apple_publish, apple, cust_id, awardeddate from #__cam_rfpinfo WHERE id=".$list_rfps[$r]->rfpno." "; //validation to status of docs
			$db->Setquery($publish);
			$rfp_publish = $db->loadObject();
			$list_rfps[$r]->cust_id = $rfp_publish->cust_id ;
			$list_rfps[$r]->publish = $rfp_publish->apple ;
			$list_rfps[$r]->deleted = $rfp_publish->apple_publish ;

		if(!$rfp_comments->rate_date){
		$dat_rate_date = $rfp_publish->awardeddate ;
		$list_rfps[$r]->c_date = str_replace('-','/',$dat_rate_date);
		}
		else{
		$list_rfps[$r]->c_date = $rfp_comments->rate_date ;
		}
		$list_rfps[$r]->sort_date = strtotime($list_rfps[$r]->c_date) ;
		
					if($rfp_comments->managerid)
					$managerid = $rfp_comments->managerid ;
					else
					$managerid = $rfp_publish->cust_id ;
					
					
			$user_details = "SELECT u.name, u.lastname, v.comp_city, v.comp_state FROM #__users as u, #__cam_customer_companyinfo as v WHERE u.id=".$managerid." and v.cust_id=".$managerid." ";
	$db->setQuery( $user_details);
	$user_details = $db->loadObject();
			$list_rfps[$r]->name = $user_details->name ;
			$list_rfps[$r]->lastname = $user_details->lastname ;
			$list_rfps[$r]->city = $user_details->comp_city ;
			
		$userstate = "SELECT state_id FROM #__state WHERE id=".$user_details->comp_state."  ";
		$db->setQuery( $userstate);
		$state_rating = $db->loadResult();
		$list_rfps[$r]->state = $state_rating ;	
			
		}
//echo "<pre>"; print_r($list_rfps); echo "</pre>";
		return $list_rfps;
		
	}
	
	function getvendorreviews_order($user){
	    //$user = JFactory::getUser();
		$db=&JFactory::getDBO();
		$awarded_prps ="SELECT rfpno from #__cam_vendor_proposals WHERE proposedvendorid=".$user." and proposaltype='Awarded' "; //validation to status of docs
		$db->Setquery($awarded_prps);
		$list_rfps = $db->loadObjectList();
		
		//Getting info from RFP table
		for( $r=0; $r<count($list_rfps); $r++ ){
			$comments ="SELECT comment, rate_date, managerid from #__cam_rfp_ratings WHERE rfpid=".$list_rfps[$r]->rfpno." "; //validation to status of docs
			$db->Setquery($comments);
			$rfp_comments = $db->loadObject();
			$list_rfps[$r]->comment = $rfp_comments->comment ;
			
			$publish ="SELECT apple_publish, apple, cust_id, awardeddate from #__cam_rfpinfo WHERE id=".$list_rfps[$r]->rfpno." "; //validation to status of docs
			$db->Setquery($publish);
			$rfp_publish = $db->loadObject();
			$list_rfps[$r]->cust_id = $rfp_publish->cust_id ;
			$list_rfps[$r]->publish = $rfp_publish->apple ;
			$list_rfps[$r]->deleted = $rfp_publish->apple_publish ;

		if(!$rfp_comments->rate_date){
		$dat_rate_date = $rfp_publish->awardeddate ;
		$list_rfps[$r]->c_date = str_replace('-','/',$dat_rate_date);
		}
		else{
		$list_rfps[$r]->c_date = $rfp_comments->rate_date ;
		}
		$list_rfps[$r]->sort_date = strtotime($list_rfps[$r]->c_date) ;
		
					if($rfp_comments->managerid)
					$managerid = $rfp_comments->managerid ;
					else
					$managerid = $rfp_publish->cust_id ;
					
					
			$user_details = "SELECT u.name, u.lastname, v.comp_city, v.comp_state FROM #__users as u, #__cam_customer_companyinfo as v WHERE u.id=".$managerid." and v.cust_id=".$managerid." ";
	$db->setQuery( $user_details);
	$user_details = $db->loadObject();
			$list_rfps[$r]->name = $user_details->name ;
			$list_rfps[$r]->lastname = $user_details->lastname ;
			$list_rfps[$r]->city = $user_details->comp_city ;
			
		$userstate = "SELECT state_id FROM #__state WHERE id=".$user_details->comp_state."  ";
		$db->setQuery( $userstate);
		$state_rating = $db->loadResult();
		$list_rfps[$r]->state = $state_rating ;	
			
		}
		foreach( $list_rfps as $all){
			$list_sort[] = $all->sort_date ;
			}
			if($list_sort){
			$sortlist = rsort($list_sort);
			}
		return $list_sort;
		
	}
	
	function basicuploadedfiles(){
		$db=&JFactory::getDBO();
		$rfp_id = JRequest::getVar('rfp_id','');
		$query_basic = "SELECT * FROM #__cam_basicrequest_files WHERE rfpid=".$rfp_id."  ";
		$db->setQuery($query_basic);
		$basefiles = $db->loadObjectList();
		return $basefiles;
		
	}

	function checkcompliancestatus($vendorid){
		$db=&JFactory::getDBO();
		$user =& JFactory::getUser();
		$master =	$this->getmasterfirmaccount();
		$vendorindustrieslist = $this->vendorallindustries($vendorid);
		$permission = $this->getpermission($master) ;
		
			for( $vi=0; $vi<count($vendorindustrieslist); $vi++ )
				{
					$totalprefers_new_gli	=	$this->checknewspecialrequirements_gli_indus($vendorid,$vendorindustrieslist[$vi]->value,$master);
					$totalprefers_new_aip	=	$this->checknewspecialrequirements_aip_indus($vendorid,$vendorindustrieslist[$vi]->value,$master);
					$totalprefers_new_wci	=	$this->checknewspecialrequirements_wci_indus($vendorid,$vendorindustrieslist[$vi]->value,$master);
					$totalprefers_new_umb	=	$this->checknewspecialrequirements_umb_indus($vendorid,$vendorindustrieslist[$vi]->value,$master);
					$totalprefers_new_pln	=	$this->checknewspecialrequirements_pln_indus($vendorid,$vendorindustrieslist[$vi]->value,$master);
					$totalprefers_new_occ	=	$this->checknewspecialrequirements_occ_indus($vendorid,$vendorindustrieslist[$vi]->value,$master);
					
					$vendorindustrieslist[$vi]->status = '' ;
					if($totalprefers_new_gli == 'success' && $totalprefers_new_aip == 'success' && $totalprefers_new_wci == 'success' && $totalprefers_new_umb == 'success' && $totalprefers_new_pln == 'success' && $totalprefers_new_occ == 'success' ){
							$vendorindustrieslist[$vi]->status = 'success' ;
						}
						else{
							$vendorindustrieslist[$vi]->status = 'fail' ;
						}
		
				}	
				if($vendorindustrieslist){
					foreach($vendorindustrieslist as $statues){
						$final_state[] = $statues->status;
						$med_fina_state = '';
						$med_fina_state = array_unique($final_state);
							if( count($med_fina_state) == 2 ) {
								$final_status = 'medium' ;
							}
							if( count($med_fina_state) == 1 &&  $med_fina_state[0] == 'fail') {
								$final_status = 'fail' ;
							}
							if( count($med_fina_state) == 1 &&  $med_fina_state[0] == 'success' ){
					
										$final_status = 'success' ;
										$masteraccount = $this->getmasterfirmaccount();
										$sql_terms = "SELECT termsconditions FROM #__cam_vendor_aboutus WHERE vendorid=".$masteraccount." "; 
										$db->setQuery($sql_terms);
										$terms_exist = $db->loadResult();
										if($terms_exist == '1'){
										$sql = "SELECT accepted FROM #__cam_vendor_terms WHERE vendorid=".$vendorid." and masterid=".$masteraccount." "; 
										$db->setQuery($sql);
										$terms = $db->loadResult();
											if($terms == '1'){
											$final_status = 'success' ;
											}
											else{
											$final_status = 'fail' ;
											}
										}
										else{
										
										}
					
						}
					
					}
						$final_state = '';
						$med_fina_state = '';	
				}
				
				if($permission == 'yes'){
				$final_status = 'nostandards';
				}
				else{
				$final_status = $final_status ;
				}
		return  $final_status;
		
	}
	
	//Function to get master firm userid when manager, firm, district manager loggedin
	function getmasterfirmaccount(){
	$user =& JFactory::getUser();
		$db=&JFactory::getDBO();
			if($user->user_type == '12'){
				$query_c = "SELECT comp_id FROM #__cam_customer_companyinfo WHERE cust_id=".$user->id." ";
				$db->setQuery($query_c);
				$cid = $db->loadResult();	
				$camfirmid = "SELECT cust_id FROM #__cam_camfirminfo WHERE id=".$cid." ";
				$db->setQuery($camfirmid);
				$camfirm = $db->loadResult();
				$masterid = "SELECT masterid FROM #__cam_masteraccounts WHERE firmid=".$camfirm." ";
				$db->setQuery($masterid);
				$master = $db->loadResult();
				}
			elseif($user->user_type == '13' && $user->accounttype!='master'){
				$masterid = "SELECT masterid FROM #__cam_masteraccounts WHERE firmid=".$user->id." "; 
				$db->setQuery($masterid);
				$master = $db->loadResult();
			}
			else{
			$master = $user->id;
			}	
			return $master ;
	}
	//COmpleted
	
	function vendorallindustries($vendorid){
	 	$db=&JFactory::getDBO();
		$user =& JFactory::getUser();
		$query = "SELECT U.industry_id as value, V.industry_name FROM #__cam_vendor_industries as U, #__cam_industries as V where U.industry_id=V.id and U.user_id = ".$vendorid." and V.published='1' ";
		$db->setQuery($query);
		$industryList = $db->loadObjectList();
		return $industryList;
	 }
	 
	function getpermission($masterid){
		$db = JFactory::getDBO();
		$permission = "SELECT permission FROM #__cam_master_email_compliance_status WHERE masterid=".$masterid;
		$db->setQuery($permission);
		$perms = $db->loadResult();
		return $perms ;
	}	
	
	
	function checknewspecialrequirements_gli_indus($vendorid,$industryid,$managerid){
		$totalprefers_new_gli = '';
		$db = & JFactory::getDBO();
		$gli_data ="SELECT * from #__cam_vendor_liability_insurence  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($gli_data);
		$vendor_gli_data = $db->loadObjectList();
		//Get RFP data
		$rfp_gli_data ="SELECT * from #__cam_master_generalinsurance_standards WHERE masterid=".$managerid." and industry_id=".$industryid; //validation to status of docs
		$db->Setquery($rfp_gli_data);
		$rfp_gli_data = $db->loadObject();
		//echo "<br />";
		//echo "<pre>"; print_r($vendor_gli_data); echo "</pre>";
		//echo "<pre>"; print_r($rfp_gli_data); echo "</pre>";
		
		$occur = '';
		for( $gl=0; $gl<count($vendor_gli_data); $gl++ ){
			if($rfp_gli_data->occur ==  'yes'){
				if( $vendor_gli_data[$gl]->GLI_occur == 'occur' ){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			
			if($rfp_gli_data->each_occurrence >  '0'){
				if($rfp_gli_data->each_occurrence <= $vendor_gli_data[$gl]->GLI_policy_occurence){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->damage_retend > '0'){
				if($rfp_gli_data->damage_retend <= $vendor_gli_data[$gl]->GLI_damage){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->med_expenses > '0'){
				if($rfp_gli_data->med_expenses <= $vendor_gli_data[$gl]->GLI_med){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}	
			if($rfp_gli_data->personal_inj > '0'){
				if($rfp_gli_data->personal_inj <= $vendor_gli_data[$gl]->GLI_injury){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->general_aggr > '0'){	
				if($rfp_gli_data->general_aggr <= $vendor_gli_data[$gl]->GLI_policy_aggregate){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}

			if($rfp_gli_data->applies_to == 'pol'){
				if($vendor_gli_data[$gl]->GLI_applies == 'pol'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->applies_to == 'proj'){
				if($vendor_gli_data[$gl]->GLI_applies == 'proj'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->applies_to == 'loc'){
				if($vendor_gli_data[$gl]->GLI_applies == 'loc'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->products_aggr >  '0'){
				if($rfp_gli_data->products_aggr <= $vendor_gli_data[$gl]->GLI_products){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}	
			if($rfp_gli_data->waiver_sub == 'yes') {
				if($vendor_gli_data[$gl]->GLI_waiver == 'waiver'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->primary_noncontr == 'yes') {
				if($vendor_gli_data[$gl]->GLI_primary == 'primary'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->additional_insured == 'yes') {
				if($vendor_gli_data[$gl]->GLI_additional){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
			if($rfp_gli_data->cert_holder == 'yes') {
				if($vendor_gli_data[$gl]->GLI_certholder == 'yes'){
					$occur[] = 'yes' ;
				}
				else{
					$occur[] = 'no' ;
				}
			}
				if($rfp_gli_data){
					if($vendor_gli_data[$gl]->GLI_end_date < date('Y-m-d') || !$vendor_gli_data[$gl]->GLI_upld_cert || !$vendor_gli_data[$gl]->GLI_policy_occurence || !$vendor_gli_data[$gl]->GLI_policy_aggregate || $vendor_gli_data[$gl]->GLI_status == '-1') {
						$occur[] = 'no' ;
					}
					else{
						$occur[] = 'yes' ;
					}
				}
		
			if($occur){
				if( in_array("no", $occur) ){
				$cabins_gli[] = "no";
				}
				else{
				$cabins_gli[] = "yes";
				}
			}
			$occur = '';
		}
		
		if($cabins_gli){
			if( in_array("yes", $cabins_gli) ){
			$special = "success";
			}
			else{
			$special = "fail";
			}
			
		}
		else{
				if($rfp_gli_data)
				$special = "fail";
				else
				$special = "success";
		}
			
		$cabins_gli = '';
		return $special ;
		
	}
//Completed
	
	function checknewspecialrequirements_aip_indus($vendorid,$industryid,$managerid){
		$db = & JFactory::getDBO();
		$aip_data ="SELECT * from #__cam_vendor_auto_insurance  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($aip_data);
		$vendor_aip_data = $db->loadObjectList();
		//Get RFP data
		$rfp_aip_data ="SELECT * from #__cam_master_autoinsurance_standards WHERE masterid=".$managerid." and industryid=".$industryid; //validation to status of docs
		$db->Setquery($rfp_aip_data);
		$rfp_aip_data = $db->loadObject();
		
			for( $ai=0; $ai<count($vendor_aip_data); $ai++ ){
				if($rfp_aip_data->applies_to_any == 'any'){
					if($rfp_aip_data->applies_to_any == $vendor_aip_data[$ai]->aip_applies_any){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}

				if($rfp_aip_data->applies_to_owned == 'owned'){
					if($rfp_aip_data->applies_to_owned == $vendor_aip_data[$ai]->aip_applies_owned){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}

				if($rfp_aip_data->applies_to_nonowned == 'nonowned'){
					if($rfp_aip_data->applies_to_nonowned == $vendor_aip_data[$ai]->aip_applies_nonowned){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}

				if($rfp_aip_data->applies_to_hired == 'hired'){
					if($rfp_aip_data->applies_to_hired == $vendor_aip_data[$ai]->aip_applies_hired){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}

				if($rfp_aip_data->applies_to_scheduled == 'scheduled'){
					if($vendor_aip_data[$ai]->aip_applies_scheduled == 'sch'){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->combined_single > '0'){	
					if($rfp_aip_data->combined_single <= $vendor_aip_data[$ai]->aip_combined){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->bodily_injusy_person > '0'){	
					if($rfp_aip_data->bodily_injusy_person <= $vendor_aip_data[$ai]->aip_bodily){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->bodily_injusy_accident > '0'){	
					if($rfp_aip_data->bodily_injusy_accident <= $vendor_aip_data[$ai]->aip_body_injury){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->property_damage > '0'){	
					if($rfp_aip_data->property_damage <= $vendor_aip_data[$ai]->aip_property){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->waiver == 'yes'){
					if($vendor_aip_data[$ai]->aip_waiver == 'waiver'){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->primary == 'yes'){
					if($vendor_aip_data[$ai]->aip_primary == 'primary'){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->additional_ins == 'yes'){
					if($vendor_aip_data[$ai]->aip_addition != ''){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data->cert_holder == 'yes'){
					if($vendor_aip_data[$ai]->aip_cert == 'yes'){
						$occur_aip[] = 'yes' ;
					}
					else{
						$occur_aip[] = 'no' ;
					}
				}
				
				if($rfp_aip_data){
					if($vendor_aip_data[$ai]->aip_end_date < date('Y-m-d') || $vendor_aip_data[$ai]->aip_upld_cert=='' || $vendor_aip_data[$ai]->aip_status == '-1' || !$vendor_aip_data[$ai]->aip_combined ) 		{
						$occur_aip[] = 'no' ;
						}
					else
						{
						$occur_aip[] = 'yes' ;
						}
				}
				if($occur_aip){
					if( in_array("no", $occur_aip) ){
						$cabins_aip[] = "no";
					}
					else{
						$cabins_aip[] = "yes";
					}
				}
				$occur_aip = '';
			}	
			if($cabins_aip){
				if( in_array("yes", $cabins_aip) ){
					$special_aip = "success";
				}
				else{
					$special_aip = "fail";
				}
			}
			else{
				if($rfp_aip_data)
				$special_aip = "fail";
				else
				$special_aip = "success";
			}
			
				$cabins_aip = '';
		
		return $special_aip ;
		
		
	}
	
		//Function to check WCI documents
	function checknewspecialrequirements_wci_indus($vendorid,$industryid,$managerid){
		
		$db = & JFactory::getDBO();
		$wci_data ="SELECT * from #__cam_vendor_workers_companies_insurance  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($wci_data);
		$vendor_wci_data = $db->loadObjectList();
		//Get RFP data
		$rfp_wci_data ="SELECT * from #__cam_master_workers_standards WHERE masterid=".$managerid." and industryid=".$industryid; //validation to status of docs
		$db->Setquery($rfp_wci_data);
		$rfp_wci_data = $db->loadObject();

			for( $wci=0; $wci<count($vendor_wci_data); $wci++ ){
				
				if($rfp_wci_data->disease_policy > '0'){	
					if($rfp_wci_data->disease_policy <= $vendor_wci_data[$wci]->WCI_disease_policy){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}	
					
				if($rfp_wci_data->disease_eachemp > '0'){
					if($rfp_wci_data->disease_eachemp <= $vendor_wci_data[$wci]->WCI_disease){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}
				
				if($rfp_wci_data->waiver_work == 'yes'){
					if($vendor_wci_data[$wci]->WCI_waiver == 'waiver'){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}
				
				if($rfp_wci_data->each_accident > '0'){
					if($rfp_wci_data->each_accident <= $vendor_wci_data[$wci]->WCI_each_accident){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}
				
				if($rfp_wci_data->certholder_work == 'yes'){
					if($vendor_wci_data[$wci]->WCI_cert == 'yes'){
						$occur_wci[] = 'yes' ;
					}
					else{
						$occur_wci[] = 'no' ;
					}
				}
				if($rfp_wci_data){
					if($vendor_wci_data[$wci]->WCI_end_date < date('Y-m-d') || $vendor_wci_data[$wci]->WCI_upld_cert=='' || $vendor_wci_data[$wci]->WCI_status == '-1') {
							$occur_wci[] = 'no' ;
					}
					else{
							$occur_wci[] = 'yes' ;
					}
				}	
				if($occur_wci){
					if( in_array("no", $occur_wci) ){
						$cabins_wci[] = "no";
					}
					else{
						$cabins_wci[] = "yes";
					}
				}
				$occur_wci = '';
			}
			
			if($cabins_wci){
				if( in_array("yes", $cabins_wci) ){
					$special_wci = "success";
				}
				else{
					$special_wci = "fail";
				}
			}
			else{
				if($rfp_wci_data)
				$special_wci = "fail";
				else
				$special_wci = "success";
			}
			
				$cabins_wci = '';
		
		return $special_wci ;
	}
	
	//COmpleted
	
	//function to check umbrella liability documents
	 function checknewspecialrequirements_umb_indus($vendorid,$industryid,$managerid){
		$db = & JFactory::getDBO();
		$umb_data ="SELECT * from #__cam_vendor_umbrella_license  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($umb_data);
		$vendor_umb_data = $db->loadObjectList();
		//Get RFP data
		$rfp_umb_data ="SELECT * from #__cam_master_umbrellainsurance_standards WHERE masterid=".$managerid." and industryid=".$industryid; //validation to status of docs
		$db->Setquery($rfp_umb_data);
		$rfp_umb_data = $db->loadObject();
		
			for( $umb=0; $umb<count($vendor_umb_data); $umb++ ){
				
				if($rfp_umb_data->each_occur > '0'){	
					if($rfp_umb_data->each_occur <= $vendor_umb_data[$umb]->UMB_occur){
						$occur_umb[] = 'yes' ;
					}
					else{
						$occur_umb[] = 'no' ;
					}
				}	
				if($rfp_umb_data->aggregate > '0'){	
					if($rfp_umb_data->aggregate <= $vendor_umb_data[$umb]->UMB_aggregate){
						$occur_umb[] = 'yes' ;
					}
					else{
						$occur_umb[] = 'no' ;
					}
				}	
				if($rfp_umb_data->certholder_umbrella == 'yes'){
					if($vendor_umb_data[$umb]->UMB_certholder == 'yes'){
						$occur_umb[] = 'yes' ;
					}
					else{
						$occur_umb[] = 'no' ;
					}
				}
				if($rfp_umb_data){
				if($vendor_umb_data[$umb]->UMB_expdate < date('Y-m-d') || !$vendor_umb_data[$umb]->UMB_upld_cert || $vendor_umb_data[$umb]->UMB_status == '-1' || !$vendor_umb_data[$umb]->UMB_aggregate || !$vendor_umb_data[$umb]->UMB_occur) {
						$occur_umb[] = 'no' ;
				}
				else{
						$occur_umb[] = 'yes' ;
				}
				}
				
				if($occur_umb){
					if( in_array("no", $occur_umb) ){
						$cabins_umb[] = "no";
					}
					else{
						$cabins_umb[] = "yes";
					}
				}
				$occur_umb = '';
			}	 
				
				if($cabins_umb){
					if( in_array("yes", $cabins_umb) ){
						$special_umb = "success";
					}
					else{
						$special_umb = "fail";
					}
				}
				else{
					if($rfp_umb_data)
					$special_umb = "fail";
					else
					$special_umb = "success";
				}
		
				$cabins_umb = '';
				return $special_umb ;
	 }
	//Completed
	
	//Funcion to check professional licensw
	function checknewspecialrequirements_pln_indus($vendorid,$industryid,$managerid){

		$db = & JFactory::getDBO();
		$pln_data ="SELECT * from #__cam_vendor_professional_license  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($pln_data);
		$vendor_pln_data = $db->loadObjectList();
		//Get RFP data
		$rfp_pln_data ="SELECT * from #__cam_master_licinsurance_standards WHERE masterid=".$managerid." and industryid=".$industryid; //validation to status of docs
		$db->Setquery($rfp_pln_data);
		$rfp_pln_data = $db->loadObject();
		
			for( $pln=0; $pln<count($vendor_pln_data); $pln++ ){
			
				if($rfp_pln_data->professional == 'yes'){
					if($vendor_pln_data[$pln]->PLN_expdate < date('Y-m-d') || !$vendor_pln_data[$pln]->PLN_upld_cert || $vendor_pln_data[$pln]->PLN_status == '-1') {
						$occur_pln[] = 'no' ;
					}
					else{
						$occur_pln[] = 'yes' ;
					}
				}
				if( $occur_pln ){
					if( in_array("no", $occur_pln) ){
						$cabins_pln[] = "no";
					}
					else{
						$cabins_pln[] = "yes";
					}
				}	
			}	
			
			if($cabins_pln){
				if( in_array("yes", $cabins_pln) ){
					$special_pln = "success";
				}
				else{
					$special_pln = "fail";
				}
				$cabins_pln = '';
			}
			
			else{
					if($rfp_pln_data->professional)
					$special_pln = "fail";
					else
					$special_pln = "success";
			}
			
				$cabins_pln = '';
				return $special_pln ;
	}
	//Completed	
	
	function checknewspecialrequirements_occ_indus($vendorid,$industryid,$managerid){

		$db = & JFactory::getDBO();
		$occ_data ="SELECT * from #__cam_vendor_occupational_license  WHERE vendor_id=".$vendorid; //validation to status of docs
		$db->Setquery($occ_data);
		$vendor_occ_data = $db->loadObjectList();
		//Get RFP data
		$rfp_occ_data ="SELECT * from #__cam_master_licinsurance_standards WHERE masterid=".$managerid." and industryid=".$industryid; //validation to status of docs
		$db->Setquery($rfp_occ_data);
		$rfp_occ_data = $db->loadObject();
		
			for( $occ=0; $occ<count($vendor_occ_data); $occ++ ){
			
				if($rfp_occ_data->occupational == 'yes'){
					if($vendor_occ_data[$occ]->OLN_expdate < date('Y-m-d') || !$vendor_occ_data[$occ]->OLN_upld_cert || $vendor_occ_data[$pln]->OLN_status == '-1') {
						$occur_occ[] = 'no' ;
					}
					else{
						$occur_occ[] = 'yes' ;
					}
				}
				if( $occur_occ ){
					if( in_array("no", $occur_occ) ){
						$cabins_occ[] = "no";
					}
					else{
						$cabins_occ[] = "yes";
					}
				}	
			}	
			
			if($cabins_occ){
				if( in_array("yes", $cabins_occ) ){
					$special_occ = "success";
				}
				else{
					$special_occ = "fail";
				}
				$cabins_occ = '';
			}
			
			else{
					if($rfp_occ_data->occupational)
					$special_occ = "fail";
					else
					$special_occ = "success";
			}
			
				$cabins_occ = '';
				return $special_occ ;
	}
	//Completed
	 
	 function getvendorindus($user){
		$db=&JFactory::getDBO();
		$industries ="SELECT u.industry_name from #__cam_industries as u, #__cam_vendor_industries as v where u.id=v.industry_id and v.user_id=".$user." and u.published='1'"; //validation to status of docs
		$db->Setquery($industries);
		$indus = $db->loadObjectList();
		return $indus;
	}
	
	function getindustires_edit()
	{
		global $mainframe;
		$user = JFactory::getUser();
		$db = JFactory::getDBO();
		$checked    = JHTML::_( 'grid.id', $i, $row->id );
		// To get the existing vendors
		$sql_exist = "SELECT industry_id FROM #__cam_vendor_industries WHERE user_id=".$user->id." and industry_id!='' ";
		$db->Setquery($sql_exist);
		$exist_indus = $db->loadResultArray();
		
		//COmpleted
		$sql = "SELECT * FROM #__cam_industries WHERE published=1 order by industry_name ";
		$db->Setquery($sql);
		$objects = $db->loadObjectList();
		foreach( $objects as $key => $obj )
		{
			//$checked    = JHTML::_( 'grid.id', $key, $obj->industry_name);
			if( in_array($obj->id,$exist_indus) )
			$checked = "<input checked='checked' type='checkbox' onclick='isChecked(this.checked);' value='".$obj->id."' name='cid[]' id='cb'".$key.">";
			else
			$checked = "<input type='checkbox' onclick='isChecked(this.checked);' value='".$obj->id."' name='cid[]' id='cb'".$key.">";
			$industries[] = $checked.'&nbsp;'. $obj->industry_name;
		}
		//echo "<pre>"; print_r($industries);
	   return $industries;
	}
	
	function getallcounties()
	{
		global $mainframe;
		$user = JFactory::getUser();
		$db = JFactory::getDBO();
		$checked    = JHTML::_( 'grid.id', $i, $row->id );
		// To get the existing vendors
		$sql_exist = "SELECT county_id FROM #__vendor_state_counties WHERE user_id=".$user->id." and county_id!='' ";
		$db->Setquery($sql_exist);
		$exist_counties = $db->loadResultArray();
		//COmpleted
		// Get state code of the vendor
		$sql_statecode = "SELECT v.code FROM #__cam_vendor_states as v, #__cam_vendor_company as u WHERE u.user_id=".$user->id." and u.state=v.id ";
		$db->Setquery($sql_statecode);
		$statecode = $db->loadResult();
		//Completed
		// Get ll counties under the state
		$sql_all = "SELECT * FROM #__cam_counties WHERE State='".$statecode."' order by County ASC ";
		$db->Setquery($sql_all);
		$allcounties = $db->loadObjectList();
		//Completed
		
		foreach( $allcounties as $key => $obj )
		{
			//$checked    = JHTML::_( 'grid.id', $key, $obj->industry_name);
			if( in_array($obj->id,$exist_counties) )
			$checked = "<input checked='checked' type='checkbox' onclick='isChecked(this.checked);' value='".$obj->id."' name='cid[]' id='cb'".$key.">";
			else
			$checked = "<input type='checkbox' onclick='isChecked(this.checked);' value='".$obj->id."' name='cid[]' id='cb'".$key.">";
			$counties[] = $checked.'&nbsp;'. $obj->County;
		}
		//echo "<pre>"; print_r($industries);
	   return $counties;
	}
	
	function getbusinessstatelist()
	{
		$db =& JFactory::getDBO();
		$user = JFactory::getUser();
		$query_bstates = "SELECT V.state_name,V.state_id FROM #__vendor_state_counties as U, #__state as V where U.user_id=".$user->id." and U.state_id=V.state_id GROUP BY V.state_name HAVING COUNT(*)>0";
		$db->setQuery($query_bstates);
		$result_bstates = $db->loadObjectList();
		
		for( $r=0; $r<count($result_bstates); $r++ ){
			$sql_all = "SELECT id,County FROM #__cam_counties WHERE State='".$result_bstates[$r]->state_id."' order by County ASC ";
			$db->Setquery($sql_all);
			$allcounties = $db->loadObjectList();
			$result_bstates[$r]->counties = $allcounties;
		}
		
		return $result_bstates;
	}
	
	function getvendorcounties()
	{
		$user = JFactory::getUser();
		$db = JFactory::getDBO();
		$sql_counties = "SELECT U.county_id, W.County, U.state_id FROM #__vendor_state_counties  as U, #__cam_vendor_company as V, #__cam_counties as W   WHERE V.user_id=".$user->id." AND V.user_id=U.user_id AND W.id=U.county_id GROUP BY U.county_id HAVING COUNT(*)>0 ORDER BY W.County";	
		$db->setQuery($sql_counties);
		$counties_results = $db->loadResultArray();
		return $counties_results;
	}
	
	function deletesubscription(){		// Function to delete old subscriptions
		$user = JFactory::getUser();
		$db = JFactory::getDBO();
		$query_del = "DELETE FROM #__cam_vendor_subscriptions WHERE vendorid=".$user->id; 
		$db->setQuery($query_del); 
		$dleete = $db->query() ;
		return $dleete ;
	}
	
	function getmailbody_free($addo,$vcompanyv){
		$db = JFactory::getDBO();
		$msg = "SELECT introtext  FROM #__content where id='286'";
		$db->setQuery($msg);
		$msg = $db->loadResult();
		$msg = str_replace('[Vendor Company Name]', $vcompanyv, $msg);
        $msg = str_replace('[Document Type]', $addo, $msg);
		return $msg;
	}
	
	//Function to send the mail
	function sendmailstatus($vendorid){
		$db = JFactory::getDBO();
		$sql_oldsub = "SELECT U.name, U.lastname, U.email, U.ccemail, U.subscribe_type, V.company_name  FROM #__users as U, #__cam_vendor_company as V where U.id=".$vendorid." and V.user_id=".$vendorid." ";
		$db->setQuery($sql_oldsub);
		$userdata = $db->loadObject();

			if( $userdata->subscribe_type == 'free' ){
				$body_cc="SELECT introtext FROM #__content where id='288' ";
				$db->setQuery( $body_cc );
				$data = $db->loadResult();
				
				$body = str_replace('{Vendor first name}',$userdata->name,$data);
				$body = str_replace('{Vendor last name}',$userdata->lastname,$body);
				$body = str_replace('{Vendor Firm Name}',$userdata->company_name,$body);
				
				$mailfrom = 'support@myvendorcenter.com' ;
				$from  = 'MyVendorCenter.com';
				$to = $userdata->email;
				$subject = 'Upgraded your account';
				$res = JUtility::sendMail($mailfrom, $from, $to, $subject, $body, $mode=1);
				$to_support = 'vendoremails@myvendorcenter.com';
				$res = JUtility::sendMail($mailfrom, $from, $to_support, $subject, $body, $mode=1);
					$cc = $userdata->ccemail ;
					$cclist = explode(';',$cc);
					for($c=0; $c<=count($cclist); $c++){
					$listcc = $cclist[$c];
					if($listcc){
					$res = JUtility::sendMail($mailfrom, $from, $listcc, $subject, $body, $mode=1);
					}
					}
			
			// Sending mail to support team
			$body_ss="SELECT introtext FROM #__content where id='287' ";
			$db->setQuery( $body_ss );
			$data_ss = $db->loadResult();
			$bodyss = str_replace('{Vendor firm name}',$userdata->company_name,$data_ss);
				$mailfrom = 'support@myvendorcenter.com' ;
				$from  = 'MyVendorCenter.com';
				$to = 'documents@myvendorcenter.com';
				$subject = 'Vendor Subscription Upgrade Notice'; 
			$res = JUtility::sendMail($mailfrom, $from, $to, $subject, $bodyss, $mode=1);
			}
			else{
				$res = '1';
			}
			return $res; 
			
	}
	//Completed
	
	// To update the subscription
	function firstsubscription($vendorid){
		$db = JFactory::getDBO();
		$sql_up = "UPDATE #__users SET subscribe='yes', subscribe_sort='4', subscribe_type='free', subscribe_admin='free' WHERE id='".$vendorid."'";
		$db->setQuery($sql_up);
		$res = $db->query();
	
		$date = date('Y-m-d'); 
		$nextdate = date('Y-m-d', strtotime('+1 year'));
		$query = "insert into #__cam_vendor_subscriptions (`id`, `vendorid`, `coupon`, `paid`, `ctype`, `subscribeid`, `date`, `nextdate`) VALUES ('','".$vendorid."','','0.00','free','A-AAAAAAAAAAAA','".$date."','".$nextdate."')";
		$db->setQuery($query);
		$db->query();
		$et = 'successs';
		return $et;
	}
	//Function to get uninvite message
	function getreason_uninvite($rfpid){
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$sql = " SELECT reason FROM #__cam_rfp_uninvites WHERE rfpid = ".$rfpid." and vendorid=".$user->id."  ";
		$db->Setquery($sql);
		$message = $db->loadResult();
		return $message;
	}
	
	function sendmailtovendor_first($vendorid,$subtype){
			//To send the mail to vendors after subscription is completed
		$db =& JFactory::getDBO();	
		$notification = "SELECT introtext  FROM #__content where id='48'";
		$db->setQuery($notification);
		$body = $db->loadResult();
		//To get the vendor company
		$vendor_company = "SELECT company_name  FROM #__cam_vendor_company where user_id=".$vendorid."";
		$db->setQuery($vendor_company);
		$vcompanyv = $db->loadResult();
		// To get vendor subscription type
		if( $subtype == 'free' )
			$subscribeype = 'Basic Membership';
		if( $subtype == 'public' )
			$subscribeype = 'Basic Membership + Compliance Verification';
		if( $subtype == 'all' )
			$subscribeype = 'Basic Membership + Compliance Verification + Sponsored Vendor';
						
		//COmpleted
		$body = str_replace('{Company Name}', $vcompanyv, $body);
		$body = str_replace('{membership}', $subscribeype, $body);
		
		$mailfrom = 'support@myvendorcenter.com';
		$from  = 'MyVendorCenter Support';
		
		$vendor_emails = "SELECT email, ccemail  FROM #__users where id=".$vendorid."";
		$db->setQuery($vendor_emails);
		$emailsdata = $db->loadObject();
		
		$to = $emailsdata->email;
		$subject = 'Subscription Plan for MyVendorCenter ';
		$cc = 'sk4576@gmail.com';
		$res = JUtility::sendMail($mailfrom, $from, $to, $subject, $body, $mode=1, $cc);
		
		$cc = $emailsdata->ccemail ;
		$cclist = explode(';',$cc);
		for($c=0; $c<=count($cclist); $c++){
			$listcc = $cclist[$c];
				if($listcc){
					$res = JUtility::sendMail($mailfrom, $from, $listcc, $subject, $body, $mode=1);
				}
		}
		$to_support = 'vendoremails@myvendorcenter.com';
		$res = JUtility::sendMail($mailfrom, $from, $to_support, $subject, $body, $mode=1);
		//Completed
		return $res;
	}
	
}
?>
