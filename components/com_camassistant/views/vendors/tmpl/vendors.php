<?php
/**
 * @version		1.0.0 cam assistant $
 * @package		cam_assistant
 * @copyright	Copyright Â© 2010 - All rights reserved.
 * @license		GNU/GPL
 * @author		
 * @author mail	nobody@nobody.com
 *
 *
 * @MVC architecture generated by MVC generator tool at http://www.alphaplug.com
 */

// no direct access
defined('_JEXEC') or die('Restricted access');

jimport( 'joomla.application.component.model' );


class vendorsModelvendors extends Jmodel
{
	//assigning variables
	var $_data;
	var $_total = null;
	var $_pagination = null;
	var $_jobs_index = null;
	
	function __construct(){
		parent::__construct();
		
		global $mainframe, $context;
		//initialize class property
	    $this->_table_prefix = '#__cam_';	
		global $jobs_index;
		global $mainframe;
		// echo "<pre>"; print_r($_REQUEST); exit;
	    //DEVNOTE: Get the pagination request variables
		$limitstart = JRequest::getVar('limitstart', '0');
		// In case limit has been changed, adjust it
		$limitstart = ($limit != 0 ? (floor($limitstart / $limit) * $limit) : 0);
		$Prp_type = JRequest::getVar('Prp_type','');
		
		if($Prp_type == 'Draft')
		$limit = $this->get_Configuration_Params('draftproposals_limit');
		else if($Prp_type == 'ITB' || $Prp_type == 'review')
		$limit = $this->get_Configuration_Params('draftproposals_limit');
		else if($Prp_type == 'Submit')
		$limit = $this->get_Configuration_Params('submittedproposals_limit');
		else if($Prp_type == 'Review')
		$limit = $this->get_Configuration_Params('reviewproposals_limit');
		else if($Prp_type == 'Awarded')
		$limit = $this->get_Configuration_Params('awardedproposals_limit');
		else if($Prp_type == 'Unawarded')
		$limit = $this->get_Configuration_Params('unawarderproposals_limit');
		/*else if($_REQUEST['task'] == 'vendor_available_jobs')
		$limit = $this->get_Configuration_Params('av_page');*/
		else 
		$limit=10;
		
		if ($_REQUEST['viewall']=='all'){
		$limit='0';
		$limitstart='0';
		}
		$limitstart = JRequest::getVar('limitstart', '0');
		$this->setState('limit', $limit);
		$this->setState('limitstart', $limitstart);
	}
	
	//function to get Splrequirements in Review RFP
	function get_Review_SplRequiremntCats() 
	{
		global $mainframe;
		$db=&JFactory::getDBO();
	    //$rfp_id = JRequest::getVar('rfpid','');
		$rfp_id = JRequest::getVar('rfp_id','');
	    $user = JFactory::getUser();
		$sql = " SELECT b.req_parentid as main_id, a.req_title as main_title FROM jos_cam_rfpreq_categories as a , jos_cam_rfpreq_info as b  WHERE a.req_id = b.req_parentid 	 and b.rfp_id = ".$rfp_id."   group by b.req_parentid order by b.req_parentid ";
		$db->Setquery($sql);
		$main_cat = $db->loadObjectList();
		$SPLRequirements_details['main'] = $main_cat;
		$sql = " SELECT DISTINCT b.req_parentid as main_id,b.price, b.req_subparentid as sub_id, a.req_title as sub_title FROM jos_cam_rfpreq_categories as a , jos_cam_rfpreq_info as b  WHERE a.req_id = b.req_subparentid and b.rfp_id = ".$rfp_id." AND  b.req_subparentid != 0  order by b.req_parentid ";
		$db->Setquery($sql);
		$sub_cat = $db->loadObjectList();
		$SPLRequirements_details['sub'] = $sub_cat;
		$sql = " SELECT b.req_parentid as main_id,b.price, b.req_subparentid as sub_id, b.req_id as child_id, a.req_title as child_title FROM jos_cam_rfpreq_categories as a , jos_cam_rfpreq_info as b  WHERE a.req_id = b.req_id and b.rfp_id = ".$rfp_id." AND b.req_parentid != 0 AND req_subparentid != 0  order by b.req_parentid ";
		$db->Setquery($sql);
		$SPLRequirements_details['child'] = $db->loadObjectList();
		// echo "<pre>"; print_r($SPLRequirements_details);  exit;
		return $SPLRequirements_details;
	}
	
	//code to validate RFP special requirements against vendor docs
	function RFP_specialrequirments_validation($rfpid,$vendor_id)
	{
			$flag = 0;	
			$db=&JFactory::getDBO();
			
			//code to validate specialrequirements
			$sql = "SELECT distinct(req_parentid ) FROM #__cam_rfpreq_info WHERE rfp_id ='".$rfpid."'";   
			$db->Setquery($sql);
			$main = $db->loadResultArray();
			$sql = "SELECT req_subparentid  FROM #__cam_rfpreq_info WHERE req_subparentid !=0 AND rfp_id ='".$rfpid."'";   
			$db->Setquery($sql);
			$sub = $db->loadResultArray();
			
			for($m = 0; $m<count($main); $m++)
			{
				if($flag == 0)
				{
				  switch($main[$m])
				  {
			
				  case 1:
				  			if($flag == 0)
							{
							 for($h=0;$h<count($sub); $h++)
							 {
								 switch($sub[$h])
								  {
									  case 18:
									          if($flag == 0)
							                 {
												 $sql = "SELECT id  FROM #__cam_vendor_occupational_license WHERE OLN_status = 1 AND vendor_id=".$vendorsinfo[$i][0]->id;
												  $db->Setquery($sql);
												  $OLN = $db->loadResultArray();
												  $OLN_cnt = count($OLN) ;
												  if($OLN_cnt== 0){
														$flag = 1;	
													}
											 }
											
									case 17: 
									         if($flag == 0)
							                 {	
											  $sql = "SELECT id  FROM #__cam_vendor_professional_license  WHERE PLN_status = 1 AND vendor_id=".$vendorsinfo[$i][0]->id;
											  $db->Setquery($sql);
											  $PLN = $db->loadResultArray();
											  $PLN_cnt = count($PLN) ;
											  if($PLN_cnt== 0){
												$flag = 1;	
													}
											  }		
										
									} //switch($sub[$h])
							} //for($h=0;$h<count($sub); $h++)
							}
				   case 3:
						    if($flag == 0)
							{
								for($s=0;$s<count($sub); $s++)
								{
									  switch($sub[$s])
									  { 
								 
										 case 11:  
												if($flag==0)
												{
												  $sql2 = "SELECT id  FROM #__cam_vendor_workers_companies_insurance WHERE WCI_status = 1 AND vendor_id=".$vendorsinfo[$i][0]->id;
												  $db->Setquery($sql2);
												  $WCI = $db->loadResultArray();	
												  $WCI_cnt = count($WCI) ;
												  if($WCI_cnt == 0){
												  $flag = 1;
												  }
												} 
										  case 12:  
												if($flag==0)
												{
													  $sql = "SELECT sum(GLI_policy_aggregate)  FROM #__cam_vendor_liability_insurence  WHERE GLI_status = 1 AND vendor_id=".$vendorsinfo[$i][0]->id;
													  $db->Setquery($sql);
													  $amount = $db->loadResult(); 
													  $spl_amount="SELECT price FROM #__cam_rfpreq_info WHERE rfp_id='".$rfpid."' and req_subparentid='12'";
													  $db->Setquery($spl_amount);
													  $amount1 = $db->loadResult();
													  $amount2 = doubleval(str_replace(",","",$amount1));
														if($amount2 > $amount){
														$flag=1;
														} else {
														 $flag=0;
														}
												}
									  } //switch($main[$m])
								} //for($s=0;$s<count($sub); $s++)
							}
				 } 
				} 
			}	//for($m = 0; $m < count($main); $m++)	
			 return $flag;
	}		 

	//code to get currently existing open jobs
		function get_openjobs()
		{
			$db = JFactory::getDBO();
			$user = JFactory::getUser();
			$today = date('m-d-Y');
			$sql = "SELECT id,industry_id,property_id FROM #__cam_rfpinfo where  publish=1 AND proposalDueDate >= '".$today."' ";
			$db->Setquery($sql);
			$res = $db->loadObjectList();
			for($a=0; $a<count($res); $a++)
			{
				//validation for county edited by sateesh
				$sql_countyid = "SELECT divcounty FROM #__cam_property  WHERE  id=".$res[$a]->property_id; 
				$db->setQuery($sql_countyid);
				$countyid = $db->loadResult();
				
				//validation for industry
		$sql = "SELECT U.id FROM #__cam_vendor_industries as U,#__vendor_state_counties as V where U.user_id = '".$user->id."' AND V.county_id = '".$countyid."' AND V.user_id = U.user_id AND U.industry_id =".$res[$a]->industry_id; 
				$db->Setquery($sql);
				$res2 = $db->loadResult(); 
				
				if($res2 != '')
				{
					$sql = "SELECT id FROM #__cam_vendor_availablejobs  where rfp_id = ".$res[$a]->id." AND user_id = ".$user->id;
					$db->Setquery($sql);
					$res3 = $db->loadResult(); 
					$flag = $this->RFP_specialrequirments_validation($res[$a]->id,$user->id);
					//code to validate excluded vendor info 
					$camfirm_details= "SELECT cust_id FROM #__cam_rfpinfo where id='".$res[$a]->id."'"; //echo "<br>";
					$db->Setquery($camfirm_details);
					$camfirm_id =$db->loadResult();	
					
				 	$ex_vendor = "SELECT  v_id FROM  #__vendor_inviteinfo WHERE vendortype = 'exclude' AND userid = ".$camfirm_id." AND v_id = ".$user->id; 
					$db->setQuery($ex_vendor);
					$is_excluded = $db->loadResult();
				//	echo "<br><br>";echo "Result3:&nbsp;&nbsp;".$res3; echo "<br>"; echo "Flag:&nbsp;&nbsp;".$flag; echo "<br>"; echo "Exclude:&nbsp;&nbsp;".$is_excluded; echo "<br><br>";
					if($res3 == '' && $flag == 0 && $is_excluded == '')
					{
					//echo "can"; exit;
					$sql = "insert into #__cam_vendor_availablejobs values ('','".$res[$a]->id."','".$user->id."','".$res[$a]->property_id."','0')";  	
					$db->SetQuery($sql);
					$db->query();
					}
					//exit;
				}
			}
		}
	//code to get max bids allowed for an RFP
     function get_RFP_Maxbids()
	 {
	    //validation to redirect to vendor bidding form
		$rfp_id = JRequest::getVar('rfp_id','');
		$user = JFactory::getUser();
		$db = JFactory::getDBO();
		$sql = "SELECT maxProposals FROM #__cam_rfpinfo WHERE id=".$rfp_id;
		$db->Setquery($sql);
		$Max_bids = $db->loadResult();
		$prp_sql = "SELECT count(distinct(proposedvendorid)) FROM jos_cam_vendor_proposals WHERE rfpno=".$rfp_id." AND proposaltype IN ('ITB','review','Draft','Submit') AND Alt_bid != 'yes' ";
		$db->Setquery($prp_sql);
		$Prp_bids = $db->loadResult();
		if($Max_bids > $Prp_bids)
		$flag = '1';
		else if($Max_bids == $Prp_bids)
		$flag = 0;
		return $flag;
		
	 }
	 
	//function to get count of jobs
	function get_count_jobs()
	{
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$today = date('m-d-Y');
		/*$sql = "SELECT A.rfp_id,A.prp_id,R.projectName,R.proposalDueDate,P.property_name  FROM #__cam_vendor_availablejobs as A  LEFT JOIN #__cam_rfpinfo as R ON A.rfp_id = R.id LEFT JOIN #__cam_property as P ON A.prp_id = P.id WHERE A.status = 0 AND R.proposalDueDate >= '".$today."' AND A.user_id=".$user->id." AND R.publish=1 order by R.proposalDueDate,R.proposalDueTime 	 ASC";		*/
		$sql = "SELECT A.id, A.rfp_id,A.prp_id,R.projectName,R.proposalDueDate,P.property_name,R.proposalDueTime,A.status  FROM #__cam_vendor_availablejobs as A
				  LEFT JOIN #__cam_rfpinfo as R ON A.rfp_id = R.id 
				  LEFT JOIN #__cam_property as P ON A.prp_id = P.id 
				  WHERE A.status = 0 AND R.proposalDueDate >= '".$today."' AND  A.user_id=".$user->id." AND R.publish=1 order by R.proposalDueDate,R.proposalDueTime  ASC";
		//$db->Setquery($All_prp_Draft_sql);
		$db->Setquery($sql);
		$records = $db->loadAssocList();
		for($a=0,$b=0; $a<count($records); $a++)
		{ 
			$db = JFactory::getDBO();
			$sql = "SELECT maxProposals FROM #__cam_rfpinfo WHERE id=".$records[$a]['rfp_id'];
			$db->Setquery($sql);
			$Max_bids = $db->loadResult();
			$prp_sql = "SELECT count(distinct(proposedvendorid)) FROM jos_cam_vendor_proposals WHERE rfpno=".$records[$a]['rfp_id']." AND proposaltype IN ('ITB','review','Draft','Submit') AND Alt_bid != 'yes' ";
			$db->Setquery($prp_sql);
			$Prp_bids = $db->loadResult();
			if($Max_bids > $Prp_bids)
			{
			$st = 'Allow';
			$records[$a]['bid_status'] = $st;
			$new_records[$b] = $records[$a];
			$b++;
			}
			
		}
		
		$records = $new_records;
		//echo 'pagination<br/>'; echo count($records);
		//echo "<pre>"; print_r($records); 
		for($d=0,$c=0; $d<count($records); $d++)
		{
			$hr_min = substr($records[$d]['proposalDueTime'], 0, -2);  // returns "7:00"
			$am_pm = substr($records[$d]['proposalDueTime'], -2);    // returns "AM" OR "PM" 
			if($am_pm == 'PM')
			{
			$min = substr($hr_min, -2); 
			$hr = substr($hr_min, 0, -3);  
			$x = substr($records[$d]['proposalDueTime'], 0, 2); 
			if($x != 12)
			$hr = $hr + 12;
			}
			else if($am_pm == 'AM')
			{
			$min = substr($hr_min, -2); 
			$hr = substr($hr_min, 0, -3); 
			}
			$D_date = explode('-',$records[$d]['proposalDueDate']);
			$records[$d]['proposalDueDate'] = $D_date[2].'-'.$D_date[0].'-'.$D_date[1];
			//echo "<pre>"; print_r($date);
			$duedate = $records[$d]['proposalDueDate'].''.$hr.':'.$min.':00';
			
			$time_left_details = $this->fnCalculateEndDateTime($duedate);
			//echo "<pre>"; print_r($time_left_details);
			 if($time_left_details['days'] == 0)
			 $time_left_details['days'] = '';
			 else
			 $time_left_details['days'] = $time_left_details['days'].' Day(s) &nbsp;';
			 $records[$d]['time_left'] = $time_left_details['days'].$time_left_details['hours'].'&nbsp;Hr(s)'.'&nbsp;'.$time_left_details['minutes'].'&nbsp;Mins';
			 if($time_left_details['days'] > 0 || $time_left_details['hours'] > 0 || $time_left_details['minutes'] > 0)
			 {
			 $records[$d]['time_diff'] = $time_left_details['time_diff'];
			 $final_records[$c] = $records[$d];
			  $c++;
			 }
			 else if(($time_left_details['days'] == '' ||  $time_left_details['days'] < 0) && ($time_left_details['hours'] == 0 || $time_left_details['hours'] < 0) && ($time_left_details['minutes'] == 0 || $time_left_details['minutes'] < 0))
			 {
			  $records[$d]['time_over'] = '0Hrs'; 
			  //unset($records[$d]);
			  }
			 
			 
		}
		//echo "<pre>"; print_r($new_records);
		//echo count($final_records);
		return $final_records;
	}

	
	//function to get pagination for available jobs
	function getPagination_Jobs()
	{
		// Lets load the content if it doesnât already exist
		if (empty($this->_pagination))
		{
		jimport('joomla.html.pagination');
		$total = $this->get_count_jobs();
		//$total = $this->get_available_jobs();
		$total = count($total); 
		//echo $this->getState('limitstart'); echo '----'; echo $this->getState('limit'); echo '<br/>';
		$this->_pagination = new JPagination($total, $this->getState('limitstart'), $this->getState('limit') );
		}
		return $this->_pagination;
	}
	//function to get vendor available jobs
	
	function get_available_jobs()
	{
	    /*****************code to send to fnd**************************/
		global $mainframe;
	    $db = JFactory::getDBO();
		$user = JFactory::getUser();
		$today = date('m-d-Y');
		
		$query = "SELECT A.id, A.rfp_id,A.prp_id,R.projectName,R.proposalDueDate,P.property_name,R.proposalDueTime,A.status  FROM #__cam_vendor_availablejobs as A
				  LEFT JOIN #__cam_rfpinfo as R ON A.rfp_id = R.id 
				  LEFT JOIN #__cam_property as P ON A.prp_id = P.id 
				  WHERE A.status = 0 AND R.proposalDueDate >= '".$today."' AND  A.user_id=".$user->id." AND R.publish=1 order by R.proposalDueDate,R.proposalDueTime  ASC";
		
		//$res_records = $this->_getList($query,$this->getState("limitstart"),$this->getState("limit"));
		$db->Setquery($query);
		$res_records = $db->loadAssocList();
		
		$records = $res_records;
		for($d=0,$c=0; $d<count($records); $d++)
		{
			$hr_min = substr($records[$d]['proposalDueTime'], 0, -2);  // returns "7:00"
			$am_pm = substr($records[$d]['proposalDueTime'], -2);    // returns "AM" OR "PM" 
			if($am_pm == 'PM')
			{
			$min = substr($hr_min, -2); 
			$hr = substr($hr_min, 0, -3);  
			$x = substr($records[$d]['proposalDueTime'], 0, 2); 
			if($x != 12)
			$hr = $hr + 12;
			}
			else if($am_pm == 'AM')
			{
			$min = substr($hr_min, -2); 
			$hr = substr($hr_min, 0, -3); 
			}
			$D_date = explode('-',$records[$d]['proposalDueDate']);
			$records[$d]['proposalDueDate'] = $D_date[2].'-'.$D_date[0].'-'.$D_date[1];
			//echo "<pre>"; print_r($date);
			$duedate = $records[$d]['proposalDueDate'].''.$hr.':'.$min.':00';
			
			$time_left_details = $this->fnCalculateEndDateTime($duedate);
			//echo "<pre>"; print_r($time_left_details);
			 if($time_left_details['days'] == 0)
			 $time_left_details['days'] = '';
			 else
			 $time_left_details['days'] = $time_left_details['days'].' Day(s) &nbsp;';
			 $records[$d]['time_left'] = $time_left_details['days'].$time_left_details['hours'].'&nbsp;Hr(s)'.'&nbsp;'.$time_left_details['minutes'].'&nbsp;Mins';
			 if($time_left_details['days'] > 0 || $time_left_details['hours'] > 0 || $time_left_details['minutes'] > 0)
			 {
			 $records[$d]['time_diff'] = $time_left_details['time_diff'];
			 $new_records[$c] = $records[$d];
			  $c++;
			 }
			 else if(($time_left_details['days'] == '' ||  $time_left_details['days'] < 0) && ($time_left_details['hours'] == 0 || $time_left_details['hours'] < 0) && ($time_left_details['minutes'] == 0 || $time_left_details['minutes'] < 0))
			 {
			  $records[$d]['time_over'] = '0Hrs'; 
			  //unset($records[$d]);
			  }
			 
			 
		}
		//echo count($new_records);
		$records = $new_records;
		//echo "<pre>"; print_r($records);
		// Decode to object
		for($i=0; $i<count($records); $i++)
		{ 
		array_unshift($records[$i],$records[$i]['time_diff']);
		array_pop($records[$i]);
		}
		if($records)
		{
		asort($records);
		sort($records);
		}
		//echo count($new_records);
		//echo $this->getState('limit'); echo '-----'; echo $this->getState('limitstart');
		for($p=0,$q=0; $p<count($records); $p++)
		{
			$db = JFactory::getDBO();
			$sql = "SELECT maxProposals FROM #__cam_rfpinfo WHERE id=".$records[$p]['rfp_id'];
			$db->Setquery($sql);
			$Max_bids = $db->loadResult();
			$prp_sql = "SELECT count(distinct(proposedvendorid)) FROM jos_cam_vendor_proposals WHERE rfpno=".$records[$p]['rfp_id']." AND proposaltype IN ('ITB','review','resubmit','Draft','Submit') AND Alt_bid != 'yes' "; 
			$db->Setquery($prp_sql);
			$Prp_bids = $db->loadResult(); 
			if($Max_bids > $Prp_bids)
			{
				$st = 'Allow';
				$records[$p]['bid_status'] = $st;
				$p_records[$q] = $records[$p];
				$q++;
			}
		}
		$records = $p_records;
		if($this->getState('limitstart') != 0)
		{
			$ind = $mainframe->getUserStateFromRequest( "limitstart", 'limitstart', 0 );
			$ind = $ind;
		}
        else
		{
		$ind=0;
		}
		//echo count($res_records);
		for($a = $ind, $b=0; $a<count($records); $a++)
		{ 
			
			if($b<$this->getState('limit') || $this->getState('limit') == 0 )
			{
				//echo $b.'------'.$a.'---------'.$this->getState('limitstart'); echo "<br/>";
				$st = 'Allow';
				$records[$a]['bid_status'] = $st;
				$rec[$b] = $records[$a];
				$b++;
			}	
			
		}
		// echo count($rec);
		 //echo "<pre>"; print_r($rec);
		return $rec;
	}


	
	function get_ACH_ACCOUNT_popup()
	{
	    /*****************code to send to fnd**************************/
	    JHTML::_('behavior.modal');
		$url	= 'index2.php?option=com_content&view=article&id=48&Itemid=113';
		$status = 'width=400,height=350,menubar=yes,resizable=yes';
		//$text = '<img src="templates/camassistant_left/s/upload_certificate.gif" alt="Upload Certificate"  width="113" height="22" />';
		$text = '<strong class="blue_small2">SET UP MY ACH ACCOUNT</strong>';
        $attribs['rel']	= "{handler: 'iframe', size: {x: 680, y: 530}}";  
		$attribs['class']	= 'modal';  
		$attribs['title']	= JText::_( 'SET UP MY ACH ACCOUNT' );
		$attribs['style'] = "text-decoration:none";
		//$attribs['onclick'] = "window.open(this.href,'win2','".$status."'); return false;";
		$output = JHTML::_('link', JRoute::_($url), $text, $attribs);
		return $output;
		/*****************end of code to send to fnd**************************/	
	}

	
	//function to get billing centre data of user
	function get_billing_data()
	{
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$sql = "SELECT id,payment_preference FROM #__cam_vendor_billing_centre WHERE user_id=".$user->id;
		$db->Setquery($sql);
		$data = $db->loadObjectList();
		return $data;
	}
	//function to save billing centre info
	function save_billing_centre($data)
	{
		// give me JTable object
		//echo "<pre>"; print_r($data); exit;			 	
		$row = & $this->getTable('vendor_billing_centre');
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		
		//echo "<pre>"; print_r($row); exit;			 	
		// Create the timestamp for the date field
		// Store the  detail record into the database
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
	}
	//function to get popup in vendor billing center page
	function get_billing_pledge_popup()
	{
	    /*****************code to send to fnd**************************/
	    JHTML::_('behavior.modal');
		$url	= 'index.php?option=com_camassistant&controller=vendors&task=billing_pledge_form';
		$status = 'width=400,height=350,menubar=yes,resizable=yes';
		//$text = '<img src="templates/camassistant_left/images/upload_certificate.gif" alt="Upload Certificate"  width="113" height="22" />';
		$text = '<strong class="blue_small2">enable</strong>';
        $attribs['rel']	= "{handler: 'iframe', size: {x: 680, y: 530}}";  
		$attribs['class']	= 'modal';  
		$attribs['title']	= JText::_( 'Pledge My Receivables' );
		$attribs['style'] = "text-decoration:none";
		//$attribs['onclick'] = "window.open(this.href,'win2','".$status."'); return false;";
		$output = JHTML::_('link', JRoute::_($url), $text, $attribs);
		return $output;
		/*****************end of code to send to fnd**************************/	
	}
	
	function get_documentation()
	{
	    /*****************code to send to fnd**************************/
	    JHTML::_('behavior.modal');
		$url	= 'index2.php?option=com_jefaqpro&view=category&layout=categorylist&task=lists&catid=2&faq=37&Itemid=41?hidden=popup#mymenu1-37-label';
		//$status = 'width=400,height=350,menubar=yes,resizable=yes';
		//$text = '<img src="templates/camassistant_left/images/upload_certificate.gif" alt="Upload Certificate"  width="113" height="22" />';
		$text = '<strong class="blue_small2">documentation</strong>';
        $attribs['rel']	= "{handler: 'iframe', size: {x: 680, y: 400}}";  
		$attribs['class']	= 'modal';  
		$attribs['title']	= JText::_( 'documentation' );
		$attribs['style'] = "text-decoration:none";
		//$attribs['onclick'] = "window.open(this.href,'win2','".$status."'); return false;";
		$output = JHTML::_('link', JRoute::_($url), $text, $attribs);
		return $output;
		/*****************end of code to send to fnd**************************/	
	}
		
	function get_rate_schedule()
	{
	    /*****************code to send to fnd**************************/
	    JHTML::_('behavior.modal');
		$url	= 'index2.php?option=com_jefaqpro&view=category&layout=categorylist&task=lists&catid=2&faq=2&Itemid=41?hidden=popup#mymenu1-2-label';
		//$status = 'width=400,height=350,menubar=yes,resizable=yes';
		//$text = '<img src="templates/camassistant_left/images/upload_certificate.gif" alt="Upload Certificate"  width="113" height="22" />';
		$text = '<strong class="blue_small2">Rate Schedule</strong>';
        $attribs['rel']	= "{handler: 'iframe', size: {x: 680, y: 400}}";  
		$attribs['class']	= 'modal';  
		$attribs['title']	= JText::_( 'Rate Schedule' );
		$attribs['style'] = "text-decoration:none";
		//$attribs['onclick'] = "window.open(this.href,'win2','".$status."'); return false;";
		$output = JHTML::_('link', JRoute::_($url), $text, $attribs);
		return $output;
		/*****************end of code to send to fnd**************************/	
	}
	//function to get popup in vendor billing center page
	function get_enable_this_option_popup()
	{
	    /*****************code to send to fnd**************************/
	    JHTML::_('behavior.modal');
		$url	= 'index.php?option=com_camassistant&controller=vendors&task=billing_pledge_form';
		$status = 'width=400,height=350,menubar=yes,resizable=yes';
		//$text = '<img src="templates/camassistant_left/images/upload_certificate.gif" alt="Upload Certificate"  width="113" height="22" />';
		$text = '<strong class="blue_small2">ENABLE THIS OPTION</strong>';
        $attribs['rel']	= "{handler: 'iframe', size: {x: 680, y: 530}}";  
		$attribs['class']	= 'modal';  
		$attribs['title']	= JText::_( 'Enable This Option' );
		$attribs['style'] = "text-decoration:none";
		//$attribs['onclick'] = "window.open(this.href,'win2','".$status."'); return false;";
		$output = JHTML::_('link', JRoute::_($url), $text, $attribs);
		return $output;
		/*****************end of code to send to fnd**************************/	
	}
	
	
	function get_pledge_status()
	{
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$sql = "SELECT pledge FROM #__cam_vendor_company WHERE user_id=".$user->id;
		$db->Setquery($sql);
		$pledge = $db->loadResult();
		return $pledge;
	}
	
	//function to get liscense categories in vendor compliance doc page
	function get_GLI_policy_configurations()
	{
		$db = JFactory::getDBO();
		$sql = "SELECT vendor_policy_limits,vendor_aggregate FROM #__cam_configuration";
		$db->Setquery($sql);
		$GLI = $db->loadObjectList();
		return $GLI;
	}
	
	//function to get liscense categories in vendor compliance doc page
	function get_liscense_categories()
	{
		$db = JFactory::getDBO();
		$sql = "SELECT * FROM #__compliance_license_categories order by category_name";
		$db->Setquery($sql);
		$categories = $db->loadObjectList();
		return $categories;
	}
	
	//function to get list of states
	function get_edit_compliance_states()
	{
		$db = JFactory::getDBO();
		$sql = "SELECT * FROM #__cam_vendor_states WHERE id != '38' order by state";
		$db->Setquery($sql);
		$states = $db->loadObjectList();
		return $states;
	}	
	
	//function to delete upld cert file
	function get_delete_upld_cert()
	{
		$filename = JRequest::getVar('filename','');
		$tbl = JRequest::getVar('tbl','');
		$suffix = JRequest::getVar('suffix','');
		$id = JRequest::getVar('id','');
		//code to unlink image in folder
		$base_Dir = JPATH_COMPONENT.DS.'assets'.DS.'images'.DS.'vendorcompliances'.DS;
		$filename =$files['name'];
		$post['image'] = $filename;
		if(file_exists($base_Dir . $filename))
					@unlink($base_Dir . $filename);
		//code to update vendor compliances table
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$sql = "UPDATE #__cam_vendor_".$tbl." SET ".$suffix."_upld_cert = ''  where id=".$id." AND vendor_id='".$user->id."'"; 
		$db->Setquery($sql);
		$db->query();
		//$prev_image = $db->loadResult();			
	}
	
	//function to get open or save popup
	function get_open_upld_cert()
	{
		$user	= JFactory::getUser();
		$db = JFactory::getDBO();
		$sql = "SELECT tax_id FROM #__cam_vendor_company   WHERE user_id=".$user->id; 
		$db->setQuery($sql);
		$tax_id = $db->loadResult();
		$vendorname = $user->name.'_'.$user->lastname.'_'.$tax_id; 
		$filename = JRequest::getVar('filename',''); 
		$folder_type = JRequest::getVar('folder_type',''); 
		$doc_type = JRequest::getVar('doc','');
		if($folder_type == 'uploaded_by_CAM')
		$path = JURI::root().'components/com_camassistant/doc'; 
		else if($folder_type == 'uploaded_by_VENDOR')
		$path = JURI::root().'components/com_camassistant/assets/images/rfp/Tasks'; 
		else
		$path = JURI::root().'components/com_camassistant/assets/images/vendorcompliances/'.$vendorname.'/'.$doc_type; 
		$doc_name = $path."/".$filename; 
		
		header("content-type: application/octet-stream");		
		header("Content-Disposition: attachment; filename=".$doc_name);
		readfile($doc_name); 
		exit;
	}
	
	//function to get vendor compliance WCI data
	function get_compliance_W9_data()
	{	
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$sql = "SELECT * FROM #__cam_vendor_compliance_w9docs WHERE vendor_id=".$user->id;
		$db->Setquery($sql);
		$W9_data = $db->loadObjectList();
		return $W9_data;
	}
	
	//function to get vendor compliance WCI data
	function get_compliance_WCI_data()
	{	
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$sql = "SELECT * FROM #__cam_vendor_workers_companies_insurance WHERE vendor_id=".$user->id;
		$db->Setquery($sql);
		$WCI_data = $db->loadObjectList();
		return $WCI_data;
	}
	
	
	//function to get vendor compliance GLI data
	function get_compliance_GLI_data()
	{	
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$sql = "SELECT * FROM #__cam_vendor_liability_insurence  WHERE vendor_id=".$user->id;
		$db->Setquery($sql);
		$GLI_data = $db->loadObjectList();
		return $GLI_data;
	}
	
	//function to get vendor compliance OLN data
	function get_compliance_OLN_data()
	{	
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$sql = "SELECT * FROM #__cam_vendor_occupational_license WHERE vendor_id=".$user->id;
		$db->Setquery($sql);
		$OLN_data = $db->loadObjectList();
		//echo "<pre>"; print_r($OLN_data); exit;
		return $OLN_data;
	}
	
	//function to get vendor compliance PLN data
	function get_compliance_PLN_data()
	{	
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$sql = "SELECT * FROM #__cam_vendor_professional_license WHERE vendor_id=".$user->id;
		$db->Setquery($sql);
		$PLN_data = $db->loadObjectList();
		return $PLN_data;
	}
	
	//function to store vendor_OLN_comploances_info
	function store_vendor_compliance_w9docs_info($data)
	{
	 	// give me JTable object
		//echo "<pre>"; print_r($data); exit;			 	
		$row = & $this->getTable('vendor_compliance_w9docs');
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		
		//echo "<pre>"; print_r($row); exit;			 	
		// Create the timestamp for the date field
		// Store the  detail record into the database
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
	}
	//function to store vendor_OLN_comploances_info
	function store_vendor_WCI_compliances_info($data)
	{
	 	// give me JTable object
		//echo "<pre>"; print_r($data); exit;			 	
		$row = & $this->getTable('vendor_workers_companies_insurance');
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		
		//echo "<pre>"; print_r($row); exit;			 	
		// Create the timestamp for the date field
		// Store the  detail record into the database
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
	}
	
	//function to store vendor_OLN_comploances_info
	function store_vendor_GLI_compliances_info($data)
	{
	 	// give me JTable object
		//echo "<pre>"; print_r($data); exit;			 	
		$row = & $this->getTable('vendor_liability_insurence');
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		
		//echo "<pre>"; print_r($row); exit;			 	
		// Create the timestamp for the date field
		// Store the  detail record into the database
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
	}
	
	//function to store vendor_OLN_comploances_info
	function store_vendor_PLN_compliances_info($data)
	{
	 	// give me JTable object
		//echo "<pre>"; print_r($data); exit;			 	
		$row = & $this->getTable('vendor_professional_license');
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		
		//echo "<pre>"; print_r($row); exit;			 	
		// Create the timestamp for the date field
		// Store the  detail record into the database
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
	}
	
	//function to store vendor_OLN_comploances_info
	function store_vendor_OLN_compliances_info($data)
	{
	 	// give me JTable object
		//echo "<pre>"; print_r($data); exit;			 	
		$row = & $this->getTable('vendor_occupational_license');
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		
		//echo "<pre>"; print_r($row); exit;			 	
		// Create the timestamp for the date field
		// Store the  detail record into the database
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
	}
	//function to display states in vendor registration 
	function get_compliances_OLN_states() 
	{
		global $mainframe;
		$db = JFactory::getDBO();
		$states[] = JHTML::_('select.option', '0', '-Select State-');
		$compliance = JRequest::getVar('compliance','');
		$compliance = $compliance+1;
		$this->_filter_vendorslist	= $mainframe->getUserStateFromRequest( $context.'filter_vendorslist', 'filter_vendorslist', 0,	'string' );	
		$sql = "SELECT * FROM #__cam_vendor_states WHERE id != '38' order by state";
		$db->Setquery($sql);
		$objects = $db->loadObjectList();
		foreach( $objects as $obj ) 
		{
			$states[] = JHTML::_('select.option',  $obj->id, $obj->state);
		}
		//echo "<pre>"; print_r($vendorslist); exit;
		$result = JHTML::_('select.genericlist',$states, 'OLN_state[]', 'class="inputbox" size="1" ' . $javascript , 'value', 'text','', 'OLN_state'.$compliance,  $this->_filter_states);	
	   return $result;
	}
	
	//function to display states in vendor registration 
	function get_compliances_PLN_states() 
	{
		global $mainframe;
		$db = JFactory::getDBO();
		$states[] = JHTML::_('select.option', '0', '-Select State-');
		$compliance = JRequest::getVar('compliance','');
		$compliance = JRequest::getVar('PLN_title','1');
		//$compliance = $compliance+1;
		$this->_filter_vendorslist	= $mainframe->getUserStateFromRequest( $context.'filter_vendorslist', 'filter_vendorslist', 0,	'string' );	
		$sql = "SELECT * FROM #__cam_vendor_states WHERE id != '38' order by state";
		$db->Setquery($sql);
		$objects = $db->loadObjectList();
		foreach( $objects as $obj ) 
		{
			$states[] = JHTML::_('select.option',  $obj->id, $obj->state);
		}
		//echo "<pre>"; print_r($vendorslist); exit;
		$result = JHTML::_('select.genericlist',$states, 'PLN_state[]', 'class="inputbox" size="1" ' . $javascript , 'value', 'text','', 'PLN_state'.$compliance,  $this->_filter_states);	
	   return $result;
	}
	
	//function to get w9 upload certificate link 
	function get_W9_upld_cert_link()
	{
	    /*****************code to send to fnd**************************/
	    JHTML::_('behavior.modal');
        $uri	=& JURI::getInstance();
		$base	= $uri->toString( array('scheme', 'host', 'port'));
		$link	= $base;
		$url	= 'index.php?option=com_camassistant&controller=vendors&task=compliance_upload_form&text_name=W9&compliance=0';
		$status = 'width=400,height=350,menubar=yes,resizable=yes';
		$text = '<img src="templates/camassistant_left/images/uploadw9.gif" alt="Upload Certificate"  width="87" height="22" />';
        $attribs['rel']	= "{handler: 'iframe', size: {x: 660, y: 350}}";  
		$attribs['class']	= 'modal';  
		$attribs['title']	= JText::_( 'Upload A File' );
		//$attribs['onclick'] = "window.open(this.href,'win2','".$status."'); return false;";
		$output = JHTML::_('link', JRoute::_($url), $text, $attribs);
		return $output;
		/*****************end of code to send to fnd**************************/	
	}
	
	//function to get OLN upload certificate link 
	function get_WCI_upld_cert_link()
	{
	    /*****************code to send to fnd**************************/
	    JHTML::_('behavior.modal');
        $uri	=& JURI::getInstance();
		$base	= $uri->toString( array('scheme', 'host', 'port'));
		$link	= $base;
		$url	= 'index.php?option=com_camassistant&controller=vendors&task=compliance_upload_form&text_name=WCI&compliance=0';
		$status = 'width=400,height=350,menubar=yes,resizable=yes';
		$text = '<img src="templates/camassistant_left/images/upload_certificate.gif" alt="Upload Certificate"  width="113" height="22" />';
        $attribs['rel']	= "{handler: 'iframe', size: {x: 660, y: 350}}";  
		$attribs['class']	= 'modal';  
		$attribs['title']	= JText::_( 'Upload A File' );
		//$attribs['onclick'] = "window.open(this.href,'win2','".$status."'); return false;";
		$output = JHTML::_('link', JRoute::_($url), $text, $attribs);
		return $output;
		/*****************end of code to send to fnd**************************/	
	}
	
	//function to get GLI upload certificate link 
	function get_GLI_upld_cert_link()
	{
	    /*****************code to send to fnd**************************/
	    JHTML::_('behavior.modal');
        $uri	=& JURI::getInstance();
		$base	= $uri->toString( array('scheme', 'host', 'port'));
		$link	= $base;
		$url	= 'index.php?option=com_camassistant&controller=vendors&task=compliance_upload_form&text_name=GLI&compliance=0';
		$status = 'width=400,height=350,menubar=yes,resizable=yes';
		$text = '<img src="templates/camassistant_left/images/upload_certificate.gif" alt="Upload Certificate"  width="113" height="22" />';
        $attribs['rel']	= "{handler: 'iframe', size: {x: 660, y: 350}}";  
		$attribs['class']	= 'modal';  
		$attribs['title']	= JText::_( 'Upload A File' );
		//$attribs['onclick'] = "window.open(this.href,'win2','".$status."'); return false;";
		$output = JHTML::_('link', JRoute::_($url), $text, $attribs);
		return $output;
		/*****************end of code to send to fnd**************************/	
	}
	
	//function to get OLN upload certificate link 
	function get_OLN_upld_cert_link()
	{
	    /*****************code to send to fnd**************************/
	    JHTML::_('behavior.modal');
        $uri	=& JURI::getInstance();
		$compliance = JRequest::getVar('compliance','0');
		//$compliance = $compliance+1;
		$base	= $uri->toString( array('scheme', 'host', 'port'));
		$link	= $base;
		$url	= 'index.php?option=com_camassistant&controller=vendors&task=compliance_upload_form&text_name=OLN&compliance='.$compliance;
		$status = 'width=400,height=350,menubar=yes,resizable=yes';
		$text = '<img src="templates/camassistant_left/images/upload_certificate.gif" alt="Upload Certificate"  width="113" height="22" />';
        $attribs['rel']	= "{handler: 'iframe', size: {x: 660, y: 350}}";  
		$attribs['class']	= 'modal';  
		$attribs['title']	= JText::_( 'Upload A File' );
		//$attribs['onclick'] = "window.open(this.href,'win2','".$status."'); return false;";
		$output = JHTML::_('link', JRoute::_($url), $text, $attribs);
		return $output;
		/*****************end of code to send to fnd**************************/	
	}
	
	
	//function to get OLN upload certificate link 
	function get_PLN_upld_cert_link()
	{
	    /*****************code to send to fnd**************************/
	    JHTML::_('behavior.modal');
        $uri	=& JURI::getInstance();
		$compliance = JRequest::getVar('compliance','0');
		//$compliance = $compliance+1;
		$base	= $uri->toString( array('scheme', 'host', 'port'));
		$link	= $base;
		$url	= 'index.php?option=com_camassistant&controller=vendors&task=compliance_upload_form&text_name=PLN&compliance='.$compliance;
		$status = 'width=400,height=350,menubar=yes,resizable=yes';
		$text = '<img src="templates/camassistant_left/images/upload_certificate.gif" alt="Upload Certificate"  width="113" height="22" />';
        $attribs['rel']	= "{handler: 'iframe', size: {x: 660, y: 350}}";  
		$attribs['class']	= 'modal';  
		$attribs['title']	= JText::_( 'Upload A File' );
		//$attribs['onclick'] = "window.open(this.href,'win2','".$status."'); return false;";
		$output = JHTML::_('link', JRoute::_($url), $text, $attribs);
		return $output;
		/*****************end of code to send to fnd**************************/	
	}
	
	//function to get user billing info
	function get_billing_info()
	{
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$bill_info_sql = "SELECT * #__cam_vendor_billing WHERE user_id=".$user->id;
		$db->Setquery($bill_info_sql);
		$bill_info = $db->loadObjectList();
		return $bill_info;
	}
	
	//function to get payment gateway details
	function getBilling_Payment()
	{
		$db = JFactory::getDBO();
		$pay_sql = "SELECT payment_type,pay_name,pay_currency,pay_busness_email,auth_tx_key,auth_login_id FROM #__cam_configuration WHERE id=1";
		$db->Setquery($pay_sql);
		$Billing_Payment = $db->loadObjectList();
		return $Billing_Payment;
	}
	
	//function to get RFP, property, customer info
	//using this function in vendor_proposal_form and vendor_proposal_summary
	function get_RFPinfo()
	{
		$rfp_id = JRequest::getVar('rfp_id','');
	    $db = JFactory::getDBO(); 
		// C.comp_id and  C.cust_id are added by anil_17-08-2011 for pdf generation manager logo purpose in the below query.
		$sql = 'SELECT U.name, U.lastname, U.email, U.extension, U.phone, C.comp_name, C.comp_city, C.comp_state, comp_zip,  C.comp_phno, C.comp_extnno, C.comp_alt_phno, C.comp_alt_extnno, C.comp_website, C.mailaddress, C.comp_logopath, C.comp_id, C.cust_id, P.street, P.property_name, P.state, P.city, P.zip, R.id, R.startDate, R.endDate, R.projectName,R.work_perform, R.frequency, R.proposalDueDate, R.proposalDueTime FROM #__cam_rfpinfo as R
		LEFT JOIN  #__cam_customer_companyinfo as C ON R.cust_id = C.cust_id  
		LEFT JOIN  #__cam_property as P ON R.property_id = P.id  
		LEFT JOIN  #__users as U ON R.cust_id = U.id WHERE R.id = '.$rfp_id;
		$db->Setquery($sql);
		$RFP_details = $db->loadObjectList();
		//echo "<pre>"; print_r($RFP_details); exit;
		return $RFP_details;
	}
	//function to get status --- if payment is success in vendor billing //code by lalitha
	function update_payment_status($status)
	{
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		//echo "<pre>"; print_r($_REQUEST); exit;
		if($status == 'paid')
		{
		$sql = "UPDATE #__cam_vendor_billing  SET status='".$status."' where user_id=".$user->id; 
		$db->setQuery($sql);
		$db->query();
		//code to send payment confimation  email to user
		$get_name_sql='SELECT CONCAT(U.name," " ,U.lastname) "Fullname", email FROM #__users as U where U.id='.$user->id;
		$db->Setquery($get_name_sql);
		$vendor = $db->loadObjectList();
		$mailfrom = 'support@myvendorcenter.com';
		$fromname = 'MyVendorCenter Team';
		$assignuseremail = $vendor[0]->email;
		$mailsubject = 'Payment has been approved';
		//$body = $body_content; 
		$body_text = "SELECT introtext  FROM #__content where id='165'";
		$db->Setquery($body_text);
		$body_msg = $db->loadResult();
		
		$body = str_replace('{VENDOR NAME}',$vendor[0]->Fullname,$body_msg) ;
		//$body = "Hai ".$vendor[0]->Fullname."! <br/>Your Payment has been approved successfully.<br/><br/>At Your Service,<br/><br/>MyVendorCenter.com";
		$mailfrom = 'support@myvendorcenter.com';
		$fromname = 'MyVendorCenter Team';
		$assignuseremail = $vendor[0]->email;
		if(JUtility::sendMail($mailfrom, $fromname, $assignuseremail, $mailsubject, $body,$mode = 1)) echo 'mail sent';
		}
		else
		{
		$sql = "DELETE FROM #__cam_vendor_billing where user_id=".$user->id; 
		$db->setQuery($sql);
		$db->query();
		}
		
		//end of code to send payment confimation  email to user
	}
	
	//function to calculate due time left for RFP's
	function fnCalculateEndDateTime($enddate,$ds='Day',$hs='Hrs',$ms='Min')
	{
		$today = time();
		//echo $today = '2011-09-0701:16:00';
		//$today = strtotime($today); echo '------------';
		//echo $enddate = '2011-09-0702:00:00'; 
		//exit;
		//echo "Hii-->".strtotime($enddate);
		$mk_enddate =  strtotime($enddate);
		$cal_time['time_diff'] = $difference = $mk_enddate-$today;
		$days = floor($difference/(60*60*24));
		
		$rem = $difference%(60*60*24);
		
		$hours = floor($rem/(60*60));
		$rem1 = $rem%(60*60);
		$minutes = floor($rem1/60);
		
		$seconds = $rem1%60;
		if($ds!='d')
		{
		if($days!='' && $ds!='d')
			$d = $days."&nbsp;".$ds.($days == 1 ? '' : 's')." &nbsp;";
		if($days!='' && $ds=='d')
		   $d.=$days."&nbsp;".$ds." &nbsp;";
		if($hours!='')	
			$h = $hours."&nbsp;".$hs." &nbsp;";
		if($minutes!='')	
			$m = $minutes."&nbsp;".$ms."";
		}
		else if($ds=='d')
		{
		if($days!='' && $ds!='d')
			$d = $days.$ds.($days == 1 ? '' : 's')." &nbsp;";
		if($days!='' && $ds=='d')
		   $d.=$days.$ds." &nbsp;";
		if($hours!='')	
			$h = $hours.$hs." &nbsp;";
		if($minutes!='')	
			$m = $minutes.$ms."";
		}
	   //echo $days."d ".$hours."h ".$minutes."m ".$seconds."s";	
		$cal_time['time_left'] = $d.$h.$m;
		$cal_time['days'] = $days;
		$cal_time['hours'] = $hours;
		$cal_time['minutes'] = $minutes;
		$cal_time['seconds'] = $seconds;
		//echo "<pre>"; print_r($cal_time);
		return $cal_time;
		 
	}//fnCalculateEndDateTime
	
	
	 //function to open document
	function view_upld_cert()
	{
		$filename = JRequest::getVar('filename',''); 
		$path = JURI::root().'components/com_camassistant/assets/images/vendorcompliances';
		$doc_name = $path."/".$filename;    
		header("content-type: application/octet-stream");		
		header("Content-Disposition: attachment; filename=".$doc_name);
		readfile($doc_name); 
		exit;
		//parent::display();
	} 
	
	 //function to get vendor compilance docs in PDF
	 function get_COM_docs_summary()
	 {
		$db = JFactory::getDBO();
		$rfp_id = JRequest::getVar('rfp_id','');
		$vendors_list = $this->get_vendors_cnt();
		//echo "<pre>"; print_r($vendors_list);
		$COM = array();
		for($v=0; $v<count($vendors_list); $v++)
		{
			    //code to get OLN docs
				$sql = "SELECT OLN_upld_cert FROM #__cam_vendor_occupational_license  where OLN_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid;
				$db->Setquery($sql);
				$OLN = $db->loadResultArray();
				for($i=0; $i<count($OLN); $i++)
				{
				$ext = substr($OLN[$i], -3); 
				$OLN[$i] = '<a style="color:#7AB800; text-decoration:none;" href="'.JURI::root().'index.php?option=com_camassistant&controller=vendors&task=view_upld_cert&filename='.$OLN[$i].'">'.$OLN[$i].'</a>';
				}
				$OLN = implode(',',$OLN);
				$COM[$v]['OLN'] = $OLN;
				
				//code to get PLN docs
				$sql = "SELECT PLN_upld_cert FROM #__cam_vendor_professional_license  where PLN_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid;
				$db->Setquery($sql);
				$PLN = $db->loadResultArray();
				for($i=0; $i<count($PLN); $i++)
				{
				$ext = substr($PLN[$i], -3); 
				$PLN[$i] = '<a style="color:#7AB800; text-decoration:none;" href="'.JURI::root().'index.php?option=com_camassistant&controller=vendors&task=view_upld_cert&filename='.$PLN[$i].'">'.$PLN[$i].'</a>';
				}
				$PLN = implode(',',$PLN);
				$COM[$v]['PLN'] = $PLN;
				
				//code to get GLI docs
				$sql = "SELECT GLI_upld_cert FROM #__cam_vendor_liability_insurence  where GLI_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid;
				$db->Setquery($sql);
				$GLI = $db->loadResultArray();
				for($i=0; $i<count($GLI); $i++)
				{
				$ext = substr($GLI[$i], -3); 
				$GLI[$i] = '<a style="color:#7AB800; text-decoration:none;" href="'.JURI::root().'index.php?option=com_camassistant&controller=vendors&task=view_upld_cert&filename='.$GLI[$i].'">'.$GLI[$i].'</a>';
				}
				$GLI = implode(',',$GLI);
				$COM[$v]['GLI'] = $GLI;
				
				$sql = "SELECT vendor_id  FROM #__cam_vendor_compliance_w9docs WHERE w9_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid;
				$db->Setquery($sql);
				$vendor_id = $db->loadResultArray();
				
				//code to display WCI docs
				$sql = "SELECT WCI_upld_cert FROM #__cam_vendor_workers_companies_insurance  where WCI_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid;
				$db->Setquery($sql);
				$WCI = $db->loadResultArray();
				for($i=0; $i<count($WCI); $i++)
				{
				$ext = substr($WCI[$i], -3); 
				$WCI[$i] = '<a style="color:#7AB800; text-decoration:none;" href="'.JURI::root().'index.php?option=com_camassistant&controller=vendors&task=view_upld_cert&filename='.$WCI[$i].'">'.$WCI[$i].'</a>';
				}
				$WCI = implode(',',$WCI);
				$COM[$v]['WCI'] = $WCI;
					
				//W9 files
				$sql = "SELECT w9_upld_cert FROM #__cam_vendor_compliance_w9docs   where w9_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid;
				$db->Setquery($sql);
				$W9 = $db->loadResult();
				if($W9 != '')
				{
				$ext2 = substr($W9, -3); 
				$W9 = '<a style="color:#7AB800; text-decoration:none;" href="'.JURI::root().'index.php?option=com_camassistant&controller=vendors&task=view_upld_cert&filename='.$W9.'">'.$W9.'</a>';
				$COM[$v]['W9'] = $W9;
				}
		 }		
		 sort($COM);
		 //echo "<pre>"; print_r($COM); exit;
		return $COM;
	 }
	 
	 //function to get vendor compilance docs in PDF
	 function get_COM_docs_summary2()
	 {
		$db = JFactory::getDBO();
		$rfp_id = JRequest::getVar('rfp_id','');
		$vendors_list = $this->get_vendors_cnt();
		//echo "<pre>"; print_r($vendors_list);
		$COM = array();
		for($v=0; $v<count($vendors_list); $v++)
		{
			   //code to validate specialrequirements
				$sql = "SELECT distinct(req_parentid ) FROM #__cam_rfpreq_info WHERE rfp_id ='".$rfp_id."'";   
				$db->Setquery($sql);
				$main = $db->loadResultArray();
				$sql = "SELECT req_subparentid  FROM #__cam_rfpreq_info WHERE req_subparentid !=0 AND rfp_id ='".$rfp_id."'";   
				$db->Setquery($sql);
				$sub = $db->loadResultArray();
				for($m = 0; $m<count($main); $m++)
				{
					$sql = "SELECT vendor_id  FROM #__cam_vendor_compliance_w9docs WHERE w9_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid;
					$db->Setquery($sql);
					$vendor_id = $db->loadResultArray();
					if($vendor_id[0] != '')
					{
					  $COM[$v]['vendor_id'] = $vendor_id[0];
					  switch($main[$m])
					  {
					   default:
								//W9 files
								$sql = "SELECT w9_upld_cert FROM #__cam_vendor_compliance_w9docs   where w9_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid;
								$db->Setquery($sql);
								$W9 = $db->loadResult();
								if($W9 != '')
								{
								$ext2 = substr($W9, -3); 
								if($ext2 == 'pdf' || $ext2 == 'doc')
								$W9 = '<a href="'.JURI::root().'index.php?option=com_camassistant&controller=vendors&task=view_upld_cert&filename='.$W9.'">'.$W9.'</a>';
								$COM[$v]['W9'] = $W9;
								}
								//GLI files
								$sql = "SELECT GLI_upld_cert FROM #__cam_vendor_liability_insurence  where GLI_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid;
								$db->Setquery($sql);
								$GLI = $db->loadResultArray();
								for($i=0; $i<count($GLI); $i++)
								{
								$ext = substr($GLI[$i], -3); 
								if($ext == 'pdf' || $ext == 'doc')
								$GLI[$i] = '<a href="'.JURI::root().'index.php?option=com_camassistant&controller=vendors&task=view_upld_cert&filename='.$GLI[$i].'">'.$GLI[$i].'</a>';
								}
								$GLI = implode(',',$GLI);
								$COM[$v]['GLI'] = $GLI;
					  case 2:
							  //OLN files
							  $sql = "SELECT OLN_upld_cert FROM #__cam_vendor_occupational_license  where OLN_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid;
								$db->Setquery($sql);
								$OLN = $db->loadResultArray();
								for($i=0; $i<count($OLN); $i++)
								{
								$ext = substr($OLN[$i], -3); 
								if($ext == 'pdf' || $ext == 'doc')
								$OLN[$i] = '<a href="'.JURI::root().'index.php?option=com_camassistant&controller=vendors&task=view_upld_cert&filename='.$OLN[$i].'">'.$OLN[$i].'</a>';
								}
								$OLN = implode(',',$OLN);
								$COM[$v]['OLN'] = $OLN;
							  //PLN files
							   $sql = "SELECT PLN_upld_cert FROM #__cam_vendor_professional_license  where PLN_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid;
								$db->Setquery($sql);
								$PLN = $db->loadResultArray();
								for($i=0; $i<count($PLN); $i++)
								{
								$ext = substr($PLN[$i], -3); 
								if($ext == 'pdf' || $ext == 'doc')
								$PLN[$i] = '<a href="'.JURI::root().'index.php?option=com_camassistant&controller=vendors&task=view_upld_cert&filename='.$PLN[$i].'">'.$PLN[$i].'</a>';
								}
								$PLN = implode(',',$PLN);
								$COM[$v]['PLN'] = $PLN;
					
					  case 4:
									for($s = 0; $s<count($sub); $s++)
								   {
										switch($sub[$s])
										{
										case 5:
												$sql = "SELECT WCI_upld_cert FROM #__cam_vendor_workers_companies_insurance  where WCI_status = 1 AND vendor_id=".$vendors_list[$v]->proposedvendorid;
												$db->Setquery($sql);
												$WCI = $db->loadResultArray();
												for($i=0; $i<count($WCI); $i++)
												{
												$ext = substr($WCI[$i], -3); 
												if($ext == 'pdf' || $ext == 'doc')
												$WCI[$i] = '<a href="'.JURI::root().'index.php?option=com_camassistant&controller=vendors&task=view_upld_cert&filename='.$WCI[$i].'">'.$WCI[$i].'</a>';
												}
												$WCI = implode(',',$WCI);
												$COM[$v]['WCI'] = $WCI;
										}		
									}
							  
					  }
					}
				}	
	     }	
		 sort($COM);
		return $COM;
	 }
	
	//function to get vendor's proposals summary to display in vendor_propsal_centre
	function get_vendor_proposal_summary()
	{
	    $db = JFactory::getDBO();
		$user = JFactory::getUser();
		$today = date('m-d-Y');
		$now_time = date('H:iA');
		//query to get Drfat proposals
		$prp_Draft_sql = "SELECT VP.id, VP.Alt_bid, VP.proposedvendorid, R.id as rfp_id, R.projectName, R.proposalDueDate, R.proposalDueTime, P.id as Prperty_id, P.property_name  FROM  #__cam_vendor_proposals as VP
		LEFT JOIN #__cam_rfpinfo as R ON R.id = VP.rfpno
		LEFT JOIN #__cam_property as P ON R.property_id = P.id
		WHERE VP.proposedvendorid=".$user->id." AND (VP.proposaltype = 'Draft' OR VP.proposaltype = 'ITB' OR VP.proposaltype = 'review') AND R.proposalDueDate >= '".$today."'  order by R.proposalDueDate limit 0,3";
		$db->Setquery($prp_Draft_sql);
		$prp_Draft_summary = $db->loadObjectList();
		//echo "<pre>"; print_r($prp_Draft_summary);
		//code to display due timeleft
		for($d=0; $d<count($prp_Draft_summary); $d++)
		{
			$hr_min = substr($prp_Draft_summary[$d]->proposalDueTime, 0, -2);  // returns "7:00"
			$am_pm = substr($prp_Draft_summary[$d]->proposalDueTime, -2);    // returns "AM" OR "PM"
			if($am_pm == 'PM')
			{
			$min = substr($hr_min, -2); 
			$hr = substr($hr_min, 0, -3); 
			$x = substr($prp_Draft_summary[$d]->proposalDueTime, 0, 2); 
			if($x != 12)
			$hr = $hr + 12;
			}
			else if($am_pm == 'AM')
			{
			$min = substr($hr_min, -2); 
			$hr = substr($hr_min, 0, -3); 
			}
			$D_date = explode('-',$prp_Draft_summary[$d]->proposalDueDate);
			$prp_Draft_summary[$d]->proposalDueDate = $D_date[2].'-'.$D_date[0].'-'.$D_date[1];
			$duedate = $prp_Draft_summary[$d]->proposalDueDate.''.$hr.':'.$min.':00';
			$time_left_details = $this->fnCalculateEndDateTime($duedate);
			// echo "<pre>"; print_r($time_left_details);
			 if($time_left_details['days'] == 0)
			 $time_left_details['days'] = '';
			 else
			 $time_left_details['days'] = $time_left_details['days'].' Day(s) &nbsp;';
			 $prp_Draft_summary[$d]->time_left = $time_left_details['days'].$time_left_details['hours'].'&nbsp;Hr(s)'.'&nbsp;'.$time_left_details['minutes'].'&nbsp;Mins';
		}
		$vendor_proposal_summary[0] = $prp_Draft_summary;
		//echo "<pre>"; print_r($vendor_proposal_summary[0]);
		//query to get submitted proposals
		$prp_Submitted_sql = "SELECT VP.id, VP.Alt_bid, VP.proposedvendorid, R.id as rfp_id, R.projectName, R.proposalDueDate, R.proposalDueTime,P.id as Prperty_id, P.property_name  FROM  #__cam_vendor_proposals as VP
		LEFT JOIN #__cam_rfpinfo as R ON R.id = VP.rfpno
		LEFT JOIN #__cam_property as P ON R.property_id = P.id
		WHERE VP.proposedvendorid=".$user->id." AND (VP.proposaltype = 'Submit' OR VP.proposaltype = 'resubmit') AND R.proposalDueDate >= '".$today."'  order by R.proposalDueDate limit 0,3";
		$db->Setquery($prp_Submitted_sql);
		$prp_Submitted_summary = $db->loadObjectList();
		
		//code to display due timeleft
		for($S=0; $S<count($prp_Submitted_summary); $S++)
		{
			//$H = $prp_Submitted_summary[$S]->proposalDueDate.'&nbsp;'.$prp_Submitted_summary[$S]->proposalDueTime.':00:00';
			//$dat = $prp_Submitted_summary[$S]->proposalDueDate;
			/*$hr_min = substr($prp_Submitted_summary[$S]->proposalDueTime, 0, -2);  // returns "7:00"
			$am_pm = substr($prp_Submitted_summary[$S]->proposalDueTime, -2);    // returns "AM" OR "PM"
			$H = $prp_Submitted_summary[$S]->proposalDueDate.'&nbsp;'.$hr_min.':00'; 
			$dat = $prp_Submitted_summary[$S]->proposalDueDate;
			$duedate = date('Y-m-d H:i:s',mktime(date("H",strtotime($H)), 0, 0, date("m",strtotime($dat)), date("d",strtotime($dat)),   date("Y",strtotime($dat))));*/
			$hr_min = substr($prp_Submitted_summary[$S]->proposalDueTime, 0, -2);  // returns "7:00"
			$am_pm = substr($prp_Submitted_summary[$S]->proposalDueTime, -2);    // returns "AM" OR "PM"
			if($am_pm == 'PM')
			{
			$min = substr($hr_min, -2); 
			$hr = substr($hr_min, 0, -3); 
			$x = substr($prp_Submitted_summary[$S]->proposalDueTime, 0, 2); 
			if($x != 12)
			$hr = $hr + 12;
			}
			else if($am_pm == 'AM')
			{
			$min = substr($hr_min, -2); 
			$hr = substr($hr_min, 0, -3); 
			}
			$D_date = explode('-',$prp_Submitted_summary[$S]->proposalDueDate);
			$prp_Submitted_summary[$S]->proposalDueDate = $D_date[2].'-'.$D_date[0].'-'.$D_date[1];
			$duedate = $prp_Submitted_summary[$S]->proposalDueDate.''.$hr.':'.$min.':00';
			 $time_left_details = $this->fnCalculateEndDateTime($duedate);
			 if($time_left_details['days'] == 0)
			 $time_left_details['days'] = '';
			 else
			 $time_left_details['days'] = $time_left_details['days'].' Day(s) &nbsp;';
			 $prp_Submitted_summary[$S]->time_left = $time_left_details['days'].$time_left_details['hours'].'&nbsp;Hr(s)'.'&nbsp;'.$time_left_details['minutes'].'&nbsp;Mins';
			 //code to cnt no of alternate bids
			 $sql = "SELECT count(rfpno) FROM #__cam_vendor_proposals where rfpno=".$prp_Submitted_summary[$S]->rfp_id." and proposedvendorid = ".$prp_Submitted_summary[$S]->proposedvendorid."  group by rfpno";
			 $db->Setquery($sql);
		     $prp_Submitted_summary[$S]->total_bids = $db->loadResult();
		}
		//echo "<pre>"; print_r($prp_Submitted_summary); exit;
		$vendor_proposal_summary[1] = $prp_Submitted_summary;
		
		//query to get Awarded proposals
		$prp_Awarded_sql = "SELECT VP.id,VP.Alt_bid,VP.proposal_total_price, VP.proposedvendorid, R.id as rfp_id, R.projectName, R.proposalDueDate, R.proposalDueTime, P.id as Prperty_id, P.property_name  FROM  #__cam_vendor_proposals as VP
		LEFT JOIN #__cam_rfpinfo as R ON R.id = VP.rfpno
		LEFT JOIN #__cam_property as P ON R.property_id = P.id
		WHERE VP.proposedvendorid=".$user->id." AND VP.proposaltype = 'Awarded' AND R.proposalDueDate <= '".$today."' order by VP.id limit 0,3";
		$db->Setquery($prp_Awarded_sql);
		$prp_Awarded_summary = $db->loadObjectList();
		$vendor_proposal_summary[2] = $prp_Awarded_summary;
		
		//query to get Unawarded proposals
		$prp_Unawarded_sql = "SELECT VP.id,VP.Alt_bid,VP.proposal_total_price, VP.proposedvendorid, R.id as rfp_id, R.projectName, R.proposalDueDate, R.proposalDueTime, P.id as Prperty_id, P.property_name  FROM  #__cam_vendor_proposals as VP
		LEFT JOIN #__cam_rfpinfo as R ON R.id = VP.rfpno
		LEFT JOIN #__cam_property as P ON R.property_id = P.id
		WHERE VP.proposedvendorid=".$user->id." AND VP.proposaltype = 'Unawarded' AND R.proposalDueDate <= '".$today."' order by VP.id limit 0,3";
		$db->Setquery($prp_Unawarded_sql);
		$prp_Unawarded_summary = $db->loadObjectList();
		$vendor_proposal_summary[3] = $prp_Unawarded_summary;
		
		//query to get proposals under Review
		$prp_Review_sql = "SELECT VP.id,VP.Alt_bid, VP.proposedvendorid, R.id as rfp_id, R.projectName, R.proposalDueDate, R.proposalDueTime, P.id as Prperty_id, P.property_name  FROM  #__cam_vendor_proposals as VP
		LEFT JOIN #__cam_rfpinfo as R ON R.id = VP.rfpno
		LEFT JOIN #__cam_property as P ON R.property_id = P.id
		WHERE VP.proposedvendorid=".$user->id." AND VP.proposaltype = 'Submit' AND R.proposalDueDate <= '".$today."'  order by VP.id limit 0,3";
		$db->Setquery($prp_Review_sql);
		$prp_Review_summary = $db->loadObjectList();
		$vendor_proposal_summary[4] = $prp_Review_summary;
		
		//echo "<pre>"; print_r($vendor_proposal_summary);
		return $vendor_proposal_summary;
	}
	
	//function to get vendor user info in vendor edit form
	function getuserinfo()
	{
	    $db = JFactory::getDBO();
		$user = JFactory::getUser();
		$sql = "SELECT U.*, V.id as vendor_id, V.image, V.company_phone, V.company_address,V.company_addresss, V.zipcode FROM #__users as U LEFT JOIN #__cam_vendor_company as V ON U.id = V.user_id WHERE U.id = ".$user->id;
		$db->Setquery($sql);
		$detail = $db->loadObjectList();
		return $detail;
	}
	
	//function to display states in vendor registration 
	function getstates() 
	{
		global $mainframe;
		$db = JFactory::getDBO();
		$states[] = JHTML::_('select.option', '0', '-Select State-');
		$this->_filter_vendorslist	= $mainframe->getUserStateFromRequest( $context.'filter_vendorslist', 'filter_vendorslist', 0,	'string' );	
		$sql = "SELECT * FROM #__cam_vendor_states order by state";
		$db->Setquery($sql);
		$objects = $db->loadObjectList();
		foreach( $objects as $obj ) 
		{
			$states[] = JHTML::_('select.option',  $obj->id, $obj->state);
		}
		//echo "<pre>"; print_r($vendorslist); exit;
		$result = JHTML::_('select.genericlist',$states, 'states', 'class="inputbox" size="1" ' . $javascript , 'value', 'text', $this->_filter_states);	
	   return $result;
	}
	//function to display industries list in popup
	function getindustires() 
	{
		global $mainframe;
		if(isset($_SESSION['industries']))
		$chk_arry = $_SESSION['industries'];
		$db = JFactory::getDBO();
		$checked    = JHTML::_( 'grid.id', $i, $row->id );
		$sql = "SELECT * FROM #__cam_industries WHERE published=1 order by industry_name ";
		$db->Setquery($sql);
		$objects = $db->loadObjectList();
		foreach( $objects as $key => $obj ) 
		{
			//$checked    = JHTML::_( 'grid.id', $key, $obj->industry_name);
			if(isset($chk_arry) && in_array($obj->industry_name,$chk_arry))
			$checked = "<input checked='checked' type='checkbox' onclick='isChecked(this.checked);' value='".$obj->industry_name."' name='cid[]' id='cb'".$key.">";
			else
			$checked = "<input type='checkbox' onclick='isChecked(this.checked);' value='".$obj->industry_name."' name='cid[]' id='cb'".$key.">";
			$industries[] = $checked.'&nbsp;'. $obj->industry_name;
		}
		//echo "<pre>"; print_r($industries);
	   return $industries;
	}
	//function to populate select industries link 
	function getindustries_link()
	{
	    /*****************code to send to fnd**************************/
	    JHTML::_('behavior.modal');
        $uri	=& JURI::getInstance();
		$base	= $uri->toString( array('scheme', 'host', 'port'));
		$link	= $base;
		$url	= 'index.php?option=com_camassistant&controller=vendors&task=industries_form';
		$status = 'width=400,height=350,menubar=yes,resizable=yes';
		$text = '<img src="templates/camassistant_left/images/select_industry.gif" alt="select industry"  width="134" height="24" />';
        $attribs['rel']	= "{handler: 'iframe', size: {x: 660, y: 350}}";  
		$attribs['class']	= 'modal';  
		$attribs['title']	= JText::_( 'Industries' );
		//$attribs['onclick'] = "window.open(this.href,'win2','".$status."'); return false;";
		$output = JHTML::_('link', JRoute::_($url), $text, $attribs);
		return $output;
		/*****************end of code to send to fnd**************************/	
	}
	
	//function to get vendor compliance alerts
	function get_chk_vendor_GLI_compliance_alert()
	{
	    $db = JFactory::getDBO();
		$user =& JFactory::getUser(); 
 		$user_type = $user->get('user_type');
		
		$alert_sql ="SELECT count(*) from #__cam_vendor_liability_insurence  WHERE vendor_id=".$user->id;
		$db->Setquery($alert_sql);
		$res = $db->loadResult();
		$alert['GLI_exist']= $res;
		
		$alert_sql ="SELECT count(*) from #__cam_vendor_compliance_w9docs  WHERE vendor_id=".$user->id;
		$db->Setquery($alert_sql);
		$res2 = $db->loadResult();
		$alert['W9_exist']= $res2;
		
		$alert_sql ="SELECT count(*) from #__cam_vendor_liability_insurence  WHERE GLI_status = 1 AND vendor_id=".$user->id;
		$db->Setquery($alert_sql);
		$res3 = $db->loadResult();
		if($res3 != 0) $res3=0; else $res3=1;
		$alert['GLI_status']= $res3;
		
		$alert_sql ="SELECT count(*) from #__cam_vendor_compliance_w9docs  WHERE w9_status = 0 AND vendor_id=".$user->id;
		$db->Setquery($alert_sql);
		$res4 = $db->loadResult();
		$alert['W9_status']= $res4;
		$today = date('Y-m-d');
		
		$alert_sql ="SELECT count(*) from #__cam_vendor_professional_license  WHERE PLN_status = 1 AND vendor_id=".$user->id;
		$db->Setquery($alert_sql);
		$res5 = $db->loadResult();
		if($res5 != 0) $res5=0; else $res5=1;
		$alert['PLN_status']= $res5;
		
		$alert_sql ="SELECT count(*) from #__cam_vendor_professional_license  WHERE PLN_expdate  >= '".$today."' AND vendor_id=".$user->id; //validation to expdate of docs
		$db->Setquery($alert_sql);
		$res6 = $db->loadResult();
		if($res6 != 0) $res6=0; else $res6=1;
		$alert['PLN_exp']= $res6;
		
		$alert_sql ="SELECT count(*) from #__cam_vendor_professional_license  WHERE vendor_id=".$user->id;
		$db->Setquery($alert_sql);
		$res7 = $db->loadResult();
		$alert['PLN_exist']= $res7;
		/*$alert_sql ="SELECT count(*) from #__cam_vendor_occupational_license   WHERE OLN_expdate <= '".$today."' AND vendor_id=".$user->id; //validation to expdate of docs
		$db->Setquery($alert_sql);
		$res5 = $db->loadResult();
		$alert['OLN_exp']= $res5;
		$alert_sql ="SELECT count(*) from #__cam_vendor_professional_license  WHERE PLN_expdate  <= '".$today."' AND vendor_id=".$user->id; //validation to expdate of docs
		$db->Setquery($alert_sql);
		$res6 = $db->loadResult();
		$alert['PLN_exp']= $res6;
		$alert_sql ="SELECT count(*) from #__cam_vendor_workers_companies_insurance   WHERE WCI_end_date  <= '".$today."' AND vendor_id=".$user->id; //validation to expdate of docs
		$db->Setquery($alert_sql);
		$res7 = $db->loadResult();
		$alert['WCI_exp']= $res7;*/
		
		$alert_sql ="SELECT count(*) from #__cam_vendor_liability_insurence   WHERE GLI_end_date  >= '".$today."' AND vendor_id=".$user->id; //validation to expdate of docs
		$db->Setquery($alert_sql);
		$res8 = $db->loadResult();
		if($res8 != 0) $res8=0; else $res8=1;
		$alert['GLI_exp']= $res8;

		return $alert;
	}
	
	//function to get announcements
	function getannouncement()
	{
	    $db = JFactory::getDBO();
		$user =& JFactory::getUser(); 
 		$id = $user->get('id');
		
		$user_type = $user->get('user_type');
		//print_r($user);
		$db = & JFactory::getDBO();
		$query = "SELECT state FROM #__cam_vendor_company  WHERE `user_id` =".$id;
		$db->setQuery($query);
		$statename = $db->loadResult();
		$query1 = "SELECT industry_id FROM #__cam_vendor_industries  WHERE `user_id` =".$id;
		$db->setQuery($query1);
		$industry = $db->loadResultArray();
		$industries=implode(',',$industry);
		/*echo "<pre>";
		print_r($industry);*/
		if ($user_type){
		$where[] ='user_type='.$user_type;
		}
		if($statename)
		$where[] ="(state_name='".$statename."' OR state_name='' OR state_name=0)";
		else 
		$where[] ="(state_name='' OR state_name=0)";
		
		if($industry)
		$where[] ="(industry_name IN (".$industries.") OR industry_name='' OR industry_name=0)";
		else 
		$where[] ="(industry_name='' OR industry_name=0)";
		
		$where=implode(' AND ',$where);
		
	 	$announcement = "SELECT announcement FROM #__cam_announcement WHERE published=1 AND ".$where." ORDER BY id DESC";
		$db->Setquery($announcement);
		$announcement = $db->loadObjectList();
		return $announcement;
	}
	//function to get openjobs for dashboard
	function getopenjobs()
	{
	    $db = JFactory::getDBO();
		$user =& JFactory::getUser(); 
 		$user_type = $user->get('user_type');
		$today = date('m-d-Y');
		$now_time = date('H:iA');
		
		/* $openjobs ="SELECT R.id,R.startDate,R.projectName, R.projectName,R.proposalDueTime,R.proposalDueDate, R.work_perform FROM  #__cam_rfpinfo as R
		LEFT JOIN #__cam_vendor_industries  as VI ON R.industry_id = VI.user_id 	 
		WHERE R.cust_id = '".$user->id."' AND R.industry_id= VI.industry_id AND R.proposalDueDate >= '".$today."' AND R.proposalDueTime > '".$now_time."' order by R.id";*/
		$openjobs ="SELECT R.id,R.startDate,R.projectName,P.city, R.projectName,R.proposalDueTime,R.proposalDueDate, R.work_perform FROM  #__cam_rfpinfo as R
		LEFT JOIN #__cam_vendor_industries  as VI ON R.cust_id = VI.user_id 
		LEFT JOIN #__cam_property  as P ON P.id = R.property_id	 
		WHERE R.industry_id= VI.industry_id AND R.proposalDueDate >= '".$today."'order by R.id";
		$db->Setquery($openjobs);
		$records = $db->loadObjectList();
		
		for($d=0; $d<count($records); $d++)
		{
			/*$hr_min = substr($records[$d]->proposalDueTime, 0, -2);  // returns "7:00"
			$am_pm = substr($records[$d]->proposalDueTime, -2);    // returns "AM" OR "PM"
			$H = $records[$d]->proposalDueDate.'&nbsp;'.$hr_min.':00'; 
			$dat = $records[$d]->proposalDueDate;
			$duedate = date('Y-m-d H:i:s',mktime(date("H",strtotime($H)), 0, 0, date("m",strtotime($dat)), date("d",strtotime($dat)),   date("Y",strtotime($dat))));*/
			
			$hr_min = substr($records[$d]->proposalDueTime, 0, -2);  // returns "7:00"
			$am_pm = substr($records[$d]->proposalDueTime, -2);    // returns "AM" OR "PM"
			if($am_pm == 'PM')
			{
			$min = substr($hr_min, -2); 
			$hr = substr($hr_min, 0, -3); 
			$x = substr($records[$d]->proposalDueTime, 0, 2); 
			if($x != 12)
			$hr = $hr + 12;
			}
			else if($am_pm == 'AM')
			{
			$min = substr($hr_min, -2); 
			$hr = substr($hr_min, 0, -3); 
			}
			$D_date = explode('-',$records[$d]->proposalDueDate);
			$records[$d]->proposalDueDate = $D_date[2].'-'.$D_date[0].'-'.$D_date[1];
			
			$duedate = $records[$d]->proposalDueDate.''.$hr.':'.$min.':00';
			$time_left_details = $this->fnCalculateEndDateTime($duedate);
			 if($time_left_details['days'] == 0)
			 $time_left_details['days'] = '';
			 else
			 $time_left_details['days'] = $time_left_details['days'].' Day(s) &nbsp;';
			 $records[$d]->time_left = $time_left_details['days'].$time_left_details['hours'].'&nbsp;Hr(s)'.'&nbsp;'.$time_left_details['minutes'].'&nbsp;Mins';
		}
		return $records;
	}
	//function to save vendor registration details
	function store($data)
	{
	 	// give me JTable object			 	
		$row = & $this->getTable('vendors');
			// Bind the form fields to the  table
		if (!$row->bind($data)) {
		
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		// Create the timestamp for the date field
		// Store the  detail record into the database
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
	}
	///Image resizeing //
	
	//Getting image dimensions
		function get_thumbnail_dimensions()
	{
		$db = JFactory::getDBO();
		$sql = "SELECT vendor_logo_height,vendor_logo_width FROM #__cam_configuration";
		$db->Setquery($sql);
		$dimensions = $db->loadObjectList();
		return $dimensions;
	}

//Completed
	function image_resize_to_max($uploadfile,$max_width,$max_height,$uploadDir,$file)
	{
	/*echo $uploadfile; echo "<br>";
	echo $max_width; echo "<br>";
	echo $max_height; echo "<br>";
	echo $uploadDir; echo "<br>";
	echo $file; echo "<br>";
	echo "cam"; exit;*/
		/******* To Get the size and MIME type of the requested image ****/
		$size		= getimagesize($uploadfile);
		$mime		= $size['mime'];
		/********** To Create the New Image from the Restricted Image ********/
		switch($mime)
		{
			case	'image/gif'		:	$src = imagecreatefromgif($uploadfile);
										break;
			case	'image/png'		:	$src = imagecreatefrompng($uploadfile);
										break;
			default					:	$src = imagecreatefromjpeg($uploadfile);
										break;						
		}
		$width		= $size[0]; 
		$height		= $size[1];
		
		//for large images
		/*********** Assiging The Maximum Width & Height of Image ****/
		if($width > $max_width || $height > $max_height)
		{
			$newwidth	= $max_width;
			$newheight	= ($height/$width)*$newwidth;
		}
		else
		{
			$newwidth	= $width;
			$newheight	= $height;
		}
		$tmp	= imagecreatetruecolor($max_width,$max_height);
		imagecopyresampled($tmp,$src,0,0,0,0,$max_width,$max_height,$width,$height);
		$filename = $uploadDir.DS.$file;
		switch($mime)
		{
			case	'image/gif'		:	imagegif($tmp,$filename);
										break;
			case	'image/x-png'	:
			case	'image/png'		:	imagepng($tmp,$filename);
										break;
			default					:	imagejpeg($tmp,$filename,100);
										break;						
		}
		imagedestroy($src);
		imagedestroy($tmp);
	}//end of function
	
	//Completed//
	
	
	//function to store vendor_industries
	function store_industries($data)
	{
	 	// give me JTable object			 	
		$row = & $this->getTable('vendor_industries');
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		// Create the timestamp for the date field
		// Store the  detail record into the database
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
	}
	
	//function to store in house vendors
	function store_Inhouse_vendors($data)
	{
	 	// give me JTable object			 	
		$row = & $this->getTable('In_House_vendors');
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		// Create the timestamp for the date field
		// Store the  detail record into the database
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}

		return true;
	}
	
	//function to store vendor_billing_info
	function store_billing_info($data)
	{
	 	// give me JTable object
		//echo "<pre>"; print_r($data); exit;			 	
		$row = & $this->getTable('vendor_billing');
		// Bind the form fields to the  table
		if (!$row->bind($data)) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		
		//echo "<pre>"; print_r($row); exit;			 	
		// Create the timestamp for the date field
		// Store the  detail record into the database
		if (!$row->store()) {
			$this->setError($this->_db->getErrorMsg());
			return false;
		}
		return true;
	}
	
	//function pagination params from configuration
	function get_Configuration_Params($param_name)
	{
		$db = JFactory::getDBO();
		$proposal_params ="SELECT ".$param_name."  FROM #__cam_configuration WHERE id=1";
		$db->setQuery($proposal_params);
		$proposal_params = $db->loadResult();
		return $proposal_params;
	}
	
		//function to display all drafted vendor proposals 
	function get_viewall_proposals($Prp_type)
	{
		$db = JFactory::getDBO();
		$user = JFactory::getUser();
		$today = date('m-d-Y');
		$now_time = date('H:iA');
		//query to get Drfat proposals
		/*$All_prp_Draft_sql = "SELECT VP.id,VP.proposedvendorid, R.id as rfp_id, R.projectName, R.proposalDueDate, R.proposalDueTime, P.id as Prperty_id, P.property_name  FROM  #__cam_vendor_proposals as VP
		LEFT JOIN #__cam_rfpinfo as R ON R.id = VP.rfpno
		LEFT JOIN #__cam_property as P ON R.property_id = P.id
		WHERE VP.proposedvendorid=".$user->id." AND (VP.proposaltype = '".$Prp_type."' OR VP.proposaltype = 'ITB')  AND R.proposalDueDate >= '".$today."' AND R.proposalDueTime > '".$now_time."' order by VP.id "; */
		if($Prp_type == 'Awarded' || $Prp_type == 'Unawarded' || $Prp_type == 'Review')
		$due_date = "R.proposalDueDate <= '".$today."' "; 
		else
		$due_date = "R.proposalDueDate >= '".$today."' "; 
		if($Prp_type == 'Draft')
		$condition = " AND (VP.proposaltype = '".$Prp_type."' OR  VP.proposaltype = 'ITB' OR VP.proposaltype = 'review')";
		else if($Prp_type == 'Review')
		$condition = " AND (VP.proposaltype = 'Submit')";
		else if($Prp_type == 'Submit')
		$condition = " AND (VP.proposaltype = '".$Prp_type."' OR  VP.proposaltype = 'resubmit')";
		else
		$condition = " AND (VP.proposaltype = '".$Prp_type."' )";
		$All_prp_Draft_sql = "SELECT VP.id,VP.proposedvendorid, R.id as rfp_id, R.projectName, R.proposalDueDate, R.proposalDueTime, P.id as Prperty_id, P.property_name  FROM  #__cam_vendor_proposals as VP
		LEFT JOIN #__cam_rfpinfo as R ON R.id = VP.rfpno
		LEFT JOIN #__cam_property as P ON R.property_id = P.id
		WHERE VP.proposedvendorid=".$user->id.$condition."  AND ".$due_date." order by R.proposalDueDate "; 
		$db->Setquery($All_prp_Draft_sql);
		$All_prp_Draft_summary = $db->loadObjectList();
		//echo "<pre>"; print_r($All_prp_Draft_summary);
		//code to display due timeleft
		for($d=0; $d<count($All_prp_Draft_summary); $d++)
		{
			/*$H = $All_prp_Draft_summary[$d]->proposalDueDate.'&nbsp;'.$All_prp_Draft_summary[$d]->proposalDueTime.':00:00';
			$dat = $All_prp_Draft_summary[$d]->proposalDueDate;
			$duedate = date('Y-m-d H:i:s',mktime(date("H",strtotime($H)), 0, 0, date("m",strtotime($dat)), date("d",strtotime($dat)),   date("Y",strtotime($dat))));*/
			
			$hr_min = substr($All_prp_Draft_summary[$d]->proposalDueTime, 0, -2);  // returns "7:00"
			$am_pm = substr($All_prp_Draft_summary[$d]->proposalDueTime, -2);    // returns "AM" OR "PM"
			if($am_pm == 'PM')
			{
			$min = substr($hr_min, -2); 
			$hr = substr($hr_min, 0, -3); 
			$x = substr($All_prp_Draft_summary[$d]->proposalDueTime, 0, 2); 
			if($x != 12)
			$hr = $hr + 12;
			}
			else if($am_pm == 'AM')
			{
			$min = substr($hr_min, -2); 
			$hr = substr($hr_min, 0, -3); 
			}
			$D_date = explode('-',$All_prp_Draft_summary[$d]->proposalDueDate);
			$All_prp_Draft_summary[$d]->proposalDueDate = $D_date[2].'-'.$D_date[0].'-'.$D_date[1];
			 $duedate = $All_prp_Draft_summary[$d]->proposalDueDate.''.$hr.':'.$min.':00';
			 $time_left_details = $this->fnCalculateEndDateTime($duedate);
			 if($time_left_details['days'] == 0)
			 $time_left_details['days'] = '';
			 else
			  $time_left_details['days'] = $time_left_details['days'].' Day(s) &nbsp;';
			 $All_prp_Draft_summary[$d]->time_left = $time_left_details['days'].$time_left_details['hours'].'&nbsp;Hr(s)'.'&nbsp;'.$time_left_details['minutes'].'&nbsp;Mins';
		}
		//echo "<pre>"; print_r($All_prp_Draft_summary);
		return $All_prp_Draft_summary;
	}

	//function to get query in viewall_proposals
	function _buildQuery($Prp_type)
	{
		// Get the WHERE and ORDER BY clauses for the query
		//$where = $this->_buildContentWhere();
		$user = & JFactory::getUser();
		$today = date('m-d-Y');
		if($Prp_type == 'Awarded' || $Prp_type == 'Unawarded' || $Prp_type == 'Review')
		$due_date = "R.proposalDueDate <= '".$today."' "; 
		else
		$due_date = "R.proposalDueDate >= '".$today."' "; 
		if($Prp_type == 'Draft')
		$condition = " AND (VP.proposaltype = '".$Prp_type."' OR  VP.proposaltype = 'ITB' OR VP.proposaltype = 'review')";
		else if($Prp_type == 'Review')
		$condition = " AND (VP.proposaltype = 'Submit')";
		else if($Prp_type == 'Submit')
		$condition = " AND (VP.proposaltype = '".$Prp_type."' OR  VP.proposaltype = 'resubmit')";
		else
		$condition = " AND (VP.proposaltype = '".$Prp_type."' )";
		$query = "SELECT VP.id,VP.Alt_bid,VP.proposedvendorid,VP.proposal_total_price ,R.id as rfp_id, R.projectName, R.proposalDueDate, R.proposalDueTime, P.id as Prperty_id, P.property_name  FROM  #__cam_vendor_proposals as VP
		LEFT JOIN #__cam_rfpinfo as R ON R.id = VP.rfpno
		LEFT JOIN #__cam_property as P ON R.property_id = P.id
		WHERE VP.proposedvendorid=".$user->id.$condition."  AND ".$due_date." order by R.proposalDueDate "; 
		//echo $query;
		return $query;
	}
	
	//function to get records in viewall_proposals
	function get_limit_records($Prp_type) 
	{
		$query = $this->_buildQuery($Prp_type);
		//echo $this->getState('limitstart'); echo '----'; echo $this->getState('limit'); echo '<br/>';
		$records = $this->_getList($query,$this->getState("limitstart"),$this->getState("limit"));
		//echo count($records);
		//echo 'model';
		for($d=0; $d<count($records); $d++)
		{
			/*$hr_min = substr($records[$d]->proposalDueTime, 0, -2);  // returns "7:00"
			$am_pm = substr($records[$d]->proposalDueTime, -2);    // returns "AM" OR "PM"
			$H = $records[$d]->proposalDueDate.'&nbsp;'.$hr_min.':00'; 
			$dat = $records[$d]->proposalDueDate;
			$duedate = date('Y-m-d H:i:s',mktime(date("H",strtotime($H)), 0, 0, date("m",strtotime($dat)), date("d",strtotime($dat)),   date("Y",strtotime($dat))));*/
			
			$hr_min = substr($records[$d]->proposalDueTime, 0, -2);  // returns "7:00"
			$am_pm = substr($records[$d]->proposalDueTime, -2);    // returns "AM" OR "PM"
			if($am_pm == 'PM')
			{
			$min = substr($hr_min, -2); 
			$hr = substr($hr_min, 0, -3); 
			$x = substr($records[$d]->proposalDueTime, 0, 2); 
			if($x != 12)
			$hr = $hr + 12;
			}
			else if($am_pm == 'AM')
			{
			$min = substr($hr_min, -2); 
			$hr = substr($hr_min, 0, -3); 
			}
			$records[$d]->ClosedDueDate = $records[$d]->proposalDueDate;
			$D_date = explode('-',$records[$d]->proposalDueDate);
			$records[$d]->proposalDueDate = $D_date[2].'-'.$D_date[0].'-'.$D_date[1];
			$duedate = $records[$d]->proposalDueDate.''.$hr.':'.$min.':00';
			$time_left_details = $this->fnCalculateEndDateTime($duedate);
			 if($time_left_details['days'] == 0)
			 $time_left_details['days'] = '';
			 else
			 $time_left_details['days'] = $time_left_details['days'].' Day(s) &nbsp;';
			 $records[$d]->time_left = $time_left_details['days'].$time_left_details['hours'].'&nbsp;Hr(s)'.'&nbsp;'.$time_left_details['minutes'].'&nbsp;Mins';
			 //code to cnt no of alternate bids
			 $db =& JFactory::getDBO();
			 $sql = "SELECT count(rfpno) FROM #__cam_vendor_proposals where rfpno=".$records[$d]->rfp_id." and proposedvendorid = ".$records[$d]->proposedvendorid."  group by rfpno";
			 $db->Setquery($sql);
		     $records[$d]->total_bids = $db->loadResult();
		}
	//	echo "<pre>"; print_r($records);
	//	echo count($records);
		return $records;
	}
	
	//function to get pagination for all types of proposals in viewall_proposals
	function getPagination($Prp_type)
	{
		// Lets load the content if it doesnât already exist
		if (empty($this->_pagination))
		{
		jimport('joomla.html.pagination');
		$total = $this->get_viewall_proposals($Prp_type);
		$total = count($total);
		$this->_pagination = new JPagination($total, $this->getState('limitstart'), $this->getState('limit') );
		}
		return $this->_pagination;
	}

// for getting the state list from db to dipaly in the vendor regsitration  //coded by anand babu

	function getstatelist()
	{
		$db =& JFactory::getDBO();
		$query = "SELECT * FROM #__state";
		$db->setQuery($query);
		$result = $db->loadObjectList();
		return $result;
	}

 // for getting the country list from db to dipaly in the vendor regsitration  //coded by anand babu

	function getcountylist()
	{
		$db =& JFactory::getDBO();
		$query = "SELECT * FROM #__county";
		$db->setQuery($query);
		$result = $db->loadObjectList();
		return $result;
	}

	function getedit_info()
	{
		$db = & JFactory::getDBO();
		$user = JFactory::getUser();
		$query = "SELECT * FROM #__cam_vendor_company WHERE user_id=".$user->id;
		$db->setQuery($query);
		$results = $db->loadObjectList();
		//echo "<pre>"; print_r($results);
		return $results;
	}	//echo 'comapny name :<pre>'; print_r($results);
	function getstatesforeditvendor($stateid)
	{	
		$db = & JFactory::getDBO();
	 	$query ="SELECT state_name FROM #__state WHERE id = '".$stateid."'"; 
		$db->setQuery($query);
		$results = $db->loadObjectList();
		//echo '<pre>'; print_r($results); exit;
		return $results;
	}
//for getting state id in edit vendor page	
	function getsselectstate($userid)
	{
		//echo '<pre>'; print_r($userid);
		$db = JFactory::getDBO();
		$query ="select * from #__vendor_state_counties Where user_id =".$userid;
		$db->setQuery($query);
		$results = $db->loadObjectList();
		return $results;
	}
//for getting statename for edit vendor page
	function getstatename($stateid)
	{
		//echo '<pre>'; print_r($stateid);
		$db = JFactory::getDBO();
		$query ="select state_name from #__state Where state_id ='".$stateid."'"; 
		$db->setQuery($query);
		$results = $db->loadObjectList();
		//echo "<pre>"; print_r($results);
		return $results;
	}
	function getallstatenamewithids()
	{
		$db = JFactory::getDBO();
		$query ="select * from #__cam_vendor_states"; 
		$db->setQuery($query);
		$results = $db->loadObjectList();
		//echo "<pre>"; print_r($results);exit;
		return $results;
	}
	
//for getting countyname in edit vendor page 
	function  getcountyname($countyid)
	{
		//echo '<pre>'; print_r($countyid);
		$db = JFactory::getDBO();
		//$query ="select county_name from #__county Where id =".$countyid;
		 $query ="select County from #__cam_counties Where id =".$countyid;
		
		$db->setQuery($query);
		$results = $db->loadObjectList();
		
		return $results;
	}
	
	//for getting industryname in edit vendor compilance page 
	function getindustry_ids($userid)
	{
		$db = JFactory::getDBO();
		$query ="select industry_id from #__cam_vendor_industries Where user_id =".$userid;
		$db->setQuery($query);
		$results = $db->loadResultArray();
		
		return $results;
	}
	
//for getting industryname in edit vendor page 
	function getindustryids($userid)
	{
		$db = JFactory::getDBO();
		$query ="select * from #__cam_vendor_industries Where user_id =".$userid;
		$db->setQuery($query);
		$results = $db->loadObjectList();
//		echo "<pre>"; print_r($results); exit;
		return $results;
	}
//for getting industryname using industry id for edit vedor page
	function getindustryname($industryid)
	{ 
		$db = JFactory::getDBO();
		$query ="select industry_name from #__cam_industries Where id =".$industryid; 
		$db->setQuery($query);
		$results = $db->loadObjectList();
		return $results;
	}

	
	/*function def()
	{	
		$query = "SELECT s.id,s.state_name as name FROM `#__vendor_state_counties` AS sc, #__state as s WHERE sc.user_id=".$user->id." and sc.state_id=s.id";
		$db->setQuery($query);
		$states = $db->loadObjectList();
		//echo 'counties :<pre>'; print_r($states);
		$query = "SELECT c.id,c.county_name as name FROM `#__vendor_state_counties` AS sc, #__county as c WHERE sc.user_id=".$user->id." and sc.state_id=c.id";
		$db->setQuery($query);
		$counties =  $db->loadObjectList();
		
//		echo ' states <pre>'; print_r($states);exit;

	} */
	
	function getcountylink()
	{
		
	   
	    JHTML::_('behavior.modal');
        $uri	=& JURI::getInstance();
		$base	= $uri->toString( array('scheme', 'host', 'port'));
		$link	= $base;
		$url	= 'index.php?option=com_camassistant&controller=vendors&task=county_form';
		$status = 'width=400,height=350,menubar=yes,resizable=yes';
		$text = '<br/>Add Another County';
        $attribs['rel']	= "{handler: 'iframe', size: {x: 660, y: 350}}";  
		$attribs['class']	= 'modal';  
		$attribs['title']	= JText::_( 'County' );
		//$attribs['onclick'] = "window.open(this.href,'win2','".$status."'); return false;";
		$output = JHTML::_('link', JRoute::_($url), $text, $attribs);
		return $output;
		
	}

	// for getting the state list from db to dipaly in the vendor regsitration  //coded by anand babu

	 function getstatelink()
	{
	    JHTML::_('behavior.modal');
        $uri	=& JURI::getInstance();
		$base	= $uri->toString( array('scheme', 'host', 'port'));
		$link	= $base;
		$url	= 'index.php?option=com_camassistant&controller=vendors&task=state_form';
		$status = 'width=400,height=350,menubar=yes,resizable=yes';
		$text = 'Add Another State';
        $attribs['rel']	= "{handler: 'iframe', size: {x: 660, y: 350}}";  
		$attribs['class']	= 'modal';  
		$attribs['title']	= JText::_( 'Industries' );
		//$attribs['onclick'] = "window.open(this.href,'win2','".$status."'); return false;";
		$output = JHTML::_('link', JRoute::_($url), $text, $attribs);
		return $output;
		
	}
	

	
	/*******************Functions related to Vendor bidds Summary************************/
	
	//function to get total,average,low,high bidding amount of RFP
	function get_Bidamount_info()
	{
		$rfp_id = JRequest::getVar('rfp_id','');
		$db = & JFactory::getDBO();
		$Bid_sql = "SELECT  (select count(*)  from #__cam_vendor_proposals where rfpno=".$rfp_id." AND proposaltype = 'Submit') as Submitted, (select count(*)  from #__cam_vendor_proposals where rfpno=".$rfp_id." AND proposaltype = 'Reject') as Rejected, (SELECT SUM(proposal_total_price)/count(id) FROM #__cam_vendor_proposals where rfpno=".$rfp_id." AND (proposaltype = 'Submit' or proposaltype = 'resubmit')) as Average_Bid, MAX(proposal_total_price) as Max_Bid, MIN(proposal_total_price) as Min_Bid FROM #__cam_vendor_proposals  WHERE rfpno = ".$rfp_id;
		$db->setQuery($Bid_sql);
		$Bid_info = $db->loadObjectList();
		return $Bid_info;
	}
	
	//function to get total,average,low,high bidding amount of Awarded RFP /* anil */
	function get_Bidamount_infor()
	{
		$rfp_id = JRequest::getVar('rfp_id','');
		$db = & JFactory::getDBO();
		$Bid_sql = "SELECT  (select count(*)  from jos_cam_vendor_proposals where rfpno=".$rfp_id.") as Submitted, (select count(*)  from jos_cam_vendor_proposals where rfpno=".$rfp_id.") as Rejected,SUM(proposal_total_price)/count(id) as Average_Bid, MAX(proposal_total_price) as Max_Bid, MIN(proposal_total_price) as Min_Bid FROM #__cam_vendor_proposals  WHERE rfpno = ".$rfp_id;
		$db->setQuery($Bid_sql);
		$Bid_info = $db->loadObjectList();
		return $Bid_info;
	}
	
	//function to get bidded vendors info to display in proposal summary page
	function get_Bidded_vendors_info()
	{
		$rfp_id = JRequest::getVar('rfp_id','');
		$db = & JFactory::getDBO();
		$user = JFactory::getUser();
		$sql = "SELECT  VP.id,VP.proposedvendorid,VP.rfpno,VP.Alt_bid,VP.proposal_total_price, U.name, U.lastname, U.email, U.extension, U.phone, U.cellphone,V.company_name,V.company_address,V.city,V.state,V.zipcode,V.image, V.in_house_vendor,V.company_phone,V.phone_ext,V.alt_phone,V.alt_phone_ext,V.established_year FROM #__cam_vendor_proposals AS VP LEFT JOIN #__cam_vendor_company as V ON VP.proposedvendorid = V.user_id LEFT JOIN #__users as U ON U.id = V.user_id  WHERE VP.rfpno = ".$rfp_id." AND VP.proposaltype='Submit' AND VP.Alt_bid != 'Yes' ORDER BY VP.id ";
		$db->setQuery($sql);
		$res = $db->loadObjectList();
		return $res;
	}
	
	//function to get bidded vendors info to display in Awarded Proposal page /* anil */
	function get_Bidded_vendors_infor()
	{
		$rfp_id = JRequest::getVar('rfp_id','');
		$db = & JFactory::getDBO();
		$user = JFactory::getUser();
		$sql = "SELECT  VP.id,VP.proposedvendorid,VP.rfpno,VP.Alt_bid,VP.proposal_total_price, U.name, U.lastname, U.email, U.extension, U.phone, U.cellphone,V.company_name,V.company_address,V.city,V.state,V.zipcode,V.image, V.in_house_vendor,V.company_phone,V.phone_ext,V.alt_phone,V.alt_phone_ext,V.established_year FROM #__cam_vendor_proposals AS VP LEFT JOIN #__cam_vendor_company as V ON VP.proposedvendorid = V.user_id LEFT JOIN #__users as U ON U.id = V.user_id  WHERE VP.rfpno = ".$rfp_id." AND VP.Alt_bid != 'Yes' ORDER BY VP.id ";
		$db->setQuery($sql);
		$res = $db->loadObjectList();
		return $res;
	}
	
	//function to get Alt bidded vendors info to display in proposal summary page
	function get_Alt_Bidded_vendors_info()
	{
		$rfp_id = JRequest::getVar('rfp_id','');
		$db = & JFactory::getDBO();
		$user = JFactory::getUser();
		$sql = "SELECT  VP.id,VP.proposedvendorid,VP.rfpno,VP.Alt_bid,VP.proposal_total_price, U.name, U.lastname, U.email, U.extension, U.phone, U.cellphone,V.company_name,V.company_address,V.image, V.in_house_vendor,V.company_phone,V.phone_ext,V.alt_phone,V.alt_phone_ext,V.established_year FROM #__cam_vendor_proposals AS VP LEFT JOIN #__cam_vendor_company as V ON VP.proposedvendorid = V.user_id LEFT JOIN #__users as U ON U.id = V.user_id  WHERE VP.rfpno = ".$rfp_id." AND VP.proposaltype='Submit' AND VP.Alt_bid = 'yes' ORDER BY VP.id ";
		$db->setQuery($sql);
		$res = $db->loadObjectList();
		return $res;
	}
	
	//function to get Alt bidded vendors info to display in proposal summary page
	function get_Alt_Bidded_vendors_infor()
	{
		$rfp_id = JRequest::getVar('rfp_id','');
		$db = & JFactory::getDBO();
		$user = JFactory::getUser();
		$sql = "SELECT  VP.id,VP.proposedvendorid,VP.rfpno,VP.Alt_bid,VP.proposal_total_price, U.name, U.lastname, U.email, U.extension, U.phone, U.cellphone,V.company_name,V.company_address,V.image, V.in_house_vendor,V.company_phone,V.phone_ext,V.alt_phone,V.alt_phone_ext,V.established_year FROM #__cam_vendor_proposals AS VP LEFT JOIN #__cam_vendor_company as V ON VP.proposedvendorid = V.user_id LEFT JOIN #__users as U ON U.id = V.user_id  WHERE VP.rfpno = ".$rfp_id." AND VP.proposaltype='Submit' AND VP.Alt_bid = 'yes' ORDER BY VP.id ";
		$db->setQuery($sql);
		$res = $db->loadObjectList();
		return $res;
	}
	
	//function to get RFP tasks info
	function get_TASKS_summary()
	{
	    $db = JFactory::getDBO();
		$rfp_id = JRequest::getVar('rfp_id','');
		$user = JFactory::getUser();
		$sql = 'SELECT task_id,rfp_id,linetaskname,is_req_taskvendors FROM #__cam_rfpsow_linetask WHERE rfp_id = '.$rfp_id ;
		$db->Setquery($sql);
		$TASK_details = $db->loadObjectList();
		// "<pre>"; print_r($TASK_details);
		  for($p=0; $p<count($TASK_details); $p++) //to get task price
		  {
		   $price_sql = 'SELECT LP.id,LP.item_id,LP.item_price,LP.vendor_id FROM #__cam_vendor_proposals as VP LEFT JOIN #__cam_rfpsow_docs_lineitems_prices as LP ON VP.proposedvendorid = LP.vendor_id  WHERE LP.item_type="task" AND LP.item_id = '.$TASK_details[$p]->task_id .' AND LP.rfp_id=VP.rfpno AND LP.Alt_bid != "yes" AND VP.Alt_bid != "yes"'; 
		  $db->Setquery($price_sql);
		  $price = $db->loadObjectList();
		  $TASK_details[$p]->task_price = $price;
		  } 
		   for($p=0; $p<count($TASK_details); $p++) //to get task price
		  {
		   $price_sql = 'SELECT LP.id,LP.task_id,LP.upload_doc,LP.vendor_id FROM #__cam_vendor_proposals as VP LEFT JOIN #__cam_rfpsow_uploadfiles as LP ON VP.proposedvendorid = LP.vendor_id  WHERE LP.spl_req ="No" AND LP.task_id = '.$TASK_details[$p]->task_id .' AND LP.rfp_id=VP.rfpno AND LP.Alt_bid != "yes" AND VP.Alt_bid != "yes"'; 
		  $db->Setquery($price_sql);
		  $vendor_uploads = $db->loadObjectList();
			 for($i=0; $i<count($vendor_uploads); $i++)
			{
				 $arr = explode('/',$vendor_uploads[$i]->upload_doc);
				 $cnt = count($arr);
				 $vendor_uploads[$i]->title = $arr[$cnt-1];
				 $link = '<a style="color:#7AB800; text-decoration:none;" href="'.JURI::root().'index.php?option=com_camassistant&controller=vendors&task=view_upld_cert&folder_type=uploaded_by_VENDOR&filename='.$vendor_uploads[$i]->title.'">'.$vendor_uploads[$i]->title.'</a>';
				 $vendor_uploads[$i]->title = $link;
			} 
		  $TASK_details[$p]->vendor_uploads = $vendor_uploads;
		  
		  } 
		//exit;
		// echo "<pre>"; print_r($TASK_details); exit;
		 return $TASK_details;
	
	 }
	 
	 //function to get Alt RFP tasks info
	function get_Alt_TASKS_summary()
	{
	    $db = JFactory::getDBO();
		$rfp_id = JRequest::getVar('rfp_id','');
		$user = JFactory::getUser();
		$sql = 'SELECT task_id,rfp_id,linetaskname,is_req_taskvendors FROM #__cam_rfpsow_linetask WHERE rfp_id = '.$rfp_id ;
		$db->Setquery($sql);
		$TASK_details = $db->loadObjectList();
		// "<pre>"; print_r($TASK_details);
		  for($p=0; $p<count($TASK_details); $p++) //to get task price
		  {
		   $price_sql = 'SELECT LP.id,LP.item_id,LP.item_price,LP.vendor_id FROM #__cam_vendor_proposals as VP LEFT JOIN #__cam_rfpsow_docs_lineitems_prices as LP ON VP.proposedvendorid = LP.vendor_id  WHERE LP.item_type="task" AND LP.item_id = '.$TASK_details[$p]->task_id .' AND LP.rfp_id=VP.rfpno AND LP.Alt_bid = "yes" AND VP.Alt_bid = "yes"'; 
		  $db->Setquery($price_sql);
		  $price = $db->loadObjectList();
		  $TASK_details[$p]->task_price = $price;
		  } 
		   for($p=0; $p<count($TASK_details); $p++) //to get task price
		  {
		   $price_sql = 'SELECT LP.id,LP.task_id,LP.upload_doc,LP.vendor_id FROM #__cam_vendor_proposals as VP LEFT JOIN #__cam_rfpsow_uploadfiles as LP ON VP.proposedvendorid = LP.vendor_id  WHERE LP.spl_req ="No" AND LP.task_id = '.$TASK_details[$p]->task_id .' AND LP.rfp_id=VP.rfpno AND LP.Alt_bid = "yes" AND VP.Alt_bid = "yes"'; 
		  $db->Setquery($price_sql);
		  $vendor_uploads = $db->loadObjectList();
			 for($i=0; $i<count($vendor_uploads); $i++)
			{
				 $arr = explode('/',$vendor_uploads[$i]->upload_doc);
				 $cnt = count($arr);
				 $vendor_uploads[$i]->title = $arr[$cnt-1];
				 $link = '<a style="color:#7AB800; text-decoration:none;" href="'.JURI::root().'index.php?option=com_camassistant&controller=vendors&task=view_upld_cert&folder_type=uploaded_by_VENDOR&filename='.$vendor_uploads[$i]->title.'">'.$vendor_uploads[$i]->title.'</a>';
				 $vendor_uploads[$i]->title = $link;
			} 
		  $TASK_details[$p]->vendor_uploads = $vendor_uploads;
		  
		  } 
		//exit;
		// echo "<pre>"; print_r($TASK_details); exit;
		 return $TASK_details;
	
	 }
	 
	 //function to get rfp creator tasks list
	 function get_rfpcreator_tasks()
	 {
	    $db = JFactory::getDBO();
		$rfp_id = JRequest::getVar('rfp_id','');
		$user = JFactory::getUser();
		$sql = 'SELECT task_id,rfp_id,task_desc,taskuploads  FROM #__cam_rfpsow_linetask WHERE rfp_id = '.$rfp_id ;
		$db->Setquery($sql);
		$tasks_list = $db->loadObjectList();
		for($i=0; $i<count($tasks_list); $i++)
		{
			 $arr = explode('/',$tasks_list[$i]->taskuploads);
			 $cnt = count($arr);
			 $tasks_list[$i]->title = $arr[$cnt-1];
			 $link = '<a style="color:#21314d; text-decoration:none" href="'.JURI::root().'index.php?option=com_camassistant&controller=vendors&task=view_upld_cert&folder_type=uploaded_by_CAM&filename='.$tasks_list[$i]->title.'">'.$tasks_list[$i]->title.'</a>';
			 $tasks_list[$i]->title = $link;
		} 
		return $tasks_list;
	 }
	 
	   //function to get RFP 'Add Exception' info of vendor
	function get_EXCEPTION_summary()
	{
	    $db = JFactory::getDBO();
		$rfp_id = JRequest::getVar('rfp_id','');
		$user = JFactory::getUser();
		$sql = 'SELECT task_id,rfp_id FROM #__cam_rfpsow_linetask WHERE rfp_id = '.$rfp_id ;
		$db->Setquery($sql);
		$EXCEPTION_details = $db->loadObjectList();
		//echo "<pre>"; print_r($TASK_details);
		  for($p=0; $p<count($EXCEPTION_details); $p++) //to get task price
		  {
		  $price_sql = 'SELECT VE.add_exception,VE.vendor_id FROM #__cam_vendor_proposals as VP LEFT JOIN #__cam_rfpsow_addexception as VE ON VP.proposedvendorid = VE.vendor_id  WHERE VE.spl_req="No" AND VE.task_id = '.$EXCEPTION_details[$p]->task_id.' AND VE.rfp_id=VP.rfpno AND VE.Alt_bid != "yes" '  ;
		  $db->Setquery($price_sql);
		  $notes = $db->loadObjectList();
		  $EXCEPTION_details[$p]->task_exception = $notes;
		  } 
		 //echo "<pre>"; print_r($EXCEPTION_details); exit;
		 return $EXCEPTION_details;
	 }
	 
	    //function to get RFP 'Add Exception' info of vendor
	function get_Alt_EXCEPTION_summary()
	{
	    $db = JFactory::getDBO();
		$rfp_id = JRequest::getVar('rfp_id','');
		$user = JFactory::getUser();
		$sql = 'SELECT task_id,rfp_id FROM #__cam_rfpsow_linetask WHERE rfp_id = '.$rfp_id ;
		$db->Setquery($sql);
		$EXCEPTION_details = $db->loadObjectList();
		//echo "<pre>"; print_r($TASK_details);
		  for($p=0; $p<count($EXCEPTION_details); $p++) //to get task price
		  {
		  $price_sql = 'SELECT VE.add_exception,VE.vendor_id FROM #__cam_vendor_proposals as VP LEFT JOIN #__cam_rfpsow_addexception as VE ON VP.proposedvendorid = VE.vendor_id  WHERE VE.spl_req="No" AND VE.task_id = '.$EXCEPTION_details[$p]->task_id.' AND VE.rfp_id=VP.rfpno AND VE.Alt_bid = "yes" '  ;
		  $db->Setquery($price_sql);
		  $notes = $db->loadObjectList();
		  $EXCEPTION_details[$p]->task_exception = $notes;
		  } 
		 //echo "<pre>"; print_r($EXCEPTION_details); exit;
		 return $EXCEPTION_details;
	 }
	 
	 //function to get RFP 'Add Notes' info of vendor
	function get_NOTES_summary()
	{
	    $db = JFactory::getDBO();
		$rfp_id = JRequest::getVar('rfp_id','');
		$user = JFactory::getUser();
		$sql = 'SELECT task_id,rfp_id FROM #__cam_rfpsow_linetask WHERE rfp_id = '.$rfp_id ;
		$db->Setquery($sql);
		$NOTES_details = $db->loadObjectList();
		//echo "<pre>"; print_r($TASK_details);
		  for($p=0; $p<count($NOTES_details); $p++) //to get task price
		  {
		   $price_sql = 'SELECT VN.add_notes,VN.vendor_id FROM #__cam_vendor_proposals as VP LEFT JOIN #__cam_rfpsow_addnotes as VN ON VP.proposedvendorid = VN.vendor_id  WHERE VN.spl_req="No" AND VN.task_id = '.$NOTES_details[$p]->task_id.' AND VN.rfp_id=VP.rfpno AND VN.Alt_bid != "yes" AND VP.Alt_bid != "yes"'  ;
		  $db->Setquery($price_sql);
		  $notes = $db->loadObjectList();
		  $NOTES_details[$p]->task_notes = $notes;
		  } 
		  //echo "<pre>"; print_r($NOTES_details); 
		 return $NOTES_details;
	
	 }
	 
	  //function to get RFP 'Add Notes' info of vendor
	function get_Alt_NOTES_summary()
	{
	    $db = JFactory::getDBO();
		$rfp_id = JRequest::getVar('rfp_id','');
		$user = JFactory::getUser();
		$sql = 'SELECT task_id,rfp_id FROM #__cam_rfpsow_linetask WHERE rfp_id = '.$rfp_id ;
		$db->Setquery($sql);
		$NOTES_details = $db->loadObjectList();
		//echo "<pre>"; print_r($TASK_details);
		  for($p=0; $p<count($NOTES_details); $p++) //to get task price
		  {
		   $price_sql = 'SELECT VN.add_notes,VN.vendor_id FROM #__cam_vendor_proposals as VP LEFT JOIN #__cam_rfpsow_addnotes as VN ON VP.proposedvendorid = VN.vendor_id  WHERE VN.spl_req="No" AND VN.task_id = '.$NOTES_details[$p]->task_id.' AND VN.rfp_id=VP.rfpno AND VN.Alt_bid = "yes" AND VP.Alt_bid = "yes"'  ;
		  $db->Setquery($price_sql);
		  $notes = $db->loadObjectList();
		  $NOTES_details[$p]->task_notes = $notes;
		  } 
		  //echo "<pre>"; print_r($NOTES_details); 
		 return $NOTES_details;
	
	 }
	 
	 function get_DOCS_summary()
	 {
	    $db = JFactory::getDBO();
		$rfp_id = JRequest::getVar('rfp_id','');
		$user = JFactory::getUser();
		$sql = 'SELECT * FROM #__cam_rfpsow_docs WHERE rfp_id = '.$rfp_id ;
		$db->Setquery($sql);
		$DOCS_details = $db->loadObjectList();
		 
			for($i=0; $i<count($DOCS_details); $i++)
			{
			 $arr = explode('/',$DOCS_details[$i]->doc_path);
			 $cnt = count($arr);
			 $DOCS_details[$i]->title = $arr[$cnt-1];
			 $sql = 'SELECT LP.id,LP.item_id,LP.item_price,LP.vendor_id FROM #__cam_vendor_proposals as VP LEFT JOIN #__cam_rfpsow_docs_lineitems_prices as LP ON VP.proposedvendorid = LP.vendor_id  WHERE LP.item_type="doc" AND LP.item_id = '.$DOCS_details[$i]->doc_id .' AND LP.rfp_id=VP.rfpno  AND LP.Alt_bid != "yes" AND VP.Alt_bid != "yes"'; 
			 //$sql = 'SELECT item_price FROM #__cam_rfpsow_docs_lineitems_prices WHERE rfp_id = '.$rfp_id.' AND item_type="doc" AND item_id='.$DOCS_details[$i]->doc_id;
			$db->Setquery($sql);
			$price = $db->loadObjectList();
			$DOCS_details[$i]->doc_price = $price;
			}
			//echo "<pre>"; print_r($DOCS_details); 
		 return $DOCS_details;
	 }
	 
	 //function to show splrequirements details
	  function get_SPLReq_Category()
	 {
	  $db = JFactory::getDBO();
	  $rfp_id = JRequest::getVar('rfp_id','');
	  $sql = " SELECT * FROM jos_cam_rfpreq_categories where req_parentid=0";
	  $db->Setquery($sql);
	  $categories = $db->loadObjectList();
	  return $categories;
	 }
	 
	 function get_vendors_cnt()
	 {
	 	$rfp_id = JRequest::getVar('rfp_id','');
	 	$db = JFactory::getDBO();
	 	$sql = "SELECT proposedvendorid FROM #__cam_vendor_proposals  WHERE rfpno=".$rfp_id." AND  proposaltype='Submit' AND Alt_bid != 'yes'";
		$db->Setquery($sql);
		$vendor_ids = $db->loadObjectList();
		return $vendor_ids;
	 }
	 /* get_vendors_cnt_award() for award proposals --  anil_23-08-2011 */
	 function get_vendors_cnt_award()
	 {
	 	$rfp_id = JRequest::getVar('rfp_id','');
	 	$db = JFactory::getDBO();
	 	$sql = "SELECT proposedvendorid FROM #__cam_vendor_proposals  WHERE rfpno=".$rfp_id." AND Alt_bid != 'yes'";
		$db->Setquery($sql);
		$vendor_ids = $db->loadObjectList();
		return $vendor_ids;
	 }
	 
	 function get_SPLRequirements()
	 {
		  $db = JFactory::getDBO();
		  $rfp_id = JRequest::getVar('rfp_id','');
		  $user = JFactory::getUser();
		  $sql = " SELECT b.req_parentid as main_id, a.req_title as main_title FROM jos_cam_rfpreq_categories as a , jos_cam_rfpreq_info as b  WHERE a.req_id = b.req_parentid 	 and b.rfp_id = ".$rfp_id."   group by b.req_parentid order by b.req_parentid "; 
		  $db->Setquery($sql);
		  $main_cat = $db->loadObjectList($main_cat);
		  $SPLRequirements_details['main'] = $main_cat;
		 $sql = " SELECT b.req_parentid as main_id, b.req_subparentid as sub_id, a.req_title as sub_title FROM jos_cam_rfpreq_categories as a , jos_cam_rfpreq_info as b  WHERE a.req_id = b.req_subparentid and b.rfp_id = ".$rfp_id." AND  req_subparentid != 0  group by b.req_subparentid order by b.req_parentid ";
		  $db->Setquery($sql);
		  $sub_cat = $db->loadObjectList();
		  $SPLRequirements_details['sub'] = $sub_cat;
		  $sql = " SELECT b.req_parentid as main_id, b.req_subparentid as sub_id, b.req_id as child_id, a.req_title as child_title, b.price FROM jos_cam_rfpreq_categories as a , jos_cam_rfpreq_info as b  WHERE a.req_id = b.req_id and b.rfp_id = ".$rfp_id." AND b.req_parentid != 0 AND req_subparentid != 0  order by b.req_parentid ";
		  $db->Setquery($sql);
		  $child = $db->loadObjectList();
		  //echo "<pre>"; print_r($child);
		  //$sql = " SELECT b.req_parentid as main_id, b.req_subparentid as sub_id, b.req_id as child_id, a.req_title as child_title,c.amount FROM jos_cam_rfpreq_categories as a LEFT JOIN jos_cam_rfpreq_info as b ON a.req_id = b.req_id LEFT JOIN #__cam_rfpsow_splreq_price c ON a.req_id = c.req_id WHERE a.req_id = b.req_id and b.rfp_id = ".$rfp_id." AND b.req_parentid != 0 AND req_subparentid != 0 AND c.vendor_id = ".$user->id."  order by b.req_parentid ";
		 
		 /* for($y=0; $y<count($vendor_ids); $y++)
		  {
			  for($x=0; $x<count($child); $x++)
			  {
			  if($child[$x]->child_id == 8 || $child[$x]->child_id == 9)
			  {
				  echo $sql = "SELECT amount FROM  #__cam_rfpsow_splreq_price WHERE req_id = ".$child[$x]->child_id." AND rfp_id = ".$rfp_id." AND vendor_id = ".$vendor_ids[$y]->proposedvendorid ; echo "<br/>";
				  $db->Setquery($sql);
				  $amount = $db->loadResult();
				  $child[$x]->vendor_id = $vendor_ids[$y]->proposedvendorid;
				  $child[$x]->amount = $amount; 
				  echo "<pre>"; print_r($child);
			  }
			  }
			  exit;
		  } */
		 // echo "<pre>"; print_r($child);
		   $SPLRequirements_details['child'] = $child;
		   return $SPLRequirements_details;
	   }

}
?>