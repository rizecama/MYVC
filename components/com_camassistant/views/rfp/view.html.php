<?php
/**
 * @version		1.0.0 camassistant $
 * @package		camassistant
 * @copyright	Copyright Â© 2010 - All rights reserved.
 * @license		GNU/GPL
 * @author		
 * @author mail	nobody@nobody.com
 *
 *
 * @MVC architecture generated by MVC generator tool at http://www.alphaplug.com
 */

// no direct access
defined('_JEXEC') or die('Restricted access');

jimport( 'joomla.application.component.view' );

//class rfpViewRfp extends Jview
class rfpViewrfp extends Jview
{
	function display($tpl = null){ 
		global $mainframe;
		$user = JFactory::getUser();
		$model=$this->getModel('rfp');
		
			// Getting countries list
		$states = & $this->get( 'states' );
		$this->assignRef('states',	$states);
		//Completed
		
		/*echo "--<pre>";
		print_r($tax_ids);exit;*/
		$task = JRequest::getVar("task",'');
		$pathway  =& $mainframe->getPathway();	
		if($task=='addproperty') {
		//For Company id
		$company_id=$model->getCompanyID($user->id);
		$this->assignRef('company_id',$company_id);
		/*$taxids=$model->getProperty_TaxIDs();
		$this->assignRef('taxids',$taxids);
		$tax_ids=array();
		for($i=0;$i<count($taxids);$i++)
		$tax_ids[$i]=$taxids[$i]->tax_id;*/
		$this->setLayout('property_form');
		}else if($task=='cancelrfp') {
		$this->setLayout('cancelrfp_form');
		}else if($task=='pop_linetasks') {
		$this->setLayout('pop_linefields');
		/*$model = $this->getModel('rfp');
		$getindustires = $model->getindustires(); 
		$this->assignRef('industries',$getindustires);*/
		} else if($task=='saverfpmsg1') {
		$items  = $model->getinhouse(); 
		$this->assignRef('items',$items);
		$allitems  = $model->getallitems();
		
		$this->assignRef('allitems',$allitems);
		$corporate = $model->getcorporatevendors();
		
		$this->assignRef('corporate',$corporate);	
		$statelist = $model->getstatelist();
		$allsponsores  = $model->getsponsorvendors();
		$this->assignRef('sponsor',$allsponsores);
		$this->assignRef('statelist',$statelist);
		$indus = $model->getallindustries(); 
		$this->assignRef('industries',$indus);
		$ownids = $model->ownpreferredvendors(); 
		$this->assignRef('ownprefs',$ownids);
		$getpropertyownermanagers = $model->propertyownermangersvendors(); 
		$this->assignRef('allmanagers',$getpropertyownermanagers);
		$linkedmanagerids = $model->linkedmanagerids(); 
		$this->assignRef('linkedmanagers',$linkedmanagerids);
	
		$othereligible = $model->getothervendors(); 
		$this->assignRef('others',$othereligible);
		$globals = $model->getmasterglobals(); 
		$this->assignRef('globals',$globals);
		
		$rfp_stand = $model->getallstandardsrfp(); 
		$this->assignRef('rfp_stand',$rfp_stand);
		
		$rfpid = JRequest::getVar('rfpid','');
		$rfp_data = $model->getrfpinfo($rfpid); 
		$this->assignRef('rfp_data',$rfp_data);
		$blockedvendors = $model->getblockedvendors();
		$this->assignRef('blockedvendors',$blockedvendors);
		if( $user->user_type == '16' )
		$this->setLayout('propertywoner_saverfpmsg');
		else
		$this->setLayout('saverfpmsg');
		//$this->setLayout('saverfpmsg');
		 /*?>modified by anand kumar 25-7-11<?php */
		} else if($task=='shareinfo') {
		  $month = array(0 => 'Show', 1=> 'Hide');
		   $options = array();
  /*?>modified by anand kumar 25-7-11<?php */
  foreach($month as $key=>$value) :
    ## Create $value ##
    $options[] = JHTML::_('select.option', $key, $value);
  endforeach;
	$db=& JFactory::getDBO();
$user=& JFactory::getUser();
$sql12="SELECT * FROM  #__users where id='".$user->id."'";

$db->Setquery($sql12);
$share= $db->loadobject(); 
$phone = JHTML::_('select.radiolist',  $options, 'phone', 'class="inputbox"', 'value', 'text', $share->showphone);
$company = JHTML::_('select.radiolist', $options, 'company', 'class="inputbox"', 'value', 'text', $share->showcompany);
$address = JHTML::_('select.radiolist', $options, 'address', 'class="inputbox"', 'value', 'text', $share->showaddress);
$fax = JHTML::_('select.radiolist', $options, 'fax', 'class="inputbox"', 'value', 'text', $share->showfax);
$email = JHTML::_('select.radiolist', $options, 'email', 'class="inputbox"', 'value', 'text', $share->showemail);

	    $this->assignRef('phone',$phone);
		$this->assignRef('company',$company);
		$this->assignRef('address',$address);
		$this->assignRef('fax',$fax);
		$this->assignRef('email',$email);
		$this->setLayout('infoshare');

		
		} else if($task=='pro_hired') {
		$this->setLayout('pro_hired');
		$db=& JFactory::getDBO();
		
		          $sql12="SELECT industry_name FROM  #__cam_industries where id='".$_GET[industry_id]."'";
					$db->Setquery($sql12);
					$industry = $db->loadResult(); 
				 $sql12="SELECT * FROM #__cam_property  where id='".$_GET[property_id]."'";
					$db->Setquery($sql12);
					$property = $db->loadobject(); 		
									
		       $sql12="SELECT introtext  FROM #__content where id='153' ";
					$db->Setquery($sql12);
					$data12 = $db->loadResult(); 
					$bodytext = str_replace('{Customer Name}',$my->name,$data12);
					$bodytext = str_replace('{CAM Firm}','Cam Assitant',$bodytext);
					$bodytext = str_replace('{Property Name}',$property->property_name,$bodytext);
					$bodytext = str_replace('{PROPERTY}',$property->property_name,$bodytext);
					$bodytext = str_replace('{PROPERTY ADDRESS}',$property->street.','.$property->city.','.$property->state,$bodytext); 
					$bodytext = str_replace('{INDUSTRY}',$industry,$bodytext);
					$bodytext = str_replace('{GENERAL PROJECT INFORMATION}','',$bodytext); 
  
		$this->assignRef('bodytext',$bodytext);
		$this->setLayout('pro_hired');
		
		
			} else if($task=='pro_hired_camassitant') {
				$db=& JFactory::getDBO();
		
		          $sql12="SELECT industry_name FROM  #__cam_industries where id='".$_GET[industry_id]."'";
					$db->Setquery($sql12);
					$industry = $db->loadResult(); 
				 $sql12="SELECT * FROM #__cam_property  where id='".$_GET[property_id]."'";
					$db->Setquery($sql12);
					$property = $db->loadobject(); 
			
			       $sql12="SELECT introtext  FROM #__content where id='153' ";
					$db->Setquery($sql12);
					$data12 = $db->loadResult(); 
		      		$bodytext = str_replace('{Customer Name}',$my->name,$data12);
					$bodytext = str_replace('{CAM Firm}','Cam Assitant',$bodytext);
					$bodytext = str_replace('{Property Name}',$property->property_name,$bodytext);
					$bodytext = str_replace('{PROPERTY}',$property->property_name,$bodytext);
					$bodytext = str_replace('{PROPERTY ADDRESS}',$property->street.','.$property->city.','.$property->state,$bodytext); 
					$bodytext = str_replace('{INDUSTRY}',$industry,$bodytext);
					$bodytext = str_replace('{GENERAL PROJECT INFORMATION}','',$bodytext); 
  
		$this->assignRef('bodytext',$bodytext);
				
			//$model=$this->getModel('rfp');
			$list=$model->getIndustry();
		$list[0] = new stdClass();
		$list[0]->value = "";
		$list[0]->text = "-Select Industry-";
		$req_parent_id=0;
	    $this->assignRef('industryList',$list);
        $this->assignRef('bodytext',$bodytext);
		$this->setLayout('pro_hired_camassitant');
			
		
		}elseif($task=='linetaskupload') {
	$user=& JFactory::getUser();
	$db=& JFactory::getDBO();
   $sql12="SELECT sdocTitle,sdocTitle,docPath FROM  #__cam_propertydocs where property_manager_id='".$user->id."'";
	$db->Setquery($sql12);
	$files = $db->loadResult(); 

			
		$this->assignRef('files',$files);
		$this->assignRef('folders',$data['folders']);
		$this->setLayout('line_task_upload');
		
		} else if($task=='sow_hired') {
	$db=& JFactory::getDBO();
		
			         $sql12="SELECT industry_name FROM  #__cam_industries where id='".$_GET[industry_id]."'";
					$db->Setquery($sql12);
					$industry = $db->loadResult(); 
				 $sql12="SELECT * FROM #__cam_property  where id='".$_GET[property_id]."'";
					$db->Setquery($sql12);
					$property = $db->loadobject(); 
			
		
	       $sql12="SELECT introtext  FROM #__content where id='153' ";
					$db->Setquery($sql12);
					$data12 = $db->loadResult(); 
				$bodytext = str_replace('{Customer Name}',$my->name,$data12);
					$bodytext = str_replace('{CAM Firm}','Cam Assitant',$bodytext);
					$bodytext = str_replace('{Property Name}',$property->property_name,$bodytext);
					$bodytext = str_replace('{PROPERTY}',$property->property_name,$bodytext);
					$bodytext = str_replace('{PROPERTY ADDRESS}',$property->street.','.$property->city.','.$property->state,$bodytext); 
					$bodytext = str_replace('{INDUSTRY}',$industry,$bodytext);
					$bodytext = str_replace('{GENERAL PROJECT INFORMATION}','',$bodytext); 
			
		   $this->assignRef('bodytext',$bodytext);
		$this->setLayout('sow_hired');
		
		} else if($task=='editrfp') {
			$document=& JFactory::getDocument();
			if($_REQUEST['show']==1)
			$document->setTitle('Create RFP');
			else
			$document->setTitle('Edit RFP');
			//$model=$this->getModel('rfp');
			//For Properties List
			$rfpinfo=$model->getrfpinfo($_GET[rfpid]);
			$rfplinetasks=$model->rfplinetasks($rfpinfo->id);
			$rfpuploadfiles=$model->rfpuploadfiles($rfpinfo->id);
			$rfpreqinfo=$model->rfpreqinfo($rfpinfo->id);
		
			
			$userinfo=$model->userinfo();
			$rows=$model->getProperties();
			//$row1[0] = new stdClass();
			$row1[0]->value = "";
			$row1[0]->text = "-Select Property-";
			$row1[1]->value = 'addp';
			$row1[1]->text = "Add Property";
			$rows=array_merge($row1,$rows);
			$this->assignRef('propertyList',$rows);
			//For Industries List
			$list=$model->getIndustry();
			$list1[0] = new stdClass();
			$list1[0]->value = "";
			$list1[0]->text = "-Select Industry-";
			$list=array_merge($list1,$list);
			$req_parent_id=0;
			$reqCatList=$model->getSplRequiremntCats($req_parent_id);
			$Edit_reqCatList=$model->get_Edit_SplRequiremntCats();
			$SPLReq_Category = $model->get_Edit_SPLReq_Category();
			$this->assignRef('SPLReq_Category',$SPLReq_Category);
			
			$this->assignRef('rfpinfo',$rfpinfo);
			$this->assignRef('rfpuploadfiles',$rfpuploadfiles);
			$this->assignRef('rfplinetasks',$rfplinetasks);
			$this->assignRef('rfpreqinfo',$rfpreqinfo);
			$this->assignRef('industryList',$list);
			$this->assignRef('reqCatList',$reqCatList);
			$this->assignRef('Edit_reqCatList',$Edit_reqCatList);
			$this->assignRef('userinfo',$userinfo);
			
			//To get the special requirements
			$w9d = $model->getw9document($rfpinfo->id);
			$this->assignRef('w9d',$w9d);
			$general_ins = $model->getgeneralins($rfpinfo->id);
			$this->assignRef('general_ins',$general_ins);
			$auto_ins = $model->getautoins($rfpinfo->id);
			$this->assignRef('auto_ins',$auto_ins);
			$work_ins = $model->getworkersins($rfpinfo->id);
			$this->assignRef('work_ins',$work_ins);
			$umb_ins = $model->getumbins($rfpinfo->id);
			$this->assignRef('umb_ins',$umb_ins);
			$lic_ins = $model->getlicins($rfpinfo->id);
			$this->assignRef('lic_ins',$lic_ins);
			$omi_ins = $model->getomiins($rfpinfo->id);
			$this->assignRef('omi_ins',$omi_ins);
			//To get special requirements for old active rfps
			$old_license = $model->getspecialrequirements_activelicense($rfpinfo->id);			
			$this->assignRef('old_license',$old_license);
			$old_workers = $model->getspecialrequirements_activeworkers($rfpinfo->id);			
			$this->assignRef('old_workers',$old_workers);
			$master = $model->getmasterfirmaccount();			
			$this->assignRef('master',$master);
			$getpropertyowneryinfo = $model->getpropertyowneryinfo(); 
			$this->assignRef('propertyowneryinfo',$getpropertyowneryinfo);
			//Completed
			//Completed
			$job = JRequest::getVar('job','');
			if($job == 'basic'){
			$bascifiles = $model->bascifiles();			
			$this->assignRef('bascifiles',$bascifiles);
			}
			if($job == 'basic'){
			$this->setLayout('edit_rfp_form_basic');
			}
			else{			
			$this->setLayout('edit_rfp_form');
			}
		} else if($task=='reviewrfp') {
			$document=& JFactory::getDocument();
			$document->setTitle('Review Rfp');
			//For Properties List
			$rfpinfo=$model->getrfpinfo($_GET[rfpid]);
			
			$rfplinetasks=$model->rfplinetasks($rfpinfo->id);
			$rfpuploadfiles=$model->rfpuploadfiles($rfpinfo->id);
			//$rfpreqinfo=$model->rfpreqinfo($rfpinfo->id);
			
			
			$userinfo=$model->userinfo();

			$rows=$model->getProperties();
			$row1[0] = new stdClass();
			$row1[0]->value = "";
			$row1[0]->text = "-Select Property-";
			$rows=array_merge($row1,$rows);
			$this->assignRef('propertyList',$rows);
			//For Industries List
			$list=$model->getIndustry();
			$list1[0] = new stdClass();
			$list1[0]->value = "";
			$list1[0]->text = "-Select Industry-";
			$list=array_merge($list1,$list);
			$req_parent_id=0;
			$Review_reqCatList=$model->get_Review_SplRequiremntCats();
			$this->assignRef('Review_reqCatList',$Review_reqCatList);
			//function to get RFP Docs details
			$DOCS_details = $model->get_DOCSinfo();
			$this->assignRef('DOCS_details',$DOCS_details);
			$this->assignRef('rfpinfo',$rfpinfo);
			$this->assignRef('propertyname',$model->getPropertyName($rfpinfo->property_id));		
			$this->assignRef('industryname',$model->getIndustryname($rfpinfo->industry_id));		
			$this->assignRef('industryname2',$model->getIndustryname2($rfpinfo->industry_id2));		
			$this->assignRef('rfpuploadfiles',$rfpuploadfiles);
			$this->assignRef('rfplinetasks',$rfplinetasks);
			$this->assignRef('industryList',$list);
			//To get the invite vendors
			$invitations = $model->getinvitevendor($rfpinfo->id);
			$this->assignRef('invitations',$invitations);
			$invitations_type = $model->getinvitevendor_type($rfpinfo->id);
			$this->assignRef('invitations_type',$invitations_type);
			//Completed
			$this->assignRef('userinfo',$userinfo);
			
			//To get the special requirements
			$w9d = $model->getw9document($rfpinfo->id);
			$this->assignRef('w9d',$w9d);
			$general_ins = $model->getgeneralins($rfpinfo->id);
			$this->assignRef('general_ins',$general_ins);
			$auto_ins = $model->getautoins($rfpinfo->id);
			$this->assignRef('auto_ins',$auto_ins);
			$work_ins = $model->getworkersins($rfpinfo->id);
			$this->assignRef('work_ins',$work_ins);
			$umb_ins = $model->getumbins($rfpinfo->id);
			$this->assignRef('umb_ins',$umb_ins);
			$lic_ins = $model->getlicins($rfpinfo->id);
			$this->assignRef('lic_ins',$lic_ins);
			$omi_ins = $model->getomiins($rfpinfo->id);
			$this->assignRef('omi_ins',$omi_ins);
			//To get special requirements for old active rfps
			$old_license = $model->getspecialrequirements_activelicense($rfpinfo->id);			
			$this->assignRef('old_license',$old_license);
			$old_workers = $model->getspecialrequirements_activeworkers($rfpinfo->id);			
			$this->assignRef('old_workers',$old_workers);
			$globals = $model->getmasterglobals(); 
			$this->assignRef('globals',$globals);
			
			$rfp_stand = $model->getallstandardsrfp(); 
			$this->assignRef('rfp_stand',$rfp_stand);
			$getpropertyowneryinfo = $model->getpropertyowneryinfo(); 
			$this->assignRef('propertyowneryinfo',$getpropertyowneryinfo);
		
			//Completed
			
			$job = JRequest::getVar('job','');
			if($job == 'basic'){
			$bascifiles = $model->bascifiles();			
			$this->assignRef('bascifiles',$bascifiles);
			$invitations_basic = $model->getinvitevendor_basic($rfpinfo->id);
			$this->assignRef('invitations_basic',$invitations_basic);
			}
			
			if($job == 'basic'){
			$this->setLayout('reviewrfp_basic');
			}
			else {
			$this->setLayout('reviewrfp');
			}
	//By sateesh for getting special requirements
			//$SPLReq_Category = $model->get_SPLReq_Category();
			//$this->assignRef('SPLReq_Category',$SPLReq_Category);
	// Completed		
		 } else if($task == 'upload_select')
		{
			//$model = $this->getModel('rfp');
			//$vendor_files = $model->getvendordocs();
			//$this->assignRef('vendor_files', $vendor_files);
			//$taxid = $model->getvendortaxid(); 
			//$this->assignRef('taxid', $taxid);
			$this->setLayout('uploadfile_form');
			parent::display();
		
                } else if($task == 'Uploadfile')
		{
		$this->setLayout('task_uploadfile_form'); 
		parent::display();
		}
		else if($task == 'successinvites'){
		$this->setLayout('successpreferred'); 
		}
		else if($task == 'getcompliance'){
		$rfpid = JRequest::getVar("rfpid",'');
		$vendorid = JRequest::getVar("vendorid",'');
		
		$w9_compliane = $model->getw9insdata_compliant($rfpid);
		$this->assignRef('w9_compliane',$w9_compliane);
		
		$gli_compliane = $model->getgeneralinsdata_compliant($rfpid);
		$this->assignRef('gli_compliane',$gli_compliane);
		$aip_compliane = $model->getautoinsdata_compliant($rfpid);
		$this->assignRef('aip_compliane',$aip_compliane);
		$wci_compliane = $model->getworkinsdata_compliant($rfpid);
		$this->assignRef('wci_compliane',$wci_compliane);
		$umb_compliane = $model->getumbrellainsdata_compliant($rfpid);
		$this->assignRef('umb_compliane',$umb_compliane);
		$lic_compliane = $model->getlicinsdata_compliant($rfpid);
		$this->assignRef('lic_compliane',$lic_compliane);
		$omi_compliane = $model->getomiinsdata_compliant($rfpid);
		$this->assignRef('omi_compliane',$omi_compliane);
		
		$w9_vendor = $model->getvendorw9insdata_second($vendorid);
		$this->assignRef('w9_vendor',$w9_vendor);
		$gli_vendor = $model->getvendorgeneralinsdata_second($vendorid);
		$this->assignRef('gli_vendor',$gli_vendor);
		$aip_vendor = $model->getvendorautoinsdata_second($vendorid);
		$this->assignRef('aip_vendor',$aip_vendor);
		$wci_vendor = $model->getvendorworkinsdata_second($vendorid);
		$this->assignRef('wci_vendor',$wci_vendor);
		$umb_vendor = $model->getvendorumbrellainsdata_second($vendorid);
		$this->assignRef('umb_vendor',$umb_vendor);
		$lic_vendor = $model->getvendorlicinsdata_second($vendorid);
		$this->assignRef('lic_vendor',$lic_vendor);
		$occ_vendor = $model->getvendoroccinsdata_second($vendorid);
		$this->assignRef('occ_vendor',$occ_vendor);
		$omi_vendor = $model->getvendoromiinsdata_second($vendorid);
		$this->assignRef('omi_vendor',$omi_vendor);
		
		$vname = $model->getvendorcompanyname($vendorid);
		$this->assignRef('vname',$vname);
		$terms = $model->gettermsandconditions($vendorid);
		$this->assignRef('terms',$terms);
		$industry = $model->getrfpindustryname($rfpid);
		$this->assignRef('industry',$industry);
		
//		echo "<pre>"; print_r($gli_compliane); echo "</pre>" ;
//echo "<pre>"; print_r($gli_vendor); echo "</pre>" ;
//exit;
		$this->setLayout('compliancedocs'); 
		}
		
		
		else if($task == 'preferredcompliance'){
		$rfpid = JRequest::getVar("rfpid",'');
		$vendorid = JRequest::getVar("vendorid",'');
		
		$gli_compliane = $model->getgeneralinsdata_compliant($rfpid);
		$this->assignRef('gli_compliane',$gli_compliane);
		$aip_compliane = $model->getautoinsdata_compliant($rfpid);
		$this->assignRef('aip_compliane',$aip_compliane);
		$wci_compliane = $model->getworkinsdata_compliant($rfpid);
		$this->assignRef('wci_compliane',$wci_compliane);
		$umb_compliane = $model->getumbrellainsdata_compliant($rfpid);
		$this->assignRef('umb_compliane',$umb_compliane);
		$lic_compliane = $model->getlicinsdata_compliant($rfpid);
		$this->assignRef('lic_compliane',$lic_compliane);
		
		$gli_vendor = $model->getvendorgeneralinsdata_second($vendorid);
		$this->assignRef('gli_vendor',$gli_vendor);
		$aip_vendor = $model->getvendorautoinsdata_second($vendorid);
		$this->assignRef('aip_vendor',$aip_vendor);
		$wci_vendor = $model->getvendorworkinsdata_second($vendorid);
		$this->assignRef('wci_vendor',$wci_vendor);
		$umb_vendor = $model->getvendorumbrellainsdata_second($vendorid);
		$this->assignRef('umb_vendor',$umb_vendor);
		$lic_vendor = $model->getvendorlicinsdata_second($vendorid);
		$this->assignRef('lic_vendor',$lic_vendor);
//		echo "<pre>"; print_r($gli_compliane); echo "</pre>" ;
//echo "<pre>"; print_r($gli_vendor); echo "</pre>" ;
//exit;
		$this->setLayout('compliancedocs'); 
		}
		
		else if($task == 'getcompliance_active'){
		$rfpid = JRequest::getVar("rfpid",'');
		$vendorid = JRequest::getVar("vendorid",'');
		$custid = JRequest::getVar("custid",'');
		//echo $rfpid; exit;
		$from = JRequest::getVar("from",'');
		
		$w9_compliane = $model->getw9insdata_compliant_active($rfpid,$from,$custid);
		$this->assignRef('w9_compliane',$w9_compliane);
		
		$gli_compliane = $model->getgeneralinsdata_compliant_active($rfpid,$from,$custid);
		$this->assignRef('gli_compliane',$gli_compliane);
		$aip_compliane = $model->getautoinsdata_compliant_active($rfpid,$from,$custid);
		$this->assignRef('aip_compliane',$aip_compliane);
		$wci_compliane = $model->getworkinsdata_compliant_active($rfpid,$from,$custid);
		$this->assignRef('wci_compliane',$wci_compliane);
		$umb_compliane = $model->getumbrellainsdata_compliant_active($rfpid,$from,$custid);
		$this->assignRef('umb_compliane',$umb_compliane);
		$lic_compliane = $model->getlicinsdata_compliant_active($rfpid,$from,$custid);
		$this->assignRef('lic_compliane',$lic_compliane);
		$omi_compliane = $model->getomiinsdata_compliant_active($rfpid,$from,$custid);
		$this->assignRef('omi_compliane',$omi_compliane);
		
		$w9_vendor = $model->getvendorw9insdata_second($vendorid);
		$this->assignRef('w9_vendor',$w9_vendor);
		$gli_vendor = $model->getvendorgeneralinsdata_second($vendorid);
		$this->assignRef('gli_vendor',$gli_vendor);
		$aip_vendor = $model->getvendorautoinsdata_second($vendorid);
		$this->assignRef('aip_vendor',$aip_vendor);
		$wci_vendor = $model->getvendorworkinsdata_second($vendorid);
		$this->assignRef('wci_vendor',$wci_vendor);
		$umb_vendor = $model->getvendorumbrellainsdata_second($vendorid);
		$this->assignRef('umb_vendor',$umb_vendor);
		$lic_vendor = $model->getvendorlicinsdata_second($vendorid);
		$this->assignRef('lic_vendor',$lic_vendor);
		$omi_vendor = $model->getvendoromiinsdata_second($vendorid);
		$this->assignRef('omi_vendor',$omi_vendor);
		$vname = $model->getvendorcompanyname($vendorid);
		$this->assignRef('vname',$vname);
		$terms = $model->gettermsandconditions($vendorid);
		$this->assignRef('terms',$terms);
		$industry = $model->getrfpindustryname($rfpid);
		$this->assignRef('industry',$industry);
		
//echo "<pre>"; print_r($gli_vendor); echo "</pre>" ;
//exit;
		$this->setLayout('compliancedocs'); 
		}
		else if($task == 'uploadpropertypic'){
		$this->setLayout('logouploadbox');
		parent::display($tpl);
		}
		else if($task == 'getrfptype'){
		$this->setLayout('select_rfptype');
		parent::display($tpl);
		}
		else if($task == 'invited_basicrfp' ){
		$properties = $model->getallproperties();
		$this->assignRef('properties',$properties);
		if( $user->user_type == '16' )
		$this->setLayout('propertywoner_creation_basic');
		else
		$this->setLayout('creation_basic');
		$getindustires = $model->getallindustries(); 
		$this->assignRef('industries',$getindustires);
		//parent::display($tpl);
		}
		
		
		else{
		$pathway->addItem( JText::_( 'Create A RFP' ));
		//For Properties List
		$userinfo=$model->userinfo();
		
		$propertyowneryinfo = $model->getpropertyowneryinfo();
		$this->assignRef('prouserinfo',$propertyowneryinfo);
		$rows=$model->getProperties();
		$row1[0] = new stdClass();
		$row1[0]->value = "";
		$row1[0]->text = "-Select Property-";
		$row1[1]->value = 'addp';
		$row1[1]->text = "Add Property";
		$rows=array_merge($row1,$rows);
		$this->assignRef('propertyList',$rows);
		//For Industries List
		$list=$model->getIndustry();
		$list1[0] = new stdClass();
		$list1[0]->value = "";
		$list1[0]->text = "-Select Industry-";
		$list=array_merge($list1,$list);
		$req_parent_id=0;
		$reqCatList=$model->getSplRequiremntCats($req_parent_id);
		
		$this->assignRef('industryList',$list);
		$this->assignRef('reqCatList',$reqCatList);
		$this->assignRef('userinfo',$userinfo);
		$this->setLayout('rfp_form');
		}
		parent::display($tpl);

	}

}
?>