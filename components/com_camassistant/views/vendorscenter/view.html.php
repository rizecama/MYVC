<?php
/**
 * @version		1.0.0 camassistant $
 * @package		camassistant
 * @copyright	Copyright Â© 2010 - All rights reserved.
 * @license		GNU/GPL
 * @author		
 * @author mail	nobody@nobody.com
 *
 *
 * @MVC architecture generated by MVC generator tool at http://www.alphaplug.com
 */

// no direct access
defined('_JEXEC') or die('Restricted access');

jimport( 'joomla.application.component.view' );

class vendorscenterViewvendorscenter extends Jview
{
	function display($tpl = null){

		  global $mainframe;
		 $task = JRequest::getVar("task",'');
		 $pathway  =& $mainframe->getPathway();
		 if($task == 'specific' || $task == 'alphabet' ){
		$model  =$this->getModel('vendorscenter');
		$items  =& $this->get('inhouse');
		$this->assignRef('items',$items);
		 
		 }
		if($task == 'vendorscenter' || $task == 'basicrfp')
		{
			// Update recommendation information
			$db = JFactory::getDBO();
			$user = JFactory::getUser();
			$sql = "UPDATE #__cam_manager_recommends SET view='1' where managerid='".$user->id."'"; 
			$db->Setquery($sql);
			$db->query();
			//Completed
			$document = & JFactory::getDocument();
			$document->setTitle( JText::_('Vendor Center') );
			$model = $this->getModel('vendorscenter');
			$uri			=& JFactory::getURI();
			$model			=& $this->getModel();
			$items			=& $this->get('inhouse');
			$prefer			=& $this->get('preferred');
			$excluded		=& $this->get('excluded');
			$total			=& $this->get( 'Total');
			$pagination 	=& $this->get( 'Pagination' );
			$orderby		= ' ORDER BY '. $filter_order .' '. $filter_order_Dir .',published';
			$search 		= JRequest::getWord('search');
			$lists['vendorslist'] =& $this->get( 'vendorslist' ) ;
			$indus = $model->getallindustries(); 
			$this->assignRef('industries',$indus);
			$statelist = $model->getstatelist();
			$this->assignRef('statelist',$statelist);
			$owns = $model->ownpreferredvendors();
			$this->assignRef('own',$owns);
			$pertyownermanagers = $model->getpropertyownermanagers();
			$this->assignRef('pertyownermanagers',$pertyownermanagers);	
			
			$corporate = $model->corporatevendors();
			$this->assignRef('corporate',$corporate);	
			$firmids = $model->getcompanywidevendors();
			$this->assignRef('firmids',$firmids);
			//To get all properties
			$properties = $model->getallproperties();
			$this->assignRef('properties',$properties);
			//Completed
			// Get master global standards
			$global = $model->getmasterglobals();
			$this->assignRef('global',$global);
			//Completed
			$basisjobs = $model->getallbasicjobs();
			$this->assignRef('basisjobs',$basisjobs);
			//Get permission
			$permission = $model->getpermissionstandards();
			$this->assignRef('permission',$permission);
			//Completed
			$recommends = $model->getallrecommendations();
			$this->assignRef('recommends',$recommends);
			$managers_recs = $model->getallmanagersrecommend();
			$this->assignRef('managers_recs',$managers_recs);
			$blockedvendors = $model->getblockedvendors();
			$this->assignRef('blockedvendors',$blockedvendors);
			$corporatevendors_star = $model->corporatevendors_star();
			$this->assignRef('corporatevendors_star',		$corporatevendors_star); 
			$filter_vendorslist		= JRequest::getWord('filter_vendorslist');
			$this->assignRef('user',		JFactory::getUser());	
			$this->assignRef('lists',		$lists);    
			$this->assignRef('items',		$items); 
			$this->assignRef('prefer',		$prefer); 
			$this->assignRef('excluded',		$excluded); 
			$this->assignRef('search',		$search);		
			$this->assignRef('pagination',	$pagination);
			$this->assignRef('request_url',	$uri->toString());
			$this->assignRef('orderby',		$orderby);
			$this->assignRef('filter_vendorslist',	$filter_vendorslist);
			if( $task == 'basicrfp' )
			$this->setLayout('basic_request');
			else if( $user->user_type == '16' )
			$this->setLayout('propertyomnervendors'); 
			else
			$this->setLayout('default'); 
		}
		if($task=='vendor_info')// to display vendor info form in registation process
		{
		//echo "<pre>"; print_r($_REQUEST);
			$model = $this->getModel('vendors');
			$industries_link = $model->getindustries_link(); 
			$this->assignRef('industries_link',$industries_link);
			$post	= JRequest::get('post');
			$tax_id = $post['tax_id1'].'-'.$post['tax_id2'].'-'.$post['tax_id3'];
			$company_phone = $post['phone1'].'-'.$post['phone2'].'-'.$post['phone3'];
			$alt_phone = $post['alt_phone1'].'-'.$post['alt_phone2'].'-'.$post['alt_phone3'];
			$in_house_parent_company_FEIN = $post['IH_FED1'].'-'.$post['IH_FED2'].'-'.$post['IH_FED3'];
			$this->assignRef('company_name',$post['company_name']);
			$this->assignRef('tax_id',$tax_id);
			$this->assignRef('company_address',$post['company_address']);
			$this->assignRef('city',$post['city']);
			$this->assignRef('state',$post['states']);
			$this->assignRef('zipcode',$post['zipcode']);
			$this->assignRef('established_year',$post['established_year']);
			$this->assignRef('company_phone',$company_phone);
			$this->assignRef('phone_ext',$post['phone_ext']);
			$this->assignRef('alt_phone',$alt_phone);
			$this->assignRef('alt_phone_ext',$post['alt_phone_ext']);
			$this->assignRef('in_house_vendor',$post['in_house_vendor']);
			$this->assignRef('in_house_parent_company',$post['in_house_parent_company']);
			$this->assignRef('in_house_parent_company_FEIN',$in_house_parent_company_FEIN);
			$this->setLayout('vendor_info_form'); 
		}
		else if($task=='thanks_redirect') //to display thankyou message after vendor registration
		{
			$this->setLayout('thanks_form');
		}
		else if($task=='vendor_billing_form') //to display vendor billing form
		{
			$model = $this->getModel('vendors');
			$states = $model->getstates(); 
			$this->assignRef('states',$states);
			$this->setLayout('vendor_billing_form');
		}
		else if($task=='paypal_form') //to redirect paypal url
		{
			$this->setLayout('paypal_form');
		}
		else if($task=='vendor_billing_thankyou_form')	// to display thankyou form after paying money through paypal
		{
			$this->setLayout('vendor_billing_thankyou_form');
		}
		else if($task=='vendor_billing_failed_form') //to display failes message if paypal process is failed	
		{
			$this->setLayout('vendor_billing_failed_form');
		}
		else if($task=='industries_form')	//to display industries form in popup
		{
			$model = $this->getModel('vendors');
			$industries = $model->getindustires(); 
			$this->assignRef('industries',$industries);
			$this->setLayout('industries_form');
		}
		else if($task=='vendor_edit_form')	//to display vendor registration form for with auto populated values
		{
			$model = $this->getModel('vendors');
			$details = $model->getuserinfo();  
			$user = JFactory::getUser();
			$this->assignRef('user_id',$user->id);
			$this->assignRef('details',$details[0]);
			$this->setLayout('vendor_edit_form');
		}
		else if($task=='mail_redirect_form') // to display form after sending mail	
		{
			$this->setLayout('mail_redirect_form');
		}
		else if($task=='vendor_proposal_centre') // to list all types of vendor's bidding proposals upon login
		{
			$model = $this->getModel('vendors');
			$vendor_proposal_summary = $model->get_vendor_proposal_summary(); 
			$this->assignRef('prp_Draft_summary',$vendor_proposal_summary[0]);
			$this->assignRef('prp_Submitted_summary',$vendor_proposal_summary[1]);
			$this->assignRef('prp_Awarded_summary',$vendor_proposal_summary[2]);
			$this->assignRef('prp_Unawarded_summary',$vendor_proposal_summary[3]);
			$this->assignRef('prp_Review_summary',$vendor_proposal_summary[4]);
			$this->setLayout('vendor_proposal_centre');
		}
		else if($task == 'not_authorized')
		{
			$this->setLayout('not_authorized'); 
		} 
		else if($task=='vendorscenter_edit') 
		{
			$model  =$this->getModel('vendorscenter');
			$items  =& $this->get('vendor_edit');
			$this->assignRef('items',$items);
			$this->setLayout('vendor_editform'); 
		} 
		if($task == 'sendinvitation')
		{
		$this->setLayout('sendinvitation'); 
		}
		if($task == 'newsearch')
		{
		$model  =$this->getModel('vendorscenter');
		$states = $model->getstatelist();
		$this->assignRef('statelist',$states);
		$indus = $model->getallindustries(); 
		$this->assignRef('indus',$indus);
		//To get all properties
		$properties = $model->getallproperties();
		$this->assignRef('properties',$properties);
		$managers_recs = $model->getallmanagersrecommend();
		$this->assignRef('managers_recs',$managers_recs);
		$total_vendors = $model->total_vendors();
		$this->assignRef('total_vendors',$total_vendors);
		if( $total_vendors >= 5 )
		$this->setLayout('newsearch');
		else
		$this->setLayout('newsearch');
		}
		
		else if($task == 'preferredcompliance'){
		$model  =$this->getModel('vendorscenter');
		$vendorid = JRequest::getVar("vendorid",'');
		$this->assignRef('vendorid',$vendorid);
		$this->setLayout('compliancedocs_prefer'); 
		}
		else if($task == 'excludevendors'){
		$model  =$this->getModel('vendorscenter');
		$excludes = $model->getexcludevendors(); 
		$this->assignRef('items',$excludes);
		$indus = $model->getallindustries(); 
		$this->assignRef('industries',$indus);
		$statelist = $model->getstatelist();
		$this->assignRef('statelist',$statelist);
		$block = $model->getblockvendors(); 
		$this->assignRef('block',$block);
		$this->setLayout('excludevendors');
		
		}
		else if($task == 'getbasicrequests'){
			$model  =$this->getModel('vendorscenter');
			$basisjobs = $model->getallbasicjobs();
			$this->assignRef('basisjobs',$basisjobs);
			$this->setLayout('inviteto_basicjob');
		}
		else if($task == 'getallmanagersrecommend'){
			$model  =$this->getModel('vendorscenter');
			$managers = $model->getallmanagersrecommend();
			$this->assignRef('managers',$managers);
			$this->setLayout('recommend');
		}
		else if($task == 'getallpropertyownersrecommend'){
			$model  =$this->getModel('vendorscenter');
			$this->setLayout('managersrecommend');
		}
		
		else if($task == 'sendmail_vendors'){
			$model  =$this->getModel('vendorscenter');
			$this->setLayout('vendor_emails');
		}
		else if($task == 'vendorcodes'){
			$model  =$this->getModel('vendorscenter');
			$codes = $model->getallcodes();
			$this->assignRef('codes',$codes);
			$codes_cancel = $model->getallcancelledcodes();
			$this->assignRef('codes_cancel',$codes_cancel);
			$this->setLayout('listcodes');
		}
		else if($task == 'addcodes'){
			$model  =$this->getModel('vendorscenter');
			$this->setLayout('addcodes');
		}
		else if($task == 'editcodes'){
			$codeid = JRequest::getVar("id",'');
			$model  =$this->getModel('vendorscenter');
			$codeinfo = $model->getcodeinfo($codeid);
			$this->assignRef('codeinfo',$codeinfo);
			$this->setLayout('editcode');
		}
		else if($task == 'requestmoney'){
			$this->setLayout('requestmoney');
		}
		else if($task == 'mastertext'){
			$this->setLayout('master_text');
		}
		else if($task == 'openinvitation_text'){
		    $model  =$this->getModel('vendorscenter');
			$opentext = $model->getopeninvitationtext();
			$this->assignRef('opentext',$opentext);
		
			$this->setLayout('openinvitation_text');
		}
		else if($task == 'personalinvitation_text'){
		    $model  =$this->getModel('vendorscenter');
			$personaltext = $model->getpersonalinvitationtext();
			$this->assignRef('personaltext',$personaltext);
			$this->setLayout('personalinvitation_text');
		}
		//sreenu
		else if($task == 'promanagerinvitation'){
		    $pathway->addItem( JText::_( 'test' ));
			$model  =$this->getModel('vendorscenter');
			$mailtext = $model->getmanagermailtext();
			$vendors = $model->getprevious(); 
			$rows=$model->getProperties();
			$row1[0] = new stdClass();
			$row1[0]->value = "0";
			$row1[0]->text = "Select Property";
			$rows=array_merge($row1,$rows);
			$this->assignRef('propertyList',$rows);
			$this->assignRef('vendors',$vendors);
			$this->assignRef('mailtext',$mailtext);
			$this->setLayout('promanagerinvitation');
		}
		
		else if($task == 'invitationtoregister'){
		    $model  =$this->getModel('vendorscenter');
		   
			$mailtext = $model->getmanagermailtext();
			$vendors = $model->getprevious(); 
			$rows=$model->getProperties();
			$row1[0] = new stdClass();
			$row1[0]->value = "";
			$row1[0]->text = "Select Property";
			$rows=array_merge($row1,$rows);
			$this->assignRef('propertyList',$rows);
			$this->assignRef('vendors',$vendors);
			$this->assignRef('mailtext',$mailtext);
			$this->setLayout('invitationtoregister');
		}
		else if($task == 'editpropertyowner'){
	     $model  =$this->getModel('vendorscenter');
		 $details = $model->getpropertyowner_details();
		 $this->assignRef('details',$details);
		$client_permissions = $model->client_permissions();
		$this->assignRef('client_permissions',$client_permissions);
	    $states = $model->getstates();
	   $this->assignRef('states',$states);
		$this->setLayout('propertyowner_edit');
		}
		else if($task == 'editboardmem'){
		$model  =$this->getModel('vendorscenter');
		$rows = $model->getProperties();
		//echo '<pre>';print_r($rows);exit;
		$editpropertymanager = $model->getpropertyowner_details();
		$this->assignRef('propertyList',$rows);
		$this->assignRef('managerproperty', $editpropertymanager);
	    $states = $model->getstates();
	   // print_r($states);exit;
	    $this->assignRef('states',$states);
		$this->setLayout('editboardmem');
		}
		
		else if($task == 'editunlinkboard'){
		$model  =$this->getModel('vendorscenter');
		$rows = $model->getProperties();
		//echo '<pre>';print_r($rows);exit;
		$editpropertymanager = $model->editpropertymanager_info();
		$this->assignRef('propertyList',$rows);
		$this->assignRef('managerproperty', $editpropertymanager);
	    $states = $model->getstates();
	    $this->assignRef('states',$states);
		$this->setLayout('editunlinkboard');
		}
		
		else if($task == 'getacountclients')
		{
		$model  =$this->getModel('vendorscenter');
		$rows = $model->getProperties();
		$this->assignRef('propertyList',$rows);
		$this->setLayout('acountclients'); 
		}
		
		else if($task == 'noclinetacount')
		{
		
		$this->setLayout('noclinetacount'); 
		}
		else if($task == 'findnoclient'){
		 
		 $this->setLayout('findnoclient'); 
		}
		else if($task == 'findexectingclient'){
		 
		 $this->setLayout('findexectingclient'); 
		}
		else if($task == 'sendnewproownerinvitation'){
		  $model  =$this->getModel('vendorscenter');
		   
			$mailtext = $model->getmanagermailtext();
			$vendors = $model->getprevious(); 
			$rows=$model->getProperties();
			$row1[0] = new stdClass();
			$row1[0]->value = "0";
			$row1[0]->text = "Select Property";
			$rows=array_merge($row1,$rows);
			$this->assignRef('propertyList',$rows);
			$this->assignRef('vendors',$vendors);
			$this->assignRef('mailtext',$mailtext); 
		 $this->setLayout('sendnewproownerinvitation'); 
		}
		
		else if($task == 'mastermyvendors' )
		{
			// Update recommendation information
			$db = JFactory::getDBO();
			$user = JFactory::getUser();
			$sql = "UPDATE #__cam_manager_recommends SET view='1' where managerid='".$user->id."'"; 
			$db->Setquery($sql);
			$db->query();
			//Completed
			$document = & JFactory::getDocument();
			$document->setTitle( JText::_('Vendor Center') );
			$model = $this->getModel('vendorscenter');
			$uri			=& JFactory::getURI();
			$model			=& $this->getModel();
			$items			=& $this->get('inhouse');
			$prefer			=& $this->get('preferred');
			$excluded		=& $this->get('excluded');
			$total			=& $this->get( 'Total');
			$pagination 	=& $this->get( 'Pagination' );
			$orderby		= ' ORDER BY '. $filter_order .' '. $filter_order_Dir .',published';
			$search 		= JRequest::getWord('search');
			$lists['vendorslist'] =& $this->get( 'vendorslist' ) ;
			$indus = $model->getallindustries(); 
			$this->assignRef('industries',$indus);
			$statelist = $model->getstatelist();
			$this->assignRef('statelist',$statelist);
			$owns = $model->ownpreferredvendors();
			$this->assignRef('own',$owns);
			$pertyownermanagers = $model->getpropertyownermanagers();
			$this->assignRef('pertyownermanagers',$pertyownermanagers);	
			
			$corporate = $model->corporatevendors();
			$this->assignRef('corporate',$corporate);	
			$firmids = $model->getcompanywidevendors();
			$this->assignRef('firmids',$firmids);
			//To get all properties
			$properties = $model->getallproperties();
			$this->assignRef('properties',$properties);
			//Completed
			// Get master global standards
			$global = $model->getmasterglobals();
			$this->assignRef('global',$global);
			//Completed
			$basisjobs = $model->getallbasicjobs();
			$this->assignRef('basisjobs',$basisjobs);
			//Get permission
			$permission = $model->getpermissionstandards();
			$this->assignRef('permission',$permission);
			//Completed
			$recommends = $model->getallrecommendations();
			$this->assignRef('recommends',$recommends);
			$managers_recs = $model->getallmanagersrecommend();
			$this->assignRef('managers_recs',$managers_recs);
			$blockedvendors = $model->getblockedvendors();
			$corporatevendors_star = $model->corporatevendors_star();
			$this->assignRef('corporatevendors_star',		$corporatevendors_star); 
			$this->assignRef('blockedvendors',$blockedvendors);
			$filter_vendorslist		= JRequest::getWord('filter_vendorslist');
			$this->assignRef('user',		JFactory::getUser());	
			$this->assignRef('lists',		$lists);    
			$this->assignRef('items',		$items); 
			$this->assignRef('prefer',		$prefer); 
			$this->assignRef('excluded',		$excluded); 
			$this->assignRef('search',		$search);		
			$this->assignRef('pagination',	$pagination);
			$this->assignRef('request_url',	$uri->toString());
			$this->assignRef('orderby',		$orderby);
			$this->assignRef('filter_vendorslist',	$filter_vendorslist);
			$this->setLayout('mastermyvendors'); 
		}
		
		
	    else //signup process 1
		{
			$model = $this->getModel('vendors');
			//$states = $model->getstates(); 
			$this->assignRef('states',$states);
			//$this->setLayout('company_info_form');
		}
	parent::display();
	}

}
?>
