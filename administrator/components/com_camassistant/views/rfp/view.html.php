<?php
error_reporting(E_ALL ^ E_NOTICE);
/**
 * @version		1.0.0 camassistant $
 * @package		camassistant
 * @copyright	Copyright Â© 2010 - All rights reserved.
 * @license		GNU/GPL
 * @author
 * @author mail	nobody@nobody.com
 *
 *
 * @MVC architecture generated by MVC generator tool at http://www.alphaplug.com
 */

// no direct access
defined('_JEXEC') or die('Restricted access');

jimport( 'joomla.application.component.view' );

//class rfpViewRfp extends Jview
class rfpViewrfp extends Jview
{
	function display($tpl = null){
	$task1	= JRequest::getVar( 'task');
	//$task2	= JRequest::getVar( 'task','add','get');
	//echo "<pre>"; print_r($_REQUEST);
	if($task1=='rfplist'){
	$task='rfplist';
	}
	if($task1=='add'){
	$task='add';
	}
	if($task1==''){
	$task='rfplist';
	}
	if($task1=='edit'){
	$task='edit';
	}
	if($task1=='rfp_bids'){
	$task='rfp_bids';
	}
	if($task1=='rejectform'){
	$task='rejectform';
	}
	if($task1=='editrfpreject'){
	$task='editrfpreject';
	}
	if($task1=='Proposal_edit'){
	$task='Proposal_edit';
	}
	if($task1=='proposal_reject'){
	$task='proposal_reject';
	}
    if($task1=='ineligible_vendors'){
	$task='ineligible_vendors';
	}
	if($task1=='eligible_vendors'){
	$task='eligible_vendors';
	}
	if($task1=='itb_tool'){
	$task='itb_tool';
	}
     if($task1=='itb_tool1'){
	$task='itb_tool1';
	}
	if($task1=='eligible_vendors'){
	$task='eligible_vendors';
	}
	if($task1=='vendor_notes'){
	$task='vendor_notes';
	}
	if($task1=='addnew'){
	$task='newnotes';
	}
if($task1=='editnew'){
	$task='editnotes';
	}
if($task1=='save_notes'){
	$task='save_notes';
	}
if($task1=='followdate'){
	$task='followdate';
	}
if($task1 == 'addrfpnotes'){
 	$task = 'addrfpnotes';
        }
        if($task1 == 'upload_select'){
 	$task = 'upload_select';
        }
        if($task1 == 'Uploadfile'){
 	$task = 'Uploadfile';
        }
	$model			=& $this->getModel('rfp');
	$document = & JFactory::getDocument();
	$document->setTitle( JText::_('Manage RFP\'s') );
	//print_r($_REQUEST);
	$list=$model->getIndustry();

	$list1[0] = new stdClass();
	$list1[0]->value = "";
	$list1[0]->text = "Select Industries";
	$list=array_merge($list1,$list);
	$this->assignRef('industryList',$list);
    rfpViewrfp::$task();
	parent::display($tpl);
	//exit;
	}

	function proposal_reject()
	{
		$this->setLayout('proposal_reject');
	}

	function rejectform(){

	$this->setLayout('rfpreject');
	}
	function editrfpreject(){

	$this->setLayout('editrfpreject');
	}
         function upload_select(){

	$this->setLayout('upload_select');
	}
        
        function Uploadfile(){

	$this->setLayout('task_uploadfile_form');
	}
function itb_tool1(){
 //echo '<pre>'; print_r($_REQUEST);
    $rfp_id			=  JRequest::getVar('cid', '');
   //print_r($rfp_id[0]);
    $industry_id=JRequest::getVar('industry_id');
	$rfpstatus=JRequest::getVar('rfpstatus');
	$rfpapproval=JRequest::getVar('rfpapproval');
	$search=JRequest::getVar('search');
    //exit;
   // $el_link= 'index.php?option=com_camassistant&controller=rfp&task=eligible_vendors&rfpid='.sprintf('%06d', $row->id).'&industry_id='.$industryid.'&rfpstatus='.$rfpstatus.'&rfpapproval='.$rfpapproval.'&search='.$search
    $app =& JFactory::getApplication();
   $app->redirect('index.php?option=com_camassistant&controller=rfp&task=eligible_vendors&rfpid='.sprintf('%06d', $rfp_id[0]).'&industry_id='.$industry_id.'&rfpstatus='.$rfpstatus.'&rfpapproval='.$rfpapproval.'&search='.$search);
}
function itb_tool(){
	error_reporting(0);
	JToolBarHelper::title(   JText::_( 'Eligible Vendors' ), 'generic.png' );
	JToolBarHelper::custom('back','back.png','back.png','back',false);
     JToolBarHelper::save('ineligible_vendors','View Ineligible Vendors');

	//JToolBarHelper::deleteList();
	//JToolBarHelper::back();
	$cid = JRequest::getVar( 'cid', array(0), 'post', 'array' );

	$rfp_id			=  JRequest::getVar('rfp_id', $cid[0]);
    if($rfp_id){
       $rfp_id	=$rfp_id;
     } else {
        $rfp_id	=$_REQUEST['rfp_id'];
     }
     $rfpid			=  JRequest::getVar('rfpid');
    if($rfpid){
       $rfp_id=$rfpid;
    }
	$model			=& $this->getModel('rfp');
	$rfpinfo		=  $model->getrfpinfo($rfp_id);
	$eligible_vendors	=	$model->getVendors($rfpinfo->cust_id,$rfpinfo->property_id,$rfpinfo->id);
	//echo '<pre>'; print_r($eligible_vendors); exit;
	$vendors_bids	=	$model->getVendor_bidsinfo($eligible_vendors,$rfp_id);
	//echo "<pre>"; print_r( $rfpinfo);
	//echo "<pre>"; print_r( $vendors_bids);
	// exit;
	//$vendors_bids1 =array($vendors_bids);
	for($x=0; $x<count($vendors_bids); $x++)
		{
		//echo '<pre>'; print_r($vendors_bids[$x][0]->id);
			 $vendor_GLI_compliance_alert	=	$model->proposalCentre_active_inactive($vendors_bids[$x][0]->id);
			//  echo '<pre>'; print_r($vendor_GLI_compliance_alert);
			 if($vendor_GLI_compliance_alert['PLN_needed'] == 'no') { 
					if($vendor_GLI_compliance_alert['W9_exist'] != 0 && $vendor_GLI_compliance_alert['GLI_exist'] != 0) { 
					$vendors_bids[$x][0]->ProposalCentre_status = 'Active';
					 }  else
					{
					$vendors_bids[$x][0]->ProposalCentre_status = 'Inactive';
					}	
				} else if($vendor_GLI_compliance_alert['PLN_needed'] == 'yes'){ 
					if($vendor_GLI_compliance_alert['W9_exist'] != 0 && $vendor_GLI_compliance_alert['GLI_exist'] != 0 && $vendor_GLI_compliance_alert['PLN_exist'] != 0) { 
					
					$vendors_bids[$x][0]->ProposalCentre_status = 'Active';
					} else
					{
				$vendors_bids[$x][0]->ProposalCentre_status = 'Inactive';
					}	
				} 
			
			/* if(($vendor_GLI_compliance_alert['W9_exist'] != 0 && $vendor_GLI_compliance_alert['GLI_exist'] != 0 && $vendor_GLI_compliance_alert['GLI_status'] == 0 && $vendor_GLI_compliance_alert['W9_status'] == 0 && ($vendor_GLI_compliance_alert['PLN_needed'] == 'no' || ($vendor_GLI_compliance_alert['PLN_needed'] == 'yes' && $vendor_GLI_compliance_alert['PLN_status'] == 0))) && (($vendor_GLI_compliance_alert['GLI_exp'] == 0) && ($vendor_GLI_compliance_alert['W9_status'] == 0) &&  ($vendor_GLI_compliance_alert['PLN_needed'] == 'no' || ($vendor_GLI_compliance_alert['PLN_needed'] == 'yes' && $vendor_GLI_compliance_alert['PLN_exp'] == 0))) )
			 {
				//echo 'Active';
				$vendors_bids[$x][0]->ProposalCentre_status = 'Active';
				//echo '<pre>'; print_r($vendors_bids[$x]);
			 }
			 else
			 {
			 //echo 'Inactive';
				$vendors_bids[$x][0]->ProposalCentre_status = 'Inactive';
			 }
			 */
		}
		//echo '<pre>'; print_r($vendors_bids[$x]);
	$this->assignRef('rfpinfo', $rfpinfo);
	$this->assignRef('rfp_id', $rfp_id);
	$this->assignRef('eligible_vendors', $vendors_bids);
	$this->setLayout('itb_tool');
	}
	function ineligible_vendors(){
	error_reporting(0);
	JToolBarHelper::title(   JText::_( 'Ineligible Vendors' ), 'generic.png' );
	JToolBarHelper::custom('back','back.png','back.png','back',false);
     JToolBarHelper::save('itb_tool','View Eligible Vendors');
	//JToolBarHelper::deleteList();
	//JToolBarHelper::back();
	$cid = JRequest::getVar( 'cid', array(0), 'post', 'array' );

	$rfp_id			=  JRequest::getVar('rfp_id', $cid[0]);
     if($rfp_id){
       $rfp_id	=$rfp_id;
     } else {
        $rfp_id	=$_REQUEST['rfp_id'];
     }
     $rfpid			=  JRequest::getVar('rfpid');
    if($rfpid){
       $rfp_id=$rfpid;
    }
     //print_r($rfp_id);
	$model			=& $this->getModel('rfp');
	$rfpinfo		=  $model->getrfpinfo($rfp_id);
	//$eligible_vendors	=	$model->getVendors($rfpinfo->cust_id,$rfpinfo->property_id,$rfpinfo->id);
    //$vendors_bids	=	$model->getVendors($rfpinfo->cust_id,$rfpinfo->property_id,$rfpinfo->id);
    $eligible_vendors	=	$model->getVendors($rfpinfo->cust_id,$rfpinfo->property_id,$rfpinfo->id);
       $vendors_bids	=	$model->getVendor_bidsinfo_in($eligible_vendors,$rfp_id);
	//echo "<pre>"; print_r($eligible_vendors); exit;
	//$vendors_bids	=	$model->getVendor_bidsinfo($eligible_vendors,$rfp_id);

	for($x=0; $x<count($vendors_bids); $x++)
		{
		//echo '<pre>'; print_r($vendors_bids[$x][0]->id);
			 $vendor_GLI_compliance_alert	=	$model->proposalCentre_active_inactive($vendors_bids[$x][0]->id);
			 if($vendor_GLI_compliance_alert['PLN_needed'] == 'no') { 
					if($vendor_GLI_compliance_alert['W9_exist'] != 0 && $vendor_GLI_compliance_alert['GLI_exist'] != 0) { 
					$vendors_bids[$x][0]->ProposalCentre_status = 'Active';
					 }  else
					{
					$vendors_bids[$x][0]->ProposalCentre_status = 'Inactive';
					}	
				} else if($vendor_GLI_compliance_alert['PLN_needed'] == 'yes'){ 
					if($vendor_GLI_compliance_alert['W9_exist'] != 0 && $vendor_GLI_compliance_alert['GLI_exist'] != 0 && $vendor_GLI_compliance_alert['PLN_exist'] != 0) { 
					$vendors_bids[$x][0]->ProposalCentre_status = 'Active';
					} else
					{
				$vendors_bids[$x][0]->ProposalCentre_status = 'Inactive';
					}	
				} 
			// echo '<pre>'; print_r($vendor_GLI_compliance_alert);
			/*if(($vendor_GLI_compliance_alert['W9_exist'] != 0 && $vendor_GLI_compliance_alert['GLI_exist'] != 0 && $vendor_GLI_compliance_alert['GLI_status'] == 0 && $vendor_GLI_compliance_alert['W9_status'] == 0 && ($vendor_GLI_compliance_alert['PLN_needed'] == 'no' || ($vendor_GLI_compliance_alert['PLN_needed'] == 'yes' && $vendor_GLI_compliance_alert['PLN_status'] == 0))) && (($vendor_GLI_compliance_alert['GLI_exp'] == 0) && ($vendor_GLI_compliance_alert['W9_status'] == 0) &&  ($vendor_GLI_compliance_alert['PLN_needed'] == 'no' || ($vendor_GLI_compliance_alert['PLN_needed'] == 'yes' && $vendor_GLI_compliance_alert['PLN_exp'] == 0))) )
			 {
				//echo 'Active';
				$vendors_bids[$x][0]->ProposalCentre_status = 'Active';
				//echo '<pre>'; print_r($vendors_bids[$x]);
			 }
			 else
			 {
			 //echo 'Inactive';
				$vendors_bids[$x][0]->ProposalCentre_status = 'Inactive';
			 }
			 */
		}
		//echo "<pre>"; print_r( $vendors_bids);  exit;
	$this->assignRef('rfpinfo', $rfpinfo);
	$this->assignRef('rfp_id', $rfp_id);
	$this->assignRef('ineligible_vendors', $vendors_bids);
	$this->setLayout('ineligible_vendors');
	}
function eligible_vendors(){

	JToolBarHelper::title(   JText::_( 'Eligible Vendors' ), 'generic.png' );
	JToolBarHelper::custom('back','back.png','back.png','back',false);

    $cid = JRequest::getVar( 'cid', array(0), 'post', 'array' );
	$rfp_id			=  JRequest::getVar('rfpid', $cid[0]);
    $rfpid			=  JRequest::getVar('rfpid');
    if($rfpid){
       $rfp_id=$rfpid;
    }
   // echo $rfp_id;
    if( $rfp_id!='000000'){
      // echo anand;
    JToolBarHelper::save('ineligible_vendors','View Ineligible Vendors');
   JToolBarHelper::save('itb_tool','View Eligible Vendors');
    }
     // JToolBarHelper::save('ineligible_vendors','View Ineligible Vendors');
	//JToolBarHelper::deleteList();
	//JToolBarHelper::back();

	$model			=& $this->getModel('rfp');
	$rfpinfo		=  $model->getrfpinfo($rfp_id);
	$eligible_vendors	=	$model->getVendors($rfpinfo->cust_id,$rfpinfo->property_id,$rfpinfo->id);
	$vendors_bids	=	$model->getVendor_bidsinfo($eligible_vendors,$rfp_id);

	$vendorslist = $model->getvendorslist();
	$vendorslist1 = $model->getvendorslist1();

	$pagination1 	= & $this->get( 'Pagination1' );
	$list=$model->getIndustry();
	$count_vendors= count($vendors_bids);
   // echo '<pre>'; print_r($vendors_bids); exit;
	$list1[0] = new stdClass();
	$list1[0]->value = "";
	$list1[0]->text = "Select Industries";
	$list=array_merge($list1,$list);
	$this->assignRef('industryList',$list);
	$states = $model->getstates();
	$this->assignRef('states',		$states);
	 //echo "<pre>"; print_r( $vendors_bids);  exit;
	//$this->assignRef('rfpinfo', $rfpinfo);
	//$this->assignRef('rfp_id', $rfp_id);
	//$this->assignRef('eligible_vendors', $vendors_bids);
	$this->assignRef('pagination1',	$pagination1);
	$this->assignRef('vendorslist', $vendorslist);
	$this->assignRef('vendorslist1', $vendorslist1);
	$this->setLayout('eligible_vendors');
	//$count_vendors	=  $model->geteliblevendorscount();
	$this->assignRef('eligiblevendors',	$count_vendors);
}

	function rfp_bids()
	{
	global $mainframe;
	JToolBarHelper::title(   JText::_( 'RFP Bids' ), 'generic.png' );
    JToolBarHelper::custom('controlpanel','html.png','html.png','Control Panel',false);
	//JToolBarHelper::editListX();
	JToolBarHelper::deleteList();
	JToolBarHelper::custom('back','back.png','back.png','back',false);
	//JToolBarHelper::back('');
	$model			=& $this->getModel('rfp');
	$total			= & $this->get( 'Total');
	$pagination 	= & $this->get( 'Pagination' );
	$filter_order_req = JRequest::getWord('filter_order');
	$filter_order_Dir	= $mainframe->getUserStateFromRequest( 'filter_order_Dir',	'filter_order_Dir',	'asc',	'word' );
	$lists['order_Dir']	= $filter_order_Dir;
	$lists['order']		= $filter_order;
	$bids = $model->rfp_bids();
	$noteslist_pro=$model->getallnotes_pro($_REQUEST['rfp_id']);
	$noteslist_over=$model->getallnotes($_REQUEST['rfp_id']);
	$allnotes = array_merge($noteslist_pro, $noteslist_over);
	$this->assignRef('all_notes',$allnotes);
	$this->assignRef('rfpnotes',$noteslist_pro);
	$this->assignRef('noteslist_over',$noteslist_over);
	$this->assignRef('lists',	$lists);
	$this->assignRef('pagination',	$pagination);
	$this->assignRef('bids',$bids);
	$this->setLayout('rfp_bids');
	}
	function vendor_notes(){
	//echo "In view";
	//echo "<pre>"; print_r($_REQUEST); exit;
	 JToolBarHelper::title(   JText::_( 'RFP Notes' ), 'notes.png' );
        JToolBarHelper::addNew('addnew','New');
	JToolBarHelper::custom('back','back.png','back.png','back',false);
	global $mainframe;
	$rfpid = JRequest::getVar('rfpid');
	$vendorid = JRequest::getVar('vendorid');
	$model			=& $this->getModel('rfp');
	$notesinfo=$model->getvendornotes($rfpid, $vendorid);
	$this->assignRef('vendor_notes',$notesinfo);
	$this->setLayout('vendor_notes');
	}
	function add($tpl = null)
	{
    	global $mainframe, $context;
		// Tool Bar  Title
    	JToolBarHelper::title(   JText::_( 'Create RFP' ), 'generic.png' );
  		 // Set toolbar items for the page
	    //JToolBarHelper::custom('controlpanel','html.png','html.png','Control Panel',false);
 		JToolBarHelper::save('submit_rfp');
		//JToolBarHelper::apply();
		JToolBarHelper::cancel();
		$model			=& $this->getModel('rfp');
		$userinfo=$model->userinfo();
	     $rows=$model->getProperties();
		$row1[0] = new stdClass();
		$row1[0]->value = "";
		$row1[0]->text = "-Select Propety-";
		$row1[1]->value = 'addp';
		$row1[1]->text = "Add Property";
		$rows=array_merge($row1,$rows);
		$this->assignRef('propertyList',$rows);
		//For Industries List
        $industry_id =  JRequest::getVar('industry_id');
	$rfpstatus =  JRequest::getVar('rfpstatus');
	$rfpapproval =  JRequest::getVar('rfpapproval');
	$status =  JRequest::getVar('status');
	$search =  JRequest::getVar('search');
		$list=$model->getIndustry();

		$list[0] = new stdClass();
		$list[0]->value = "";
		$list[0]->text = "-Select Industry-";
		$req_parent_id=0;
		$reqCatList=$model->getSplRequiremntCats($req_parent_id);
		/*$list1[0] = new stdClass();
		$list1[0]->value = "";
		$list1[0]->text = "-Select Industry-";*/
		//$list=array_merge($list1,$list);
		//echo "<pre>"; print_r($list);
		$this->assignRef('industryList',$list);
		$this->assignRef('reqCatList',$reqCatList);
		$this->assignRef('userinfo',$userinfo);
		$this->setLayout('rfp_form');
		//call parent display
		return $tpl;
     }



	function edit($tpl = null)
	{
     $rfpid	= JRequest::getVar( 'cid','','post','array');
	 $model			=& $this->getModel('rfp');
	 $rfpinfo=$model->getrfpinfo($rfpid[0]);
	 JToolBarHelper::title(   JText::_( 'Edit RFP' ), 'generic.png' );
   JToolBarHelper::save('view_ineli_vendors','View Ineligible Vendors');
      JToolBarHelper::save('view_eli_vendors','View Eligible Vendors');
	  JToolBarHelper::save('deleterfp','Delete rfp');
     JToolBarHelper::save('save_approve','Save & Approve');
	 JToolBarHelper::save('save_reject','Reject');

 	 JToolBarHelper::save('update_rfp','Save changes silently');
	 JToolBarHelper::save('silent_rfp','Save Addendum & force proposals to DRAFT');

	 if(($rfpinfo->publish=='0')&&($rfpinfo->rfp_type=='rfp')){
	 JToolBarHelper::save('draft_save','Save as Draft');

	}
	//echo '<pre>'; print_r($rfpinfo);
	// JToolBarHelper::apply();
	 JToolBarHelper::cancel();
	$industry_id =  JRequest::getVar('industry_id');
	$rfpstatus =  JRequest::getVar('rfpstatus');
	$rfpapproval =  JRequest::getVar('rfpapproval');
	$status =  JRequest::getVar('status');
	$search =  JRequest::getVar('search');

     $document=& JFactory::getDocument();


		$rfplinetasks=$model->rfplinetasks($rfpinfo->id);
		$rfpuploadfiles=$model->rfpuploadfiles($rfpinfo->id);
		$rfpreqinfo=$model->rfpreqinfo($rfpinfo->id);


		$rows2=$model->userinfo();
		$rows=$model->getProperties();
		//$row1[0] = new stdClass();
		$row1[0]->value = "";
		$row1[0]->text = "-Select Propety-";
		$row1[1]->value = 'addp';
		$row1[1]->text = "Add Propety";
		$rows=array_merge($row1,$rows);
		$this->assignRef('propertyList',$rows);
		$row3[0]->value = "";
		$row3[0]->text = "-Select Property  Manager-";
		$userinfo=array_merge($row3,$rows2);
		$this->assignRef('userinfo',$userinfo);
		//For Industries List
		$list=$model->getIndustry();
		$list1[0] = new stdClass();
		$list1[0]->value = "";
		$list1[0]->text = "-Select Industry-";
		$list=array_merge($list1,$list);
		$req_parent_id=0;
		$reqCatList=$model->getSplRequiremntCats($req_parent_id);
		$Edit_reqCatList=$model->get_Edit_SplRequiremntCats();
		$SPLReq_Category = $model->get_Edit_SPLReq_Category();
		$this->assignRef('SPLReq_Category',$SPLReq_Category);
		/*$list1[0] = new stdClass();
		$list1[0]->value = "";
		$list1[0]->text = "-Select Industry-";
		$list=array_merge($list1,$list);*/
			//To RFO industries
		$rfpindus=$model->getrfpindustries();
		$this->assignRef('rfpindus',$rfpindus);
		$rfpnotes=$model->getallnotes($rfpinfo->id);
		$this->assignRef('rfpnotes',$rfpnotes);
		//Completed
		//echo "<pre>";	print_r($rfpinfo); exit;
		$this->assignRef('rfpinfo',$rfpinfo);
		$this->assignRef('rfpuploadfiles',$rfpuploadfiles);
		$this->assignRef('rfplinetasks',$rfplinetasks);
		$this->assignRef('rfpreqinfo',$rfpreqinfo);
		$this->assignRef('industryList',$list);
		$this->assignRef('reqCatList',$reqCatList);
		$this->assignRef('Edit_reqCatList',$Edit_reqCatList);
		//$this->assignRef('userinfo',$userinfo);
		if($rfpinfo->jobtype == 'yes'){
		$bascifiles=$model->bascifiles($rfpinfo->id);
		$this->assignRef('bascifiles',$bascifiles);
		}
		if($rfpinfo->jobtype == 'yes'){
		$this->setLayout('edit_rfp_form_basic');
		}
		else{
		$this->setLayout('edit_rfp_form');
		}	

		}




function pro_hired(){
$this->setLayout('pro_hired');
		$db=& JFactory::getDBO();

		          $sql12="SELECT industry_name FROM  #__cam_industries where id='".$_GET[industry_id]."'";
					$db->Setquery($sql12);
					$industry = $db->loadResult();
				 $sql12="SELECT * FROM #__cam_property  where id='".$_GET[property_id]."'";
					$db->Setquery($sql12);
					$property = $db->loadobject();

		       $sql12="SELECT introtext  FROM #__content where id='153' ";
					$db->Setquery($sql12);
					$data12 = $db->loadResult();
					$bodytext = str_replace('{Customer Name}',$my->name,$data12);
					$bodytext = str_replace('{CAM Firm}','Cam Assitant',$bodytext);
					$bodytext = str_replace('{Property Name}',$property->property_name,$bodytext);
					$bodytext = str_replace('{PROPERTY}',$property->property_name,$bodytext);
					$bodytext = str_replace('{PROPERTY ADDRESS}',$property->street.','.$property->city.','.$property->state,$bodytext);
					$bodytext = str_replace('{INDUSTRY}',$industry,$bodytext);
					$bodytext = str_replace('{GENERAL PROJECT INFORMATION}','',$bodytext);

		$this->assignRef('bodytext',$bodytext);
		$this->setLayout('pro_hired');

		}
function sow_hired(){
    	$db=& JFactory::getDBO();

			         $sql12="SELECT industry_name FROM  #__cam_industries where id='".$_GET[industry_id]."'";
					$db->Setquery($sql12);
					$industry = $db->loadResult();
				 $sql12="SELECT * FROM #__cam_property  where id='".$_GET[property_id]."'";
					$db->Setquery($sql12);
					$property = $db->loadobject();


	       $sql12="SELECT introtext  FROM #__content where id='153' ";
					$db->Setquery($sql12);
					$data12 = $db->loadResult();
				$bodytext = str_replace('{Customer Name}',$my->name,$data12);
					$bodytext = str_replace('{CAM Firm}','Cam Assitant',$bodytext);
					$bodytext = str_replace('{Property Name}',$property->property_name,$bodytext);
					$bodytext = str_replace('{PROPERTY}',$property->property_name,$bodytext);
					$bodytext = str_replace('{PROPERTY ADDRESS}',$property->street.','.$property->city.','.$property->state,$bodytext);
					$bodytext = str_replace('{INDUSTRY}',$industry,$bodytext);
					$bodytext = str_replace('{GENERAL PROJECT INFORMATION}','',$bodytext);

		   $this->assignRef('bodytext',$bodytext);
			$this->setLayout('sow_hired');

		}

		function pro_hired_camassitant(){
					$db=& JFactory::getDBO();

		          $sql12="SELECT industry_name FROM  #__cam_industries where id='".$_GET[industry_id]."'";
					$db->Setquery($sql12);
					$industry = $db->loadResult();
				 $sql12="SELECT * FROM #__cam_property  where id='".$_GET[property_id]."'";
					$db->Setquery($sql12);
					$property = $db->loadobject();

			       $sql12="SELECT introtext  FROM #__content where id='153' ";
					$db->Setquery($sql12);
					$data12 = $db->loadResult();
		      		$bodytext = str_replace('{Customer Name}',$my->name,$data12);
					$bodytext = str_replace('{CAM Firm}','Cam Assitant',$bodytext);
					$bodytext = str_replace('{Property Name}',$property->property_name,$bodytext);
					$bodytext = str_replace('{PROPERTY}',$property->property_name,$bodytext);
					$bodytext = str_replace('{PROPERTY ADDRESS}',$property->street.','.$property->city.','.$property->state,$bodytext);
					$bodytext = str_replace('{INDUSTRY}',$industry,$bodytext);
					$bodytext = str_replace('{GENERAL PROJECT INFORMATION}','',$bodytext);

		$this->assignRef('bodytext',$bodytext);

		$model=$this->getModel('rfp');
		$list=$model->getIndustry();
		$list[0] = new stdClass();
		$list[0]->value = "";
		$list[0]->text = "-Select Industry-";
		$req_parent_id=0;
	    $this->assignRef('industryList',$list);
        $this->assignRef('bodytext',$bodytext);
		$this->setLayout('pro_hired_camassitant');


		}

	 function rfplist($tpl = null)
	{
    	global $mainframe, $context;


		// Tool Bar  Title


   // Set toolbar items for the page


    	// Set ToolBar title
    	JToolBarHelper::title(   JText::_( 'Manage RFP\'S' ), 'generic.png' );
		JToolBarHelper::custom('controlpanel','html.png','html.png','Control Panel',false);
		JToolBarHelper::custom('itb_tool1','customers.png','customers.png','ITB Tools',false);
		JToolBarHelper::addNewX();
 		JToolBarHelper::editListX();
		JToolBarHelper::deleteList('','deleterfp');
		//JToolBarHelper::publishList();
		//JToolBarHelper::unpublishList();

   		// Set toolbar items for the page


		$model			=& $this->getModel('rfp');
		$filter_order_req = JRequest::getWord('filter_order');
		//if($filter_order_req == '')
		//$filter_order = 'industry_name';
		//else
		//$filter_order = $filter_order_req;
		$filter_order_Dir	= $mainframe->getUserStateFromRequest( 'filter_order_Dir',	'filter_order_Dir',	'asc',			'word' );
		$lists['order_Dir']	= $filter_order_Dir;
		$lists['order']		= $filter_order;

    	// Get URL
		$uri			=& JFactory::getURI();
		//$model			=& $this->getModel();
		$model			=& $this->getModel('rfp');
		//$items			= & $this->get( 'Data');
		$items =   $model->rfplist();
	    $total			= & $this->get( 'Total');
		$pagination 	= & $this->get( 'Pagination' );
		$mans1 = $model->alladmins();
		$this->assignRef('mainadmins',$mans1);

	   // $orderby		= ' ORDER BY '. $filter_order .' '. $filter_order_Dir .',published';
    	//$search 		= JRequest::getWord('search');
		//echo "<pre>"; print_r($items);
		//$total			= & $this->get( 'Total');
		//$pagination 	= & $this->get( 'Pagination' );
		//$orderby		= ' ORDER BY '. $filter_order .' '. $filter_order_Dir .',published';
        //$search 		= JRequest::getWord('search');

		//save a reference into view
		$this->assignRef('user',		JFactory::getUser());
		$this->assignRef('lists',		$lists);
		$this->assignRef('items',		$items);
		$this->assignRef('search',		$search);
		$this->assignRef('pagination',	$pagination);
		$this->assignRef('request_url',	$uri->toString());
		$this->assignRef('orderby',		$orderby);
        $this->setLayout('default');


  }

function newnotes(){
JToolBarHelper::title(   JText::_( 'Add Notes'), 'generic.png' );
//JToolBarHelper::save();
JToolBarHelper::cancel();
$this->setLayout('add_vendornotes');
}
function editnotes(){
JToolBarHelper::title(   JText::_( 'Add Notes'), 'generic.png' );
JToolBarHelper::save();
JToolBarHelper::cancel();
$this->setLayout('add_vendornotes');
$model=& $this->getModel('rfp');
$notes = $model->edit_notes();
$this->assignRef('notes',$notes);
}
function save_notes(){
$model=& $this->getModel('rfp');
$notes = $model->save_notes();
$this->assignRef('notes',$notes);
}
function followdate(){
$model=& $this->getModel('rfp');
$mans = $model->alladmins();
$this->assignRef('admins',$mans);
$this->setLayout('followup');
}

function addrfpnotes(){
	$model=& $this->getModel('rfp');
	$primaryps=$model->getallprimaryproposals($_REQUEST['rfpid']);
	$this->assignRef('propos',$primaryps);
	$this->setLayout('addnewnotes');
}



}
?>
