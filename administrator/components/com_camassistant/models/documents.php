<?php
/**
 * @version		1.0.0 cam assistant $
 * @package		cam_assistant
 * @copyright	Copyright Â© 2010 - All rights reserved.
 * @license		GNU/GPL
 * @author		
 * @author mail	nobody@nobody.com
 *
 *
 * @MVC architecture generated by MVC generator tool at http://www.alphaplug.com
 */

// no direct access
defined('_JEXEC') or die('Restricted access');

jimport( 'joomla.application.component.model' );
class camassistantModelDocuments extends Jmodel
{
	function __construct(){
		parent::__construct();

	}
	function getProperty(){
        $property = array(); 
		$db =& JFactory::getDBO();
		$user =& JFactory::getUser();
        $user_id = $user->get('id');
		$query = "SELECT id,property_name FROM #__cam_property where `property_manager_id` =".$user_id." and share=1";
		$db->setQuery($query);
        $properties=$db->loadObjectList();
		return $properties;
}
	function getShareproperty(){
        $shareproperty = array(); 
		$db =& JFactory::getDBO();
		$query = "SELECT id,property_name FROM #__cam_property where share = 0";
		$db->setQuery($query);
        $shareproperties=$db->loadObjectList();
		return $shareproperties;
}

}
class documentsModelDocuments extends Jmodel
{
function __construct()
	{
		parent::__construct();
 
        global $mainframe, $option;
 
        // Get pagination request variables
        $limit = $mainframe->getUserStateFromRequest('global.list.limit', 'limit', $mainframe->getCfg('list_limit'), 'int');
        $limitstart = JRequest::getVar('limitstart', 0, '', 'int');
 
        // In case limit has been changed, adjust it
        $limitstart = ($limit != 0 ? (floor($limitstart / $limit) * $limit) : 0);
///////no of fields per page//////////////////
		$db =& JFactory::getDBO();
 		$query = "SELECT pagecount FROM #__cam_filetype ";
		$db->setQuery($query);
        $count=$db->loadResult();

///////no of fields per page//////////////////
        $this->setState('limit', $limit);
        $this->setState('limitstart', $limitstart);
	}
function getpdocs(){
		$managerid = JRequest::getVar( 'managerid','' );
        $pdocs = array(); 
		$db =& JFactory::getDBO();
		$query = "SELECT U.id,U.property_name,U.property_manager_id,U.tax_id,V.name,V.lastname FROM #__cam_property as U, #__users as V where U.property_manager_id=".$managerid." AND U.property_manager_id=V.id"; 
		$db->setQuery($query);
        $pdocs=$db->loadObjectList();
		return $pdocs;

}

function getpfiles(){
        $pfiles = array(); 
		$db =& JFactory::getDBO();
		$query = "SELECT * FROM #__cam_propertydocs where parent=0 and `property_manager_id` =".$_REQUEST['mid']." and `property_id` =".$_REQUEST['pid'];
		$db->setQuery($query);
        $pfiles=$db->loadObjectList();
		return $pfiles;
}

function getfileextensions(){
        $lfiles = array(); 
		$db =& JFactory::getDBO();
	$query = "SELECT files FROM #__cam_filetype";
	$db->setQuery($query);
    $lfiles=$db->loadObjectList();
		return $lfiles;
}


function store($data){
        // get the table
JTable::addIncludePath(JPATH_COMPONENT.DS.'tables');
$row =& $this->getTable('propertydocs');
$row = JTable::getInstance('propertydocs','Table');


        // Bind the form fields to the invite table
        if (!$row->bind($data)) {
		
                $this->setError($this->_db->getErrorMsg());
                return false;
        }
 
        // Make sure the hello record is valid
        if (!$row->check()) {
                $this->setError($this->_db->getErrorMsg());
                return false;
        }
 
        // Store the web link table to the database
        if (!$row->store()) {

                $this->setError( $row->getErrorMsg() );
                return false;
        }
 
        return true;         

}
function store1($data){

        // get the table
JTable::addIncludePath(JPATH_COMPONENT.DS.'tables');
$row =& $this->getTable('pdocuments');
$row = JTable::getInstance('pdocuments','Table');


        // Bind the form fields to the invite table
        if (!$row->bind($data)) {
		
                $this->setError($this->_db->getErrorMsg());
                return false;
        }
 
        // Make sure the hello record is valid
        if (!$row->check()) {
                $this->setError($this->_db->getErrorMsg());
                return false;
        }
 
        // Store the web link table to the database
        if (!$row->store()) {

                $this->setError( $row->getErrorMsg() );
                return false;
        }
 
        return true;         

}

function store3($data){

JTable::addIncludePath(JPATH_COMPONENT.DS.'tables');
$row =& $this->getTable('propertydocs');
$row = JTable::getInstance('propertydocs','Table');
        if (!$row->bind($data)) {
                $this->setError($this->_db->getErrorMsg());
                return false;
        }
        if (!$row->check()) {
                $this->setError($this->_db->getErrorMsg());
                return false;
        }
        if (!$row->store()) {
                $this->setError($row->getErrorMsg());
                return false;
        }
        return true;
}
function getcategories(){
    $cats = array();
	$db =& JFactory::getDBO();
    $user =& JFactory::getUser();
    $user_id = $user->get('id');
	$query = "SELECT id,property_name FROM #__cam_property where `property_manager_id`=".$user_id." and `show`=1 and `share`=1 ";
	$db->setQuery($query);
    $cats=$db->loadObjectList();
	return $cats;
}
function getopenfiles($path){

$path = JPATH_SITE."/".$path;

 $dir=dir($path);

while($filename=$dir->read()) {
if($filename!='.'&&$filename!='..')
{
if(strpos($filename,"."))
$data['files'][]=$filename;
else
$data['folders'][]= $filename;
}
}
$dir->close();

return $data;
}

function getcheck(){
	$db =& JFactory::getDBO();
	$query = "SELECT files FROM #__cam_filetype";
	$db->setQuery($query);
    $files=$db->loadResult();
	$sfiles = split(',', $files);
	$ext = explode('.', $_FILES['file']['name']);

if (in_array($ext[1],$sfiles))
  {
 return true;
  }
else
  { 
  echo "This file extension is not matching with the extensions, what we have shown in the file upload form";
//  exit;
  }
}

function getopen(){

		$filename = JRequest::getVar('doc_title','');
		if($filename == ''){
		$filename = JRequest::getVar('title','');
		}
		$file_shared = JRequest::getVar('propertyname','');
		$path = JRequest::getVar('path','');	
		$spath = JRequest::getVar('spath','');		
		if($spath ==''){
		$lastpath = $path;
		} else {$lastpath = $spath; } 
		if($filename == ''){
		$filename = $file_shared;
		}
		$path = JURI::root().$lastpath; 
		$last = substr($path, -1);
		$path = str_replace($filename,'',$path);
		if($last == '/'){
		$doc_name = $path.$filename;
		}
		else{
		$doc_name = $path."/".$filename;
		}

		//echo $doc_name; exit;
		header("content-type: application/octet-stream");		
		header("Content-Disposition: attachment; filename=".$filename);
		readfile($doc_name);
		exit;
}
/////////////////////////////////////////////For shared documents///////////////////////////////

function _buildQuery()
	{

		 $sdocs = array(); 
		 $db =& JFactory::getDBO();
		 $thisid = JRequest::getVar( 'managersid','' );
		 
		 $query = "SELECT user_type FROM #__users WHERE id=".$thisid;
	 	 $db->setQuery($query);
		 $type = $db->loadResult();

		 
		 $query = "SELECT comp_id FROM #__cam_customer_companyinfo WHERE cust_id=".$thisid;
	 	 $db->setQuery($query);
		 $custmors = $db->loadResult();
		 $query = "SELECT cust_id FROM #__cam_camfirminfo WHERE id=".$custmors;
		 $db->setQuery($query);
		 $id = $db->loadResult();
		 if($thisid ==''){
		 $thisid = 0;
		 }
		 if($id ==''){
		 $id = 0;
		 }
		 
		if($type == 13){
		 $query_shared = "SELECT property_id,sdocTitle,property_manager_id,parent_manager FROM #__cam_propertydocs where parent=0 AND (`property_manager_id` =".$thisid." OR parent_manager=".$thisid.") and type='shared'";
		 }
		 else{
		 $query_shared = "SELECT property_id,sdocTitle,property_manager_id,parent_manager FROM #__cam_propertydocs where parent=0 AND `property_manager_id` =".$id." OR `property_manager_id` =".$thisid." and type='shared'";
		 }

		 return $query_shared;
		 
	}

function getPagination()
	{
		// Lets load the content if it doesn't already exist
		if (empty($this->_pagination))
		{
			jimport('joomla.html.pagination');
			$this->_pagination = new JPagination( $this->getTotal(), $this->getState('limitstart'), $this->getState('limit') );
		}

		return $this->_pagination;
	}
  
	function getTotal()
	{
		//DEVNOTE: Lets load the content if it doesn't already exist
		if (empty($this->_total))
		{
			$query = $this->_buildQuery();
			$this->_total = $this->_getListCount($query);
		}

		return $this->_total;
	}
	
	function getData()
	{

		//DEVNOTE: Lets load the content if it doesn't already exist
		if (empty($this->_data))
		{
			 $query = $this->_buildQuery();
			$this->_data = $this->_getList($query, $this->getState('limitstart'), $this->getState('limit'));
		}
		return $this->_data;
}
	function _buildContentOrderBy()
	{
			global $mainframe, $context;

	 $filter_order     = $mainframe->getUserStateFromRequest( $context.'filter_order',      'filter_order',  'hotelname' );

		if(empty($filter_order))
		{
		$filter_order = 'hotelname';
		}
		else
		{
		$filter_order = $filter_order;
		}
		$filter_order_Dir = $mainframe->getUserStateFromRequest( $context.'filter_order_Dir',  'filter_order_Dir','');		
		//DEVNOTE: all countries are in the same category(no category)  

		    $orderby 	= ' ORDER BY '. $filter_order .' '. $filter_order_Dir;
		return $orderby;

	}

function getsfiles(){
        $sfiles = array(); 
		$db =& JFactory::getDBO();
		$user =& JFactory::getUser();
        $user_id = $user->get('id');
		$query = "SELECT * FROM #__cam_propertydocs where `parent`=0 and  `property_id` =".$_REQUEST['spid'];
		$db->setQuery($query);
        $sfiles=$db->loadObjectList();
		return $sfiles;
}

function getscategories(){
        $acats = array(); 
		$db =& JFactory::getDBO();
		$user =& JFactory::getUser();
        $user_id = $user->get('id');
		$query = "SELECT id,property_name FROM #__cam_property where `property_manager_id` =".$user_id." and `show`=1 and `share`=0 ";
		$db->setQuery($query);
        $scats=$db->loadObjectList();
		return $scats;
}

function sstore($data){
JTable::addIncludePath(JPATH_COMPONENT.DS.'tables');
$row =& $this->getTable('propertydocs');
$row = JTable::getInstance('propertydocs','Table');
        if (!$row->bind($data)) {
                $this->setError($this->_db->getErrorMsg());
                return false;
        }
        if (!$row->check()) {
                $this->setError($this->_db->getErrorMsg());
                return false;
        }
        if (!$row->store()) {
                $this->setError( $row->getErrorMsg() );
                return false;
        }
        return true;
}
function sstore3($data){

JTable::addIncludePath(JPATH_COMPONENT.DS.'tables');
$row =& $this->getTable('propertydocs');
$row = JTable::getInstance('propertydocs','Table');
        if (!$row->bind($data)) {
                $this->setError($this->_db->getErrorMsg());
                return false;
        }
        if (!$row->check()) {
                $this->setError($this->_db->getErrorMsg());
                return false;
        }
        if (!$row->store()) {
                $this->setError($row->getErrorMsg());
                return false;
        }
        return true;
}
function getsopenfiles($spath){
$spath = JPATH_SITE."/".$spath;
$sdir=dir($spath);

while($filename=$sdir->read()) {
if($filename!='.'&&$filename!='..')
{
if(strpos($filename,"."))
$data['files'][]=$filename;
else
$data['folders'][]= $filename;
}
}
$sdir->close();

return $data;
}
//to get the managers list
function getmanagers(){
        $sfiles = array(); 
		$db =& JFactory::getDBO();
		$user =& JFactory::getUser();
        $user_id = $user->get('id');
		$query = "SELECT CONCAT(name,' ',lastname)   as text,id as value FROM #__users where user_type!=11 order by name";
		$db->setQuery($query);
        $sfiles=$db->loadObjectList();
		return $sfiles;
}

//Completed
function getdelete(){

$spid = JRequest::getVar( 'spid','' );	
$title = JRequest::getVar( 'title','' );	
$smid = JRequest::getVar( 'smid','' );	
$spath = JRequest::getVar( 'spath','' );	
$db =& JFactory::getDBO();

		 $user =& JFactory::getUser();
        $usertype = $user->get('usertype');
//print_r($usertype); exit;
if($usertype == 'Super Administrator'){
		$query = "DELETE FROM #__cam_propertydocs  WHERE property_manager_id =".$smid." AND property_id=".$spid." AND sdocTitle='".$title."'";  
$db->setQuery($query);
$result = $db->query();
if($result){
$path = $spath;


        if (!$path) {
                // Bad programmer! Bad Bad programmer!
                JError::raiseWarning(500, 'JFolder::delete: ' . JText::_('Attempt to delete base directory') );
                return false;
        }
 
        // Initialize variables
        jimport('joomla.client.helper');
        $ftpOptions = JClientHelper::getCredentials('ftp');
 
        // Check to make sure the path valid and clean
        $path = JPath::clean($path);
 
        // Is this really a folder?
        if (!is_dir($path)) {
                JError::raiseWarning(21, 'JFolder::delete: ' . JText::_('Path is not a folder'), 'Path: ' . $path);
                return false;
        }
 
        // Remove all the files in folder if they exist
        $files = JFolder::files($path, '.', false, true, array());
        if (!empty($files)) {
                jimport('joomla.filesystem.file');
                if (JFile::delete($files) !== true) {
                        // JFile::delete throws an error
                        return false;
                }
        }
 
        // Remove sub-folders of folder
        $folders = JFolder::folders($path, '.', false, true, array());
        foreach ($folders as $folder) {
                if (is_link($folder)) {
                        // Don't descend into linked directories, just delete the link.
                        jimport('joomla.filesystem.file');
                        if (JFile::delete($folder) !== true) {
                                // JFile::delete throws an error
                                return false;
                        }
                } elseif (JFolder::delete($folder) !== true) {
                        // JFolder::delete throws an error
                        return false;
                }
        }
 
        if ($ftpOptions['enabled'] == 1) {
                // Connect the FTP client
                jimport('joomla.client.ftp');
                $ftp = &JFTP::getInstance(
                        $ftpOptions['host'], $ftpOptions['port'], null,
                        $ftpOptions['user'], $ftpOptions['pass']
                );
        }
 
        // In case of restricted permissions we zap it one way or the other
        // as long as the owner is either the webserver or the ftp
        if (@rmdir($path)) {
                $ret = true;
        } elseif ($ftpOptions['enabled'] == 1) {
                // Translate path and delete
                $path = JPath::clean(str_replace(JPATH_ROOT, $ftpOptions['root'], $path), '/');
                // FTP connector throws an error
                $ret = $ftp->delete($path);
        } else {
                JError::raiseWarning(
                        'SOME_ERROR_CODE',
                        'JFolder::delete: ' . JText::_('Could not delete folder'),
                        'Path: ' . $path
                );
                $ret = false;
        }
//        return $ret;

/*jimport('joomla.filesystem.file');
$files = JFolder::files( $dir_delete, '.', true, true );
				foreach( $files as $file )
	$result = 	JFile::delete( $file );
*/

   if ($ret) {
         echo "Directory deleted successfully.", "\n";
   }else {
        echo "Could not delete the directory.", "\n";
   }   }
}
else {
echo "You have no permission to delete the files"; 

 }

}


/////////////////////////////////////////////Shared documents Completed ///////////////////////////////
}
?>